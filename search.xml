<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>链接</title>
    <url>/2022/11/04/hello-world/</url>
    <content><![CDATA[<p><code>链接专栏</code></p>
<span id="more"></span>

<p><a href="https://www.lingshulian.com/s/98835a7e320b6e4d">1.未来梦发布视频</a></p>
<p><a href="https://developer.roblox.com/zh-cn/api-reference">2.Roblox API 参考</a></p>
<p><a href="https://www.lingshulian.com/s/4294585ec0b07683">3.网络通信原理</a></p>
]]></content>
      <tags>
        <tag>Links</tag>
      </tags>
  </entry>
  <entry>
    <title>折枝落梦</title>
    <url>/2022/11/05/%E6%8A%98%E6%9E%9D%E8%90%BD%E6%A2%A6/</url>
    <content><![CDATA[<p>​	<code>我们都栖息在智慧之树下，尝试阅读世界。</code><span id="more"></span></p>
<p>​		<code>我们都栖息在智慧之树下，尝试阅读世界。从土中读、从雨中读，尔后化身白鸟，攀上枝头，终于衔住了至关重要的那一片树叶。</code></p>
<p>​		<code>曾经，我是世上唯一能够做梦的个体。在我的梦里，所有人入夜后都会进入梦乡，人们的脑海中飘出奇思异想。有些滚落地面，有些浮到天上。他将所有事物连接成一片万分夺目的网，三千世界之中，又有小小世界，所有命运，皆在此间沸腾。</code></p>
<p>​		<code>我逐渐明白，这些不可被描述而又恒久变化之物，才是世间最深奥的东西。唯有它们，才能彻底祛除那些疯狂；唯有梦，才能将意识从最深沉的黑暗中唤醒。</code></p>
<p>​		<code>我乃命题之人，亦是求解之人。以世人之梦挽救世界，曾是属于我的答案。而今，你们也寻到了属于自己的答案。我会将所有的梦，归还世人。</code></p>
]]></content>
      <categories>
        <category>Articles</category>
      </categories>
      <tags>
        <tag>Genshin</tag>
      </tags>
  </entry>
  <entry>
    <title>白冰</title>
    <url>/2022/12/22/%E7%99%BD%E5%86%B0/</url>
    <content><![CDATA[<p>2022-12-22</p>
<span id="more"></span>

<p><a href="https://imgse.com/i/zXIran"><img src="https://s1.ax1x.com/2022/12/22/zXIran.md.png" alt="zXIran.md.png"></a><br><a href="https://imgse.com/i/zXIDVs"><img src="https://s1.ax1x.com/2022/12/22/zXIDVs.md.png" alt="zXIDVs.md.png"></a><br><a href="https://imgse.com/i/zXIs5q"><img src="https://s1.ax1x.com/2022/12/22/zXIs5q.md.png" alt="zXIs5q.md.png"></a><br><a href="https://imgse.com/i/zXI0bj"><img src="https://s1.ax1x.com/2022/12/22/zXI0bj.md.png" alt="zXI0bj.md.png"></a><br><a href="https://imgse.com/i/zXI6P0"><img src="https://s1.ax1x.com/2022/12/22/zXI6P0.md.png" alt="zXI6P0.md.png"></a><br><a href="https://imgse.com/i/zXIg2T"><img src="https://s1.ax1x.com/2022/12/22/zXIg2T.md.png" alt="zXIg2T.md.png"></a><br><a href="https://imgse.com/i/zXIfr4"><img src="https://s1.ax1x.com/2022/12/22/zXIfr4.md.png" alt="zXIfr4.md.png"></a><br><a href="https://imgse.com/i/zXIhqJ"><img src="https://s1.ax1x.com/2022/12/22/zXIhqJ.md.png" alt="zXIhqJ.md.png"></a><br><a href="https://imgse.com/i/zXI2xU"><img src="https://s1.ax1x.com/2022/12/22/zXI2xU.md.png" alt="zXI2xU.md.png"></a><br><a href="https://imgse.com/i/zXIWMF"><img src="https://s1.ax1x.com/2022/12/22/zXIWMF.md.png" alt="zXIWMF.md.png"></a><br><a href="https://imgse.com/i/zXIqxO"><img src="https://s1.ax1x.com/2022/12/22/zXIqxO.md.png" alt="zXIqxO.md.png"></a><br><a href="https://imgse.com/i/zXIXse"><img src="https://s1.ax1x.com/2022/12/22/zXIXse.md.png" alt="zXIXse.md.png"></a><br><a href="https://imgse.com/i/zXIOMD"><img src="https://s1.ax1x.com/2022/12/22/zXIOMD.md.png" alt="zXIOMD.md.png"></a></p>
]]></content>
      <categories>
        <category>novelai</category>
      </categories>
      <tags>
        <tag>艺术鉴赏</tag>
      </tags>
  </entry>
  <entry>
    <title>顺序结构</title>
    <url>/2022/11/12/%E9%A1%BA%E5%BA%8F%E7%BB%93%E6%9E%84/</url>
    <content><![CDATA[<p><code>#########</code></p>
<span id="more"></span>

<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#########课前回顾：大家来找茬###########</span></span><br><span class="line"><span class="comment">#任务要求：鸡蛋20元一袋，每袋15枚。输入捐款数，计算并输出可购买的鸡蛋枚数和余额。</span></span><br><span class="line"><span class="comment">#运行示例：输入捐款数450，输出“可购买鸡蛋枚数：330，余额10”</span></span><br><span class="line"><span class="comment">#找出下列程序中的错误，将其修改正确</span></span><br><span class="line">eggNum = money/<span class="number">20</span>*<span class="number">15</span></span><br><span class="line">balance = money%<span class="number">20</span></span><br><span class="line">money</span><br><span class="line"><span class="built_in">input</span>(<span class="string">&quot;请输入捐款数：&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;可购买鸡蛋枚数：&quot;</span>eggNum<span class="string">&quot;，余额：&quot;</span>balance)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#########任务一：计算你的身体质量指数###########</span></span><br><span class="line"><span class="comment">#任务要求：输入体重（公斤）和身高（米），计算BMI指数，保留两位小数</span></span><br><span class="line"><span class="comment">#运行示例：输入身高1.58、体重48，输出BMI为19.23</span></span><br><span class="line"><span class="comment">#任务提示：</span></span><br><span class="line"><span class="comment">#1. BMI = 体重÷身高的平方；</span></span><br><span class="line"><span class="comment">#2. round(a, n)函数可将数值a保留n位小数。例如，round(2.3333,2)返回的值为2位小数2.33。</span></span><br><span class="line">weight=<span class="built_in">float</span>(<span class="built_in">input</span>(<span class="string">&quot;输入体重（公斤）:&quot;</span>))</span><br><span class="line">height=<span class="built_in">float</span>(<span class="built_in">input</span>(<span class="string">&quot;身高（米）:&quot;</span>))</span><br><span class="line">bmi=weight/(height*height)</span><br><span class="line">bmi1=<span class="built_in">round</span>(bmi,<span class="number">2</span>)</span><br><span class="line"><span class="built_in">print</span>(bmi1)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#########任务二：交换变量的值###########</span></span><br><span class="line"><span class="comment">#任务要求：输入两个变量的值，实现两个变量值的交换。输出交换后两个变量的值。</span></span><br><span class="line"><span class="comment">#运行示例：输入两变量值1、2，输出交换后的值：2、1</span></span><br><span class="line"><span class="comment">#任务提示：有一瓶可乐和一瓶雪碧，如何实现瓶中可乐和雪碧的交换？类比交换可乐和雪碧的过程。</span></span><br><span class="line">a=<span class="built_in">input</span>()</span><br><span class="line">b=<span class="built_in">input</span>()</span><br><span class="line">a,b=b,a <span class="comment">#在python中，会在过程中生成一个元组 c，并且c = (b ,a)，然后进行a = c[0] ， b = c[1] 的操作</span></span><br><span class="line"><span class="built_in">print</span>(a)</span><br><span class="line"><span class="built_in">print</span>(b)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#########练习一：计算球的体积###########</span></span><br><span class="line"><span class="comment">#任务要求：对于半径为r的球，其体积的计算公式为V=4/3*π*r**3。现给定r，求V，保留两位小数。</span></span><br><span class="line"><span class="comment">#运行示例：输入半径2，输出球的体积为33.51</span></span><br><span class="line"><span class="comment">#任务提示：在Python中，math模块提供了关于数学运算的常量和函数。其中，math.pi的值为圆周率π。</span></span><br><span class="line"><span class="keyword">import</span> math</span><br><span class="line"></span><br><span class="line">dimension = <span class="built_in">input</span>(<span class="string">&quot;Enter dimension: &quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;dimension: &quot;</span> + <span class="built_in">str</span>(dimension))</span><br><span class="line"></span><br><span class="line">n = <span class="built_in">float</span>(dimension)</span><br><span class="line"></span><br><span class="line">volume = <span class="number">4</span>/<span class="number">3</span>*math.pi*n**<span class="number">3</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;Volume: &quot;</span>,<span class="built_in">round</span>(volume,<span class="number">2</span>))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#########练习二：大象喝水###########</span></span><br><span class="line"><span class="comment">#任务要求：一只大象口渴了，要喝20升水才能解渴，但现在只有一个深h厘米，底面半径为r厘米的小圆桶(h和r都是整数)。问大象至少要喝多少桶水才会解渴。</span></span><br><span class="line"><span class="comment">#运行示例：输入桶的深度：20，桶的底面半径：10，输出大象至少要喝 4 桶水。</span></span><br><span class="line"><span class="keyword">import</span> math <span class="keyword">as</span> m</span><br><span class="line"></span><br><span class="line">r = <span class="built_in">int</span>(<span class="built_in">input</span>(<span class="string">&#x27;enter r:&#x27;</span>))</span><br><span class="line">h = <span class="built_in">int</span>(<span class="built_in">input</span>(<span class="string">&#x27;enter h:&#x27;</span>))</span><br><span class="line">v1 = r**<span class="number">2</span>*m.pi*h/<span class="number">1000</span></span><br><span class="line"><span class="keyword">if</span> <span class="number">20</span>%v1 == <span class="number">0</span>:</span><br><span class="line">    n= <span class="number">20</span>//v1</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    n=<span class="number">1</span>+(<span class="number">20</span>//v1)</span><br><span class="line"><span class="built_in">print</span>(n)</span><br><span class="line"></span><br><span class="line"><span class="comment">#########练习三：分离数字###########</span></span><br><span class="line"><span class="comment">#任务要求：输入一个四位正整数，求其每一位数字之和。</span></span><br><span class="line"><span class="comment">#运行示例：输入1234，输出10</span></span><br><span class="line">number = <span class="built_in">int</span>( <span class="built_in">input</span>(<span class="string">&quot;请输入1个四位整数 number = &quot;</span>) )</span><br><span class="line">qianwei_number = number // <span class="number">1000</span></span><br><span class="line">baiwei_number = ( number - qianwei_number * <span class="number">1000</span> ) // <span class="number">100</span></span><br><span class="line">shiwei_number = ( number - qianwei_number * <span class="number">1000</span> - baiwei_number * <span class="number">100</span> ) // <span class="number">10</span></span><br><span class="line">gewei_number = number % ( qianwei_number * <span class="number">100</span> + baiwei_number * <span class="number">10</span> + shiwei_number )</span><br><span class="line"><span class="built_in">sum</span> = qianwei_number + baiwei_number + shiwei_number +gewei_number</span><br><span class="line"><span class="built_in">print</span>( <span class="string">&quot;%d这个数各位相加的和是%d&quot;</span>%(number,<span class="built_in">sum</span>) )</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Coding</category>
      </categories>
      <tags>
        <tag>Coding</tag>
      </tags>
  </entry>
  <entry>
    <title>顺序结构（1）</title>
    <url>/2022/11/13/%E9%A1%BA%E5%BA%8F%E7%BB%93%E6%9E%84%EF%BC%881%EF%BC%89/</url>
    <content><![CDATA[<p><code>练习三拓展：反转数字（附加练习）</code></p>
<span id="more"></span>

<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#########练习三拓展：反转数字（附加练习）</span></span><br><span class="line"><span class="comment">#任务要求：输入一个四位正整数，将其反转后输出。</span></span><br><span class="line"><span class="comment">#运行示例：输入1234，输出4321；输入1200，输出21。</span></span><br><span class="line"><span class="comment"># -*- coding: UTF-8 -*-</span></span><br><span class="line">a=<span class="built_in">list</span>(<span class="built_in">input</span>())</span><br><span class="line">a.reverse()</span><br><span class="line">first=a[<span class="number">0</span>]</span><br><span class="line">second=a[<span class="number">1</span>]</span><br><span class="line">third=a[<span class="number">2</span>]</span><br><span class="line">fourth=a[<span class="number">3</span>]</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> first==<span class="string">&#x27;0&#x27;</span>:</span><br><span class="line">    <span class="keyword">if</span> second==<span class="string">&#x27;0&#x27;</span>:</span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="built_in">print</span>(second,third,fourth)</span><br><span class="line">    </span><br><span class="line"><span class="keyword">if</span> first==<span class="string">&#x27;0&#x27;</span> <span class="keyword">and</span> second==<span class="string">&#x27;0&#x27;</span>:</span><br><span class="line">    <span class="keyword">if</span> third==<span class="string">&#x27;0&#x27;</span>:</span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="built_in">print</span>(third,fourth)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> first==<span class="string">&#x27;0&#x27;</span> <span class="keyword">and</span> second==<span class="string">&#x27;0&#x27;</span> <span class="keyword">and</span> third==<span class="string">&#x27;0&#x27;</span>:</span><br><span class="line">    <span class="built_in">print</span>(fourth)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> first!=<span class="string">&#x27;0&#x27;</span>:</span><br><span class="line">    <span class="built_in">print</span>(first,second,third,fourth)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">只需要讨论三种情况：</span></span><br><span class="line"><span class="string">逆序排列后</span></span><br><span class="line"><span class="string">    1.第一位为0</span></span><br><span class="line"><span class="string">    2.第一、二位为0</span></span><br><span class="line"><span class="string">    3.第一、二、三位为0</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line">ps.</span><br><span class="line">切片是一个很好用的方法</span><br><span class="line"><span class="built_in">object</span>[start_index:end_index:step]</span><br><span class="line"></span><br><span class="line">step：正负数均可，其绝对值大小决定了切取数据时的‘‘步长”，而正负号决定了“切取方向”，正表示“从左往右”取值，负表示“从右往左”取值。当step省略时，默认为<span class="number">1</span>，即从左往右以步长<span class="number">1</span>取值。</span><br><span class="line"></span><br><span class="line">start_index：表示起始索引（包含该索引对应值）；该参数省略时，表示从对象“端点”开始取值，至于是从“起点”还是从“终点”开始，则由step参数的正负决定，step为正从“起点”开始，为负从“终点”开始。</span><br><span class="line"></span><br><span class="line">end_index：表示终止索引（不包含该索引对应值）；该参数省略时，表示一直取到数据“端点”，至于是到“起点”还是到“终点”，同样由step参数的正负决定，step为正时直到“终点”，为负时直到“起点”。</span><br><span class="line"></span><br><span class="line">pps.</span><br><span class="line">递归函数也不失为一种选择</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Coding</category>
      </categories>
      <tags>
        <tag>Coding</tag>
      </tags>
  </entry>
</search>
