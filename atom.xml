<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Blog</title>
  
  
  <link href="https://yousa.love/atom.xml" rel="self"/>
  
  <link href="https://yousa.love/"/>
  <updated>2023-05-01T09:32:35.915Z</updated>
  <id>https://yousa.love/</id>
  
  <author>
    <name>Rock Zhang</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>lora模型</title>
    <link href="https://yousa.love/2023/05/01/lora%E6%A8%A1%E5%9E%8B/"/>
    <id>https://yousa.love/2023/05/01/lora%E6%A8%A1%E5%9E%8B/</id>
    <published>2023-05-01T08:00:37.000Z</published>
    <updated>2023-05-01T09:32:35.915Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Stable-Diffusion使用"><a href="#Stable-Diffusion使用" class="headerlink" title="Stable Diffusion使用"></a>Stable Diffusion使用</h2><span id="more"></span><ol><li><p>点击拓展模型面板</p><p><img src="https://pic2.imgdb.cn/item/644f86f70d2dde577736aeb7.jpg"></p></li><li><p>选择Lora，点击即可</p><p><img src="https://pic2.imgdb.cn/item/644f87080d2dde577736c4b3.jpg"></p></li></ol><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><blockquote><p>关于Dreambooth，想必大家都已经知道了。LoRA和Dreambooth的关系又是什么？为什么这两个东西都有正则化？</p></blockquote><p>简单来说，目前微调AI绘画模型是这样的：</p><p><img src="https://pic2.imgdb.cn/item/644f871e0d2dde577736f299.jpg"></p><p>区别只有一个：<font color="red">正则化图像</font></p><p>没有正则化图像，他就叫直接微调，有正则化图像，他才叫Dreambooth。</p><p>那LoRA又在哪里？LoRA的全称是：LoRA: Low-Rank Adaptation of Large Language Models、他是为了解决大语言模型太大了（以亿计的参数）才出现的，AI绘画是拿过来借用的。</p><p>LoRA，他只是一种为了简化微调超级大模型需要巨多算力、传大模型麻烦而产生的算法，本质上，还是上面两种微调方法</p><p>转自B站@<a href="https://space.bilibili.com/12566101/dynamic">秋葉aaaki</a></p>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;Stable-Diffusion使用&quot;&gt;&lt;a href=&quot;#Stable-Diffusion使用&quot; class=&quot;headerlink&quot; title=&quot;Stable Diffusion使用&quot;&gt;&lt;/a&gt;Stable Diffusion使用&lt;/h2&gt;</summary>
    
    
    
    
    <category term="novelai" scheme="https://yousa.love/tags/novelai/"/>
    
  </entry>
  
  <entry>
    <title>泠鸢Lora模型</title>
    <link href="https://yousa.love/2023/05/01/%E6%B3%A0%E9%B8%A2Lora%E6%A8%A1%E5%9E%8B/"/>
    <id>https://yousa.love/2023/05/01/%E6%B3%A0%E9%B8%A2Lora%E6%A8%A1%E5%9E%8B/</id>
    <published>2023-05-01T07:46:44.000Z</published>
    <updated>2023-05-01T14:48:13.440Z</updated>
    
    <content type="html"><![CDATA[<h1 id="海盐柠檬："><a href="#海盐柠檬：" class="headerlink" title="海盐柠檬："></a>海盐柠檬：</h1><span id="more"></span><p><a href="https://www.123pan.com/s/k79SVv-iNzJ.html">网盘链接</a></p><p>模型哈希：</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">MD5: 3bb7100f186fa28c720e928d31ddb740</span><br><span class="line">SHA1: b5551755b92393db4fce29b468e69c3d1c9dbfa9</span><br><span class="line">SHA256: 942f802f6122afb741f53b617f0a9cd1871c19ed3d2e0d4c98f2434eb12fecd0</span><br></pre></td></tr></tbody></table></figure><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">提示词：yousa,1girl,</span><br><span class="line"></span><br><span class="line">额外可选提示词：dress, hat , flat chest, red eyes, side ponytail,</span><br><span class="line"></span><br><span class="line">跑图建议使用DPM ++2M或DPM ++SDE算法</span><br><span class="line"></span><br><span class="line">权重根据模型不同可以在0.8-1之间调整</span><br></pre></td></tr></tbody></table></figure><p>预览：</p><p><a href="https://imgse.com/i/p98xeXQ"><img src="https://s1.ax1x.com/2023/05/01/p98xeXQ.png" alt="p98xeXQ.png"></a></p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;海盐柠檬：&quot;&gt;&lt;a href=&quot;#海盐柠檬：&quot; class=&quot;headerlink&quot; title=&quot;海盐柠檬：&quot;&gt;&lt;/a&gt;海盐柠檬：&lt;/h1&gt;</summary>
    
    
    
    
    <category term="novelai" scheme="https://yousa.love/tags/novelai/"/>
    
    <category term="泠鸢yousa" scheme="https://yousa.love/tags/%E6%B3%A0%E9%B8%A2yousa/"/>
    
  </entry>
  
  <entry>
    <title>Typora快速设置文字颜色</title>
    <link href="https://yousa.love/2023/05/01/Typora%E5%BF%AB%E9%80%9F%E8%AE%BE%E7%BD%AE%E6%96%87%E5%AD%97%E9%A2%9C%E8%89%B2/"/>
    <id>https://yousa.love/2023/05/01/Typora%E5%BF%AB%E9%80%9F%E8%AE%BE%E7%BD%AE%E6%96%87%E5%AD%97%E9%A2%9C%E8%89%B2/</id>
    <published>2023-05-01T06:20:13.000Z</published>
    <updated>2023-05-01T06:33:50.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="先安装AutoHotKey"><a href="#先安装AutoHotKey" class="headerlink" title="先安装AutoHotKey"></a>先安装AutoHotKey</h2><span id="more"></span><p><a href="https://autohotkey.com/download/">官方下载</a></p><p><a href="https://www.123pan.com/s/k79SVv-tNzJ.html">网盘</a></p><h2 id="打开记事本，把如下内容复制粘贴进去："><a href="#打开记事本，把如下内容复制粘贴进去：" class="headerlink" title="打开记事本，把如下内容复制粘贴进去："></a>打开记事本，把如下内容复制粘贴进去：</h2><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">; Typora</span><br><span class="line">; 快捷增加字体颜色</span><br><span class="line">; SendInput {Text} 解决中文输入法问题</span><br><span class="line">#IfWinActive ahk_exe Typora.exe</span><br><span class="line">{</span><br><span class="line">    ; Ctrl+Alt+O 橙色</span><br><span class="line">    ^!o::addFontColor("orange")</span><br><span class="line">    ; Ctrl+Alt+R 红色</span><br><span class="line">    ^!r::addFontColor("red")</span><br><span class="line">    ; Ctrl+Alt+B 浅蓝色</span><br><span class="line">    ^!b::addFontColor("cornflowerblue")</span><br><span class="line">}</span><br><span class="line">; 快捷增加字体颜色</span><br><span class="line">addFontColor(color){</span><br><span class="line">    clipboard := "" ; 清空剪切板</span><br><span class="line">    Send {ctrl down}c{ctrl up} ; 复制</span><br><span class="line">    SendInput {TEXT}&lt;font color='%color%'&gt;</span><br><span class="line">    SendInput {ctrl down}v{ctrl up} ; 粘贴</span><br><span class="line">    If(clipboard = ""){</span><br><span class="line">        SendInput {TEXT}&lt;/font&gt; ; Typora 在这不会自动补充</span><br><span class="line">    }else{</span><br><span class="line">        SendInput {TEXT}&lt;/ ; Typora中自动补全标签</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h2 id="将文件保存为ahk后缀的文件"><a href="#将文件保存为ahk后缀的文件" class="headerlink" title="将文件保存为ahk后缀的文件"></a>将文件保存为ahk后缀的文件</h2><p>如<code>TyporaHotKey.ahk</code></p><h2 id="双击运行"><a href="#双击运行" class="headerlink" title="双击运行"></a>双击运行</h2><h2 id="在Typora软件里就可以使用快捷键："><a href="#在Typora软件里就可以使用快捷键：" class="headerlink" title="在Typora软件里就可以使用快捷键："></a>在Typora软件里就可以使用快捷键：</h2><p>如按<code>Ctrl+Alt+O</code>添加橙色，<code>Ctrl+Alt+R</code> 红色，按<code>Ctrl+\</code>取消样式！</p><p>也可以右键 <code>MyHotkeyScript.ahk</code> 脚本文件，点击<code>Compile Script</code>编译脚本成exe程序，就可以不用下载<code>Autohotkey</code>在其他电脑上运行了。</p><p>上面脚本只写了橙色、红色、浅蓝三种颜色，你可以按需照例增加其他颜色或快捷方式！</p><h2 id="加入到开机自启动"><a href="#加入到开机自启动" class="headerlink" title="加入到开机自启动"></a>加入到开机自启动</h2>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;先安装AutoHotKey&quot;&gt;&lt;a href=&quot;#先安装AutoHotKey&quot; class=&quot;headerlink&quot; title=&quot;先安装AutoHotKey&quot;&gt;&lt;/a&gt;先安装AutoHotKey&lt;/h2&gt;</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>Python学习笔记</title>
    <link href="https://yousa.love/2023/05/01/Python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    <id>https://yousa.love/2023/05/01/Python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</id>
    <published>2023-05-01T05:57:45.000Z</published>
    <updated>2023-05-01T07:10:23.652Z</updated>
    
    <content type="html"><![CDATA[<p><strong>笔记</strong></p><span id="more"></span><h1 id="Python3-基础语法"><a href="#Python3-基础语法" class="headerlink" title="Python3 基础语法"></a>Python3 基础语法</h1><h2 id="编码"><a href="#编码" class="headerlink" title="编码"></a>编码</h2><p>默认情况下，Python 3 源码文件以 <strong>UTF-8</strong> 编码，所有字符串都是<code>unicode</code>字符串。 当然你也可以为源码文件指定不同的编码：</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: cp-1252 -*-</span></span><br></pre></td></tr></tbody></table></figure><p>上述定义允许在源文件中使用 Windows-1252 字符集中的字符编码，对应适合语言为保加利亚语、白罗斯语、马其顿语、俄语、塞尔维亚语。</p><hr><h2 id="标识符"><a href="#标识符" class="headerlink" title="标识符"></a>标识符</h2><ul><li>第一个字符必须是字母表中字母或下划线 <strong>_</strong> 。</li><li>标识符的其他的部分由字母、数字和下划线组成。</li><li>标识符对大小写敏感。</li></ul><p>在 Python 3 中，可以用中文作为变量名，非 ASCII 标识符也是允许的了。</p><hr><h2 id="python保留字"><a href="#python保留字" class="headerlink" title="python保留字"></a>python保留字</h2><p>保留字即关键字，我们不能把它们用作任何标识符名称。Python 的标准库提供了一个 keyword 模块，可以输出当前版本的所有关键字：</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">import</span> keyword</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>keyword.kwlist</span><br><span class="line">[<span class="string">'False'</span>, <span class="string">'None'</span>, <span class="string">'True'</span>, <span class="string">'and'</span>, <span class="string">'as'</span>, <span class="string">'assert'</span>, <span class="string">'break'</span>, <span class="string">'class'</span>, <span class="string">'continue'</span>, <span class="string">'def'</span>, <span class="string">'del'</span>, <span class="string">'elif'</span>, <span class="string">'else'</span>, <span class="string">'except'</span>, <span class="string">'finally'</span>, <span class="string">'for'</span>, <span class="string">'from'</span>, <span class="string">'global'</span>, <span class="string">'if'</span>, <span class="string">'import'</span>, <span class="string">'in'</span>, <span class="string">'is'</span>, <span class="string">'lambda'</span>, <span class="string">'nonlocal'</span>, <span class="string">'not'</span>, <span class="string">'or'</span>, <span class="string">'pass'</span>, <span class="string">'raise'</span>, <span class="string">'return'</span>, <span class="string">'try'</span>, <span class="string">'while'</span>, <span class="string">'with'</span>, <span class="string">'yield'</span>]</span><br></pre></td></tr></tbody></table></figure><hr><h2 id="注释"><a href="#注释" class="headerlink" title="注释"></a>注释</h2><p>Python中单行注释以 <strong>#</strong> 开头</p><p>多行注释可以用多个 <strong>#</strong> 号，还有 <code>'''</code> 和 <code>"""</code>：</p><hr><h2 id="行与缩进"><a href="#行与缩进" class="headerlink" title="行与缩进"></a>行与缩进</h2><p>python最具特色的就是使用缩进来表示代码块，不需要使用大括号 <strong>{}</strong> 。</p><p>缩进的空格数是可变的，但是同一个代码块的语句必须包含相同的缩进空格数。</p><p>程序由于缩进不一致，执行后会出现类似以下错误：</p><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">IndentationError: unindent does not match any outer indentation level</span><br></pre></td></tr></tbody></table></figure><hr><h2 id="多行语句"><a href="#多行语句" class="headerlink" title="多行语句"></a>多行语句</h2><p>Python 通常是一行写完一条语句，但如果语句很长，我们可以使用反斜杠来实现多行语句，例如：</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">total = item_one + \</span><br><span class="line">        item_two + \</span><br><span class="line">        item_three</span><br></pre></td></tr></tbody></table></figure><p>在 [], {}, 或 () 中的多行语句，不需要使用反斜杠 ****，例如：</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">total = [<span class="string">'item_one'</span>, <span class="string">'item_two'</span>, <span class="string">'item_three'</span>,</span><br><span class="line">        <span class="string">'item_four'</span>, <span class="string">'item_five'</span>]</span><br></pre></td></tr></tbody></table></figure><hr><h2 id="数字-Number-类型"><a href="#数字-Number-类型" class="headerlink" title="数字(Number)类型"></a>数字(Number)类型</h2><p>python中数字有四种类型：整数、布尔型、浮点数和复数。</p><ul><li><strong>int</strong> (整数), 如 1, 只有一种整数类型 int，表示为长整型，没有 python2 中的 Long。</li><li><strong>bool</strong> (布尔), 如 True。</li><li><strong>float</strong> (浮点数), 如 1.23、3E-2</li><li><strong>complex</strong> (复数), 如 1 + 2j、 1.1 + 2.2j</li></ul><hr><h2 id="字符串-String"><a href="#字符串-String" class="headerlink" title="字符串(String)"></a>字符串(String)</h2><ul><li>Python 中单引号 <strong>‘</strong> 和双引号 <strong>“</strong> 使用完全相同。</li><li>使用三引号(<strong>‘’’</strong> 或 <strong>“””</strong>)可以指定一个多行字符串。</li><li>转义符 <code>\</code>。</li><li>反斜杠可以用来转义，使用 <code>r</code> 可以让反斜杠不发生转义。 如 <code>r"this is a line with \n"</code> 则 <strong>\n</strong> 会显示，并不是换行。</li><li>按字面意义级联字符串，如 <code>"this " "is " "string"</code> 会被自动转换为 <code>this is string</code>。</li><li>字符串可以用 <strong>+</strong> 运算符连接在一起，用 * 运算符重复。</li><li>Python 中的字符串有两种索引方式，从左往右以 <strong>0</strong> 开始，从右往左以 <strong>-1</strong> 开始。</li><li>Python 中的字符串不能改变。</li><li>Python 没有单独的字符类型，一个字符就是长度为 1 的字符串。</li><li>字符串的截取的语法格式如下：<strong>变量[头下标:尾下标:步长]</strong></li></ul><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">word = <span class="string">'字符串'</span></span><br><span class="line">sentence = <span class="string">"这是一个句子。"</span></span><br><span class="line">paragraph = <span class="string">"""这是一个段落，</span></span><br><span class="line"><span class="string">可以由多行组成"""</span></span><br></pre></td></tr></tbody></table></figure><p><strong>实例：</strong></p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">str</span>=<span class="string">'123456789'</span></span><br><span class="line"> </span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">str</span>)                 <span class="comment"># 输出字符串</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">str</span>[<span class="number">0</span>:-<span class="number">1</span>])           <span class="comment"># 输出第一个到倒数第二个的所有字符</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">str</span>[<span class="number">0</span>])              <span class="comment"># 输出字符串第一个字符</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">str</span>[<span class="number">2</span>:<span class="number">5</span>])            <span class="comment"># 输出从第三个开始到第六个的字符（不包含）</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">str</span>[<span class="number">2</span>:])             <span class="comment"># 输出从第三个开始后的所有字符</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">str</span>[<span class="number">1</span>:<span class="number">5</span>:<span class="number">2</span>])          <span class="comment"># 输出从第二个开始到第五个且每隔一个的字符（步长为2）</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">str</span> * <span class="number">2</span>)             <span class="comment"># 输出字符串两次</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">str</span> + <span class="string">'你好'</span>)         <span class="comment"># 连接字符串</span></span><br><span class="line"> </span><br><span class="line"><span class="built_in">print</span>(<span class="string">'------------------------------'</span>)</span><br><span class="line"> </span><br><span class="line"><span class="built_in">print</span>(<span class="string">'hello\nrunoob'</span>)      <span class="comment"># 使用反斜杠(\)+n转义特殊字符</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">r'hello\nrunoob'</span>)     <span class="comment"># 在字符串前面添加一个 r，表示原始字符串，不会发生转义</span></span><br></pre></td></tr></tbody></table></figure><p>这里的 r 指 raw，即 raw string，会自动将反斜杠转义，例如：</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">print</span>(<span class="string">'\n'</span>)       <span class="comment"># 输出空行</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">print</span>(<span class="string">r'\n'</span>)      <span class="comment"># 输出 \n</span></span><br><span class="line">\n</span><br><span class="line">&gt;&gt;&gt;</span><br></pre></td></tr></tbody></table></figure><p><font color="cornflowerblue">以上实例输出结果：</font></p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">123456789</span></span><br><span class="line"><span class="number">12345678</span></span><br><span class="line"><span class="number">1</span></span><br><span class="line"><span class="number">345</span></span><br><span class="line"><span class="number">3456789</span></span><br><span class="line"><span class="number">24</span></span><br><span class="line"><span class="number">123456789123456789</span></span><br><span class="line"><span class="number">123456789</span>你好</span><br><span class="line">------------------------------</span><br><span class="line">hello</span><br><span class="line">runoob</span><br><span class="line">hello\nrunoob</span><br></pre></td></tr></tbody></table></figure><hr><h2 id="空行"><a href="#空行" class="headerlink" title="空行"></a>空行</h2><p>函数之间或类的方法之间用空行分隔，表示一段新的代码的开始。类和函数入口之间也用一行空行分隔，以突出函数入口的开始。</p><p>空行与代码缩进不同，空行并不是 Python 语法的一部分。书写时不插入空行，Python 解释器运行也不会出错。但是空行的作用在于分隔两段不同功能或含义的代码，便于日后代码的维护或重构。</p><p><strong>记住：</strong>空行也是程序代码的一部分。</p><hr><h2 id="等待用户输入"><a href="#等待用户输入" class="headerlink" title="等待用户输入"></a>等待用户输入</h2><p>执行下面的程序在按回车键后就会等待用户输入：</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">input</span>(<span class="string">"\n\n按下 enter 键后退出。"</span>)</span><br></pre></td></tr></tbody></table></figure><p>以上代码中 ，<code>\n\n</code> 在结果输出前会输出两个新的空行。一旦用户按下 <code>enter</code> 键时，程序将退出。</p><hr><h2 id="同一行显示多条语句"><a href="#同一行显示多条语句" class="headerlink" title="同一行显示多条语句"></a>同一行显示多条语句</h2><p>Python 可以在同一行中使用多条语句，语句之间使用分号 <strong><code>;</code></strong> 分割，以下是一个简单的实例：</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> sys; x = <span class="string">'runoob'</span>; sys.stdout.write(x + <span class="string">'\n'</span>)</span><br></pre></td></tr></tbody></table></figure><p>使用脚本执行以上代码，输出结果为：</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">runoob</span><br></pre></td></tr></tbody></table></figure><p>使用交互式命令行执行，输出结果为：</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">import</span> sys; x = <span class="string">'runoob'</span>; sys.stdout.write(x + <span class="string">'\n'</span>)</span><br><span class="line">runoob</span><br><span class="line"><span class="number">7</span></span><br></pre></td></tr></tbody></table></figure><p>此处的 7 表示字符数，<code>runoob</code> 有 6 个字符，<code>\n</code> 表示一个字符，加起来 <strong>7</strong> 个字符。</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">import</span> sys</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>sys.stdout.write(<span class="string">" hi "</span>)    <span class="comment"># hi 前后各有 1 个空格</span></span><br><span class="line"> hi <span class="number">4</span></span><br></pre></td></tr></tbody></table></figure><hr><h2 id="多个语句构成代码组"><a href="#多个语句构成代码组" class="headerlink" title="多个语句构成代码组"></a>多个语句构成代码组</h2><p>缩进相同的一组语句构成一个代码块，我们称之代码组。</p><p>像if、while、def和class这样的复合语句，首行以关键字开始，以冒号( : )结束，该行之后的一行或多行代码构成代码组。</p><p>我们将首行及后面的代码组称为一个子句(clause)。</p><p>如下实例：</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> expression : </span><br><span class="line">   suite</span><br><span class="line"><span class="keyword">elif</span> expression : </span><br><span class="line">   suite </span><br><span class="line"><span class="keyword">else</span> : </span><br><span class="line">   suite</span><br></pre></td></tr></tbody></table></figure><hr><h2 id="print-输出"><a href="#print-输出" class="headerlink" title="print 输出"></a>print 输出</h2><p><strong>print</strong> 默认输出是换行的，如果要实现不换行需要在变量末尾加上 **<code>end=""</code>**：</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">x=<span class="string">"a"</span></span><br><span class="line">y=<span class="string">"b"</span></span><br><span class="line"><span class="comment"># 换行输出</span></span><br><span class="line"><span class="built_in">print</span>( x )</span><br><span class="line"><span class="built_in">print</span>( y )</span><br><span class="line"> </span><br><span class="line"><span class="built_in">print</span>(<span class="string">'---------'</span>)</span><br><span class="line"><span class="comment"># 不换行输出</span></span><br><span class="line"><span class="built_in">print</span>( x, end=<span class="string">" "</span> )</span><br><span class="line"><span class="built_in">print</span>( y, end=<span class="string">" "</span> )</span><br><span class="line"><span class="built_in">print</span>()</span><br></pre></td></tr></tbody></table></figure><p>以上实例执行结果为：</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">a</span><br><span class="line">b</span><br><span class="line">---------</span><br><span class="line">a b</span><br></pre></td></tr></tbody></table></figure><hr><h2 id="import-与-from…import"><a href="#import-与-from…import" class="headerlink" title="import 与 from…import"></a>import 与 from…import</h2><p>在 python 用 <code>import</code> 或者 <code>from...import</code> 来导入相应的模块。</p><p>将整个模块(somemodule)导入，格式为： <code>import somemodule</code></p><p>从某个模块中导入某个函数,格式为： <code>from somemodule import somefunction</code></p><p>从某个模块中导入多个函数,格式为： <code>from somemodule import firstfunc, secondfunc, thirdfunc</code></p><p>将某个模块中的全部函数导入，格式为： <code>from somemodule import *</code></p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="built_in">print</span>(<span class="string">'================Python import mode=========================='</span>)</span><br><span class="line"><span class="built_in">print</span> (<span class="string">'命令行参数为:'</span>)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> sys.argv:</span><br><span class="line">    <span class="built_in">print</span> (i)</span><br><span class="line"><span class="built_in">print</span> (<span class="string">'\n python 路径为'</span>,sys.path)</span><br></pre></td></tr></tbody></table></figure><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> sys <span class="keyword">import</span> argv,path  <span class="comment">#  导入特定的成员</span></span><br><span class="line"> </span><br><span class="line"><span class="built_in">print</span>(<span class="string">'================python from import==================================='</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">'path:'</span>,path) <span class="comment"># 因为已经导入path成员，所以此处引用时不需要加sys.path</span></span><br></pre></td></tr></tbody></table></figure><hr><h2 id="命令行参数"><a href="#命令行参数" class="headerlink" title="命令行参数"></a>命令行参数</h2><p>很多程序可以执行一些操作来查看一些基本信息，Python可以使用-h参数查看各参数帮助信息：</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">python -h</span><br><span class="line">usage: python [option] ... [-c cmd | -m mod | file | -] [arg] ...</span><br><span class="line">Options <span class="keyword">and</span> arguments (<span class="keyword">and</span> corresponding environment variables):</span><br><span class="line">-c cmd : program passed <span class="keyword">in</span> <span class="keyword">as</span> string (terminates option <span class="built_in">list</span>)</span><br><span class="line">-d     : debug output <span class="keyword">from</span> parser (also PYTHONDEBUG=x)</span><br><span class="line">-E     : ignore environment variables (such <span class="keyword">as</span> PYTHONPATH)</span><br><span class="line">-h     : <span class="built_in">print</span> this <span class="built_in">help</span> message <span class="keyword">and</span> exit</span><br><span class="line"></span><br><span class="line">[ etc. ]</span><br></pre></td></tr></tbody></table></figure><p>我们在使用脚本形式执行 Python 时，可以接收命令行输入的参数，具体使用如下：</p><p>Python 提供了 <strong>getopt</strong> 模块来获取命令行参数。</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python test.py arg1 arg2 arg3</span><br></pre></td></tr></tbody></table></figure><p>Python 中也可以所用 <strong>sys</strong> 的 <strong>sys.argv</strong> 来获取命令行参数：</p><ul><li><strong><code>sys.argv</code></strong> 是命令行参数列表。</li><li><strong><code>len(sys.argv)</code></strong> 计算命令行参数个数。</li></ul><p>注：<code>sys.argv[0]</code> 表示脚本名。</p><h3 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h3><p>test.py 文件代码如下：</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span> (<span class="string">'参数个数为:'</span>, <span class="built_in">len</span>(sys.argv), <span class="string">'个参数。'</span>)</span><br><span class="line"><span class="built_in">print</span> (<span class="string">'参数列表:'</span>, <span class="built_in">str</span>(sys.argv))</span><br><span class="line"><span class="built_in">print</span> (<span class="string">'脚本名:'</span>, <span class="built_in">str</span>(sys.argv[<span class="number">0</span>]))</span><br></pre></td></tr></tbody></table></figure><p>执行以上代码，输出结果为：</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">python3 test.py arg1 arg2 arg3</span><br><span class="line">参数个数为: <span class="number">4</span> 个参数。</span><br><span class="line">参数列表: [<span class="string">'test.py'</span>, <span class="string">'arg1'</span>, <span class="string">'arg2'</span>, <span class="string">'arg3'</span>]</span><br><span class="line">脚本名: test.py</span><br></pre></td></tr></tbody></table></figure><h3 id="getopt-模块"><a href="#getopt-模块" class="headerlink" title="getopt 模块"></a>getopt 模块</h3><p>getopt 模块是专门处理命令行参数的模块，用于获取命令行选项和参数，也就是 <code>sys.argv</code>。命令行选项使得程序的参数更加灵活。支持短选项模式 <code>-</code> 和长选项模式 <code>--</code>。</p><p>该模块提供了两个方法及一个异常处理来解析命令行参数。</p><h4 id="getopt-getopt-方法"><a href="#getopt-getopt-方法" class="headerlink" title="getopt.getopt 方法"></a>getopt.getopt 方法</h4><p>getopt.getopt 方法用于解析命令行参数列表，语法格式如下：</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">getopt.getopt(args, options[, long_options])</span><br></pre></td></tr></tbody></table></figure><p>方法参数说明：</p><ul><li><strong>args</strong>: 要解析的命令行参数列表。</li><li><strong>options</strong>: 以字符串的格式定义，<strong>options</strong> 后的冒号 <strong>:</strong> 表示该选项必须有附加的参数，不带冒号表示该选项不附加参数。</li><li><strong>long_options</strong>: 以列表的格式定义，<strong>long_options</strong> 后的等号 <strong>=</strong> 表示如果设置该选项，必须有附加的参数，否则就不附加参数。</li></ul><p>该方法返回值由两个元素组成: 第一个是 <strong>(option, value)</strong> 元组的列表。 第二个是参数列表，包含那些没有 <strong>-</strong> 或 <strong>–</strong> 的参数。</p><p>接下来我们定义一个 site() 函数，然后通过命令行输入站点名称 <strong>name</strong> 和网址 <strong>url</strong>，可以用缩写 <strong>n</strong> 和 <strong>u</strong>:</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> getopt</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="keyword">def</span> <span class="title function_">site</span>():</span><br><span class="line">    name = <span class="literal">None</span></span><br><span class="line">    url = <span class="literal">None</span></span><br><span class="line"> </span><br><span class="line">    argv = sys.argv[<span class="number">1</span>:]</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        opts, args = getopt.getopt(argv, <span class="string">"n:u:"</span>)  <span class="comment"># 短选项模式</span></span><br><span class="line">     </span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">"Error"</span>)</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">for</span> opt, arg <span class="keyword">in</span> opts:</span><br><span class="line">        <span class="keyword">if</span> opt <span class="keyword">in</span> [<span class="string">'-n'</span>]:</span><br><span class="line">            name = arg</span><br><span class="line">        <span class="keyword">elif</span> opt <span class="keyword">in</span> [<span class="string">'-u'</span>]:</span><br><span class="line">            url = arg</span><br><span class="line">     </span><br><span class="line"> </span><br><span class="line">    <span class="built_in">print</span>( name +<span class="string">" "</span> + url)</span><br><span class="line"> </span><br><span class="line">site()</span><br></pre></td></tr></tbody></table></figure><p>测试以上代码，命令行中输入：</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python3 test.py -n yousa -u yousa.love</span><br></pre></td></tr></tbody></table></figure><p>输出结果为：</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yousa yousa.love</span><br></pre></td></tr></tbody></table></figure><p>以下实例演示长选项模式的使用：</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> getopt</span><br><span class="line"> </span><br><span class="line"><span class="keyword">def</span> <span class="title function_">site</span>():</span><br><span class="line">    name = <span class="literal">None</span></span><br><span class="line">    url = <span class="literal">None</span></span><br><span class="line"> </span><br><span class="line">    argv = sys.argv[<span class="number">1</span>:]</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        opts, args = getopt.getopt(argv, <span class="string">"n:u:"</span>,  </span><br><span class="line">                                   [<span class="string">"name="</span>,</span><br><span class="line">                                    <span class="string">"url="</span>])  <span class="comment"># 长选项模式</span></span><br><span class="line">     </span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">"Error"</span>)</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">for</span> opt, arg <span class="keyword">in</span> opts:</span><br><span class="line">        <span class="keyword">if</span> opt <span class="keyword">in</span> [<span class="string">'-n'</span>, <span class="string">'--name'</span>]:</span><br><span class="line">            name = arg</span><br><span class="line">        <span class="keyword">elif</span> opt <span class="keyword">in</span> [<span class="string">'-u'</span>, <span class="string">'--url'</span>]:</span><br><span class="line">            url = arg</span><br><span class="line">     </span><br><span class="line"> </span><br><span class="line">    <span class="built_in">print</span>( name + <span class="string">" "</span> + url)</span><br><span class="line"> </span><br><span class="line">site()</span><br></pre></td></tr></tbody></table></figure><p>测试以上代码，命令行中输入：</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python3 test.py -n yousa -u yousa.love</span><br></pre></td></tr></tbody></table></figure><p>输出结果为：</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yousa yousa.love</span><br></pre></td></tr></tbody></table></figure><p>另外一个方法是 <code>getopt.gnu_getopt</code>，用到的情况比较少，这里不多做介绍。</p><h3 id="Exception-getopt-GetoptError"><a href="#Exception-getopt-GetoptError" class="headerlink" title="Exception getopt.GetoptError"></a>Exception getopt.GetoptError</h3><p>在没有找到参数列表，或选项的需要的参数为空时会触发该异常。</p><p>异常的参数是一个字符串，表示错误的原因。属性 <strong>msg</strong> 和 <strong>opt</strong> 为相关选项的错误信息。</p><h4 id="实例-1"><a href="#实例-1" class="headerlink" title="实例"></a>实例</h4><p>假定我们创建这样一个脚本，可以通过命令行向脚本文件传递两个文件名，同时我们通过另外一个选项查看脚本的使用。脚本使用方法如下：</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">usage: test.py -i &lt;inputfile&gt; -o &lt;outputfile&gt;</span><br></pre></td></tr></tbody></table></figure><p>test.py 文件代码如下所示：</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> sys, getopt</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>(<span class="params">argv</span>):</span><br><span class="line">   inputfile = <span class="string">''</span></span><br><span class="line">   outputfile = <span class="string">''</span></span><br><span class="line">   <span class="keyword">try</span>:</span><br><span class="line">      opts, args = getopt.getopt(argv,<span class="string">"hi:o:"</span>,[<span class="string">"ifile="</span>,<span class="string">"ofile="</span>])</span><br><span class="line">   <span class="keyword">except</span> getopt.GetoptError:</span><br><span class="line">      <span class="built_in">print</span> (<span class="string">'test.py -i &lt;inputfile&gt; -o &lt;outputfile&gt;'</span>)</span><br><span class="line">      sys.exit(<span class="number">2</span>)</span><br><span class="line">   <span class="keyword">for</span> opt, arg <span class="keyword">in</span> opts:</span><br><span class="line">      <span class="keyword">if</span> opt == <span class="string">'-h'</span>:</span><br><span class="line">         <span class="built_in">print</span> (<span class="string">'test.py -i &lt;inputfile&gt; -o &lt;outputfile&gt;'</span>)</span><br><span class="line">         sys.exit()</span><br><span class="line">      <span class="keyword">elif</span> opt <span class="keyword">in</span> (<span class="string">"-i"</span>, <span class="string">"--ifile"</span>):</span><br><span class="line">         inputfile = arg</span><br><span class="line">      <span class="keyword">elif</span> opt <span class="keyword">in</span> (<span class="string">"-o"</span>, <span class="string">"--ofile"</span>):</span><br><span class="line">         outputfile = arg</span><br><span class="line">   <span class="built_in">print</span> (<span class="string">'输入的文件为：'</span>, inputfile)</span><br><span class="line">   <span class="built_in">print</span> (<span class="string">'输出的文件为：'</span>, outputfile)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</span><br><span class="line">   main(sys.argv[<span class="number">1</span>:])</span><br></pre></td></tr></tbody></table></figure><p>执行以上代码，输出结果为：</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">python3 test.py -h</span><br><span class="line">usage: test.py -i &lt;inputfile&gt; -o &lt;outputfile&gt;</span><br><span class="line"></span><br><span class="line">python3 test.py -i inputfile -o outputfile</span><br><span class="line">输入的文件为： inputfile</span><br><span class="line">输出的文件为： outputfile</span><br></pre></td></tr></tbody></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;strong&gt;笔记&lt;/strong&gt;&lt;/p&gt;</summary>
    
    
    
    
    <category term="python" scheme="https://yousa.love/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>pdf测试</title>
    <link href="https://yousa.love/2023/05/01/pdf%E6%B5%8B%E8%AF%95/"/>
    <id>https://yousa.love/2023/05/01/pdf%E6%B5%8B%E8%AF%95/</id>
    <published>2023-05-01T03:32:58.000Z</published>
    <updated>2023-05-01T03:42:44.235Z</updated>
    
    <content type="html"><![CDATA[<p>测试</p><span id="more"></span><iframe style="width:100%;height:500px" src="https://flbook.mwkj.net/c/abd7lDexY1" seamless="seamless" scrolling="no" frameborder="0" allowtransparency="true" allowfullscreen="true"></iframe>]]></content>
    
    
    <summary type="html">&lt;p&gt;测试&lt;/p&gt;</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>元素法典</title>
    <link href="https://yousa.love/2023/04/22/%E5%85%83%E7%B4%A0%E6%B3%95%E5%85%B8/"/>
    <id>https://yousa.love/2023/04/22/%E5%85%83%E7%B4%A0%E6%B3%95%E5%85%B8/</id>
    <published>2023-04-22T04:34:25.000Z</published>
    <updated>2023-05-02T10:25:50.076Z</updated>
    
    <content type="html"><![CDATA[<p><strong>欢迎来到魔法的世界！</strong></p><span id="more"></span><h1 id="冰魔法"><a href="#冰魔法" class="headerlink" title="冰魔法"></a>冰魔法</h1><p>正面tag：</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(((masterpiece))),best quality, illustration,(beautiful detailed girl),beautiful detailed glow,detailed ice,beautiful detailed water,(beautiful detailed eyes),expressionless,(floating palaces),azure hair,disheveled hair,long bangs, hairs between eyes,(skyblue dress),black ribbon,white bowties,midriff,{{{half closed eyes}}},big forhead,blank stare,flower,large top sleeves</span><br></pre></td></tr></tbody></table></figure><p>反面tag：</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">owres,bad anatomy,bad hands,text,error,missing fingers,extra digit,fewer digits,cropped,worst quality,low quality,normal quality,jpeg artifacts,signature,watermark,username,blurry,missing fingers,bad hands,missing arms,large breasts</span><br></pre></td></tr></tbody></table></figure><p>参数：</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Steps: 27, Sampler: Euler a, CFG scale: 7</span><br></pre></td></tr></tbody></table></figure><p>效果：</p><p><img src="https://pic1.imgdb.cn/item/644368d20d2dde5777cbcd70.jpg"></p><h1 id="星空法"><a href="#星空法" class="headerlink" title="星空法"></a>星空法</h1><p>正面tag：</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">((masterpiece)),&nbsp;(((best&nbsp;quality))),&nbsp;((ultra-detailed)),&nbsp;((illustration)),&nbsp;((disheveled&nbsp;hair)),&nbsp;beautiful&nbsp;detailed&nbsp;eyes,&nbsp;(1girl:1.2),(solo),&nbsp;dynamic&nbsp;angle,&nbsp;dark&nbsp;magician&nbsp;girl,(black&nbsp;kneehighs:1.1),(starry&nbsp;tornado:1.4),&nbsp;starry&nbsp;Nebula,&nbsp;((frills)),&nbsp;beautiful&nbsp;detailed&nbsp;sky,&nbsp;beautiful&nbsp;detailed&nbsp;eyes,evil&nbsp;smile,&nbsp;expressionless,hairs&nbsp;between&nbsp;eyes,&nbsp;&nbsp;white&nbsp;&nbsp;hair,pleated&nbsp;skirt,((disreveled&nbsp;hair))</span><br></pre></td></tr></tbody></table></figure><p>反面tag：</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lowres,&nbsp;bad&nbsp;anatomy,&nbsp;bad&nbsp;hands,&nbsp;text,&nbsp;error,&nbsp;missing&nbsp;fingers,&nbsp;extra&nbsp;digit,&nbsp;fewer&nbsp;digits,&nbsp;cropped,&nbsp;worst&nbsp;quality,&nbsp;low&nbsp;quality,&nbsp;normal&nbsp;quality,&nbsp;jpeg&nbsp;artifacts,&nbsp;signature,&nbsp;watermark,&nbsp;username,&nbsp;blurry,missing&nbsp;fingers,bad&nbsp;hands,missing&nbsp;arms</span><br></pre></td></tr></tbody></table></figure><p>参数：</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Steps: 50, Sampler: Euler a, CFG scale: 6</span><br></pre></td></tr></tbody></table></figure><p>效果：</p><p><img src="https://pic1.imgdb.cn/item/64437c120d2dde5777e28338.jpg"></p><h1 id="幻之时"><a href="#幻之时" class="headerlink" title="幻之时"></a>幻之时</h1><p>正面tag：</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">{masterpiece},{best quality},{1girl},Amazing,beautiful detailed eyes,finely detail,Depth of field,extremely detailed CG,original, extremely detailed wallpaper,loli,white_hair,magic_circle,cat_ears,long_hair,white_hair/yellow_eyes,wand,pentagram,clock, {masterpiece},{best quality},{1girl},Amazing,beautiful detailed eyes,finely detail,Depth of field,extremely detailed CG,original, extremely detailed wallpaper,loli, white_hair</span><br></pre></td></tr></tbody></table></figure><p>反面tag：</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nsfw,&nbsp;lowres,&nbsp;bad&nbsp;anatomy,&nbsp;bad&nbsp;hands,&nbsp;text,&nbsp;error,&nbsp;missing&nbsp;fingers,&nbsp;extra&nbsp;digit,&nbsp;fewer&nbsp;digits,&nbsp;cropped,&nbsp;worst&nbsp;quality,&nbsp;low&nbsp;quality,&nbsp;normal&nbsp;quality,&nbsp;jpeg&nbsp;artifacts,&nbsp;signature,&nbsp;watermark,&nbsp;username,&nbsp;blurry,&nbsp;nsfw,&nbsp;lowres,&nbsp;bad&nbsp;anatomy,&nbsp;bad&nbsp;hands,&nbsp;text,&nbsp;error,&nbsp;missing&nbsp;fingers,&nbsp;extra&nbsp;digit,&nbsp;fewer&nbsp;digits,&nbsp;cropped,&nbsp;worst&nbsp;quality,&nbsp;low&nbsp;quality,&nbsp;normal&nbsp;quality,&nbsp;jpeg&nbsp;artifacts,&nbsp;signature,&nbsp;watermark,&nbsp;username,&nbsp;blurry</span><br></pre></td></tr></tbody></table></figure><p>参数：</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Steps: 25, Sampler: Euler a, CFG scale: 7</span><br></pre></td></tr></tbody></table></figure><p>效果：</p><p><img src="https://pic1.imgdb.cn/item/64437d5f0d2dde5777e3c965.jpg"></p><h1 id="圣光法"><a href="#圣光法" class="headerlink" title="圣光法"></a>圣光法</h1><p>正面tag：</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(((masterpiece))),&nbsp;(((best&nbsp;quality))),&nbsp;((ultra-detailed)),&nbsp;(illustration),&nbsp;(detailed&nbsp;light),((an&nbsp;extremely&nbsp;delicate&nbsp;and&nbsp;beautiful)),(beautiful&nbsp;detailed&nbsp;eyes),&nbsp;(sunlight),(angel),solo,young&nbsp;girls,dynamic&nbsp;angle,floating,&nbsp;bare_shoulders,looking_at_viewer&nbsp;,wings&nbsp;,arms_up,halo,Floating&nbsp;white&nbsp;silk,(Holy&nbsp;Light),just&nbsp;like&nbsp;silver&nbsp;stars&nbsp;imploding&nbsp;we&nbsp;absorb&nbsp;the&nbsp;light&nbsp;of&nbsp;day</span><br></pre></td></tr></tbody></table></figure><p>反面tag：</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lowres,&nbsp;bad&nbsp;anatomy,&nbsp;bad&nbsp;hands,&nbsp;text,&nbsp;error,&nbsp;missing&nbsp;fingers,&nbsp;extra&nbsp;digit,&nbsp;fewer&nbsp;digits,&nbsp;cropped,&nbsp;worst&nbsp;quality,&nbsp;low&nbsp;quality,&nbsp;normal&nbsp;quality,&nbsp;jpeg&nbsp;artifacts,&nbsp;signature,&nbsp;watermark,&nbsp;username,&nbsp;blurry,missing&nbsp;fingers,bad&nbsp;hands,missing&nbsp;arms,large&nbsp;breasts</span><br></pre></td></tr></tbody></table></figure><p>参数：</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Steps: 36, Sampler: Euler a, CFG scale: 7</span><br></pre></td></tr></tbody></table></figure><p>效果：</p><img src="https://pic1.imgdb.cn/item/64437f5a0d2dde5777e61c5e.png" style="zoom:50%;"><h1 id="虹彩法"><a href="#虹彩法" class="headerlink" title="虹彩法"></a>虹彩法</h1><blockquote><p><del><em>谁不喜欢色彩斑斓的女孩子呢？</em></del></p></blockquote><p>正面tag：</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">((extremely&nbsp;detailed&nbsp;CG)),((8k_wallpaper)),(((masterpiece))),((best&nbsp;quality)),watercolor_(medium),((beautiful&nbsp;detailed&nbsp;starry&nbsp;sky)),cinmatic&nbsp;lighting,loli,princess,very&nbsp;long&nbsp;rainbow&nbsp;hair,side&nbsp;view,looking&nbsp;at&nbsp;viewer,full&nbsp;body,frills,(far&nbsp;from&nbsp;viewer),((extremely&nbsp;detailed&nbsp;face)),((an&nbsp;extremely&nbsp;delicate&nbsp;and&nbsp;beautiful&nbsp;girl)),((extremely&nbsp;detailed&nbsp;cute&nbsp;anime&nbsp;face)),((extremely&nbsp;detailed&nbsp;eyes)),(((extremely&nbsp;detailed&nbsp;body))),(ultra&nbsp;detailed),illustration,((bare&nbsp;stomach)),((bare&nbsp;shoulder)),small&nbsp;breast,((sideboob)),((((floating&nbsp;and&nbsp;rainbow&nbsp;hair)))),(((Iridescence&nbsp;and&nbsp;rainbow&nbsp;hair))),(((extremely&nbsp;detailed&nbsp;sailor&nbsp;dress))),((((Iridescence&nbsp;and&nbsp;rainbow&nbsp;dress)))),(Iridescence&nbsp;and&nbsp;rainbow&nbsp;eyes),beautiful&nbsp;detailed&nbsp;hair,beautiful&nbsp;detailed&nbsp;dress,dramatic&nbsp;angle,expressionless,(big&nbsp;top&nbsp;sleeves),frills,blush,(ahoge)</span><br></pre></td></tr></tbody></table></figure><p>反面tag：</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lowres,bad&nbsp;anatomy,bad&nbsp;hands,text,error,ugly,duplicate,morbid,boken&nbsp;limb,incorrect&nbsp;limb,fusion&nbsp;finger,lose&nbsp;finger,multiple&nbsp;finger,multiple&nbsp;digit,fusion&nbsp;hand,lose&nbsp;leg,fused&nbsp;leg,multiple&nbsp;leg,bad&nbsp;feet,fewer&nbsp;digits,cropped,worst&nbsp;quality,low&nbsp;quality,normal&nbsp;quality,simple&nbsp;background, jpeg,</span><br></pre></td></tr></tbody></table></figure><p>参数：</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Steps: 28, Sampler: Euler a, CFG scale: 5</span><br></pre></td></tr></tbody></table></figure><p>效果：</p><p><img src="https://pic1.imgdb.cn/item/6443830a0d2dde5777ec3d3b.jpg"></p><h1 id="冬雪法"><a href="#冬雪法" class="headerlink" title="冬雪法"></a>冬雪法</h1><blockquote><p><del>果然雪天还是要配白毛红瞳！</del></p></blockquote><p>正面tag：</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(((masterpiece))),&nbsp;(((best&nbsp;quality))),&nbsp;((ultra-detailed)),&nbsp;(illustration),beautiful&nbsp;detailed&nbsp;sky ,night,stars,(1girl)((an&nbsp;extremely&nbsp;delicate&nbsp;and&nbsp;beautiful&nbsp;girl)),red eyes,dramatic angle,small breasts,(((full body))),hood,cold face and white shirt,(((long white hair))),(red hair),(red plum blossom),((winter)),(((snowflakes))){{{{{{detailed&nbsp;cute&nbsp;anime&nbsp;face}}}}}},cinmatic&nbsp;lighting,((red and white flowers))，hairs&nbsp;between&nbsp;eyes,&nbsp;expressionless, young&nbsp;girl,(((Facing&nbsp;the&nbsp;lens))),(starry sky),((Beautiful&nbsp;face)),((full body)),(sitting),depth_of_field,((colorful)),scenery,hair_flower,lantern,christmas,(starfall)</span><br></pre></td></tr></tbody></table></figure><p>反面tag：</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(((ugly))),(((duplicate))),((morbid)),((mutilated)),(((tranny))),mutated hands,(((poorly drawn hands))),blurry,((bad anatomy)),(((bad proportions))),extra limbs,cloned face,(((disfigured))),(((more than 2 nipples))),((((missing arms)))),(((extra legs))),mutated hands,(((((fused fingers))))),(((((too many fingers))))),(((unclear eyes))),lowers,bad anatomy,bad hands,text,error,missing fingers,extra digit,fewer digits,cropped,worst quality,low quality,normal quality,jpeg artifacts,signature,watermark,username,blurry,bad feet，text font ui,malformed hands,long neck,missing limb,(mutated hand and finger: 1.5),(long body: 1.3),(mutation poorly drawn: 1.2),disfigured,malformed mutated,multiple breasts,</span><br></pre></td></tr></tbody></table></figure><p>参数：</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Steps: 30, Sampler: Euler a, CFG scale: 7</span><br></pre></td></tr></tbody></table></figure><p>效果：</p><p><img src="https://pic1.imgdb.cn/item/644384c90d2dde5777ee3055.jpg"></p><h1 id="银河潜航"><a href="#银河潜航" class="headerlink" title="银河潜航"></a>银河潜航</h1><p>正面tag：</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">(((masterpiece,best quality,an extremely delicate and beautiful,illustration))),</span><br><span class="line"></span><br><span class="line">(from side,medium long shot),</span><br><span class="line"></span><br><span class="line">((a cute_detailed_girl in spacesuit,beautiful_detailed_face in aerospace_helmet)),(((upper body))),(disheveled hair:0.3),</span><br><span class="line"></span><br><span class="line">(((clouds:0.3),multiple_luna,(floating_fortress technology machinery),night sky background)),</span><br><span class="line"></span><br><span class="line">(cyberpunk_aerospace_helmet)</span><br></pre></td></tr></tbody></table></figure><p>反面tag：</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nsfw,lowres,bad anatomy,cropped,worst quality,low quality,normal quality,missing arms,long neck,humpbacked,nude</span><br></pre></td></tr></tbody></table></figure><p>参数：</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Steps: 30, Sampler: DDIM, CFG scale: 7</span><br></pre></td></tr></tbody></table></figure><p>效果：</p><p><img src="https://pic2.imgdb.cn/item/644ce74a0d2dde577790ff80.webp"></p><h1 id="月下湖中"><a href="#月下湖中" class="headerlink" title="月下湖中"></a>月下湖中</h1><p>正面tag：</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">(masterpiece),(wallpaper), (best quality), (best illuminate, best shadow), (best illustration), dynamic angle,</span><br><span class="line"></span><br><span class="line">(+++a girl+++) is walking in front of a delicate and beautiful moon-blue sky, solo, from side,</span><br><span class="line"></span><br><span class="line">(Backlight), mid shot, (the beautiful and delicate girl:1.3), beautiful bare back, (detailed face:1.2), (long floating hair:1.2), (beautiful long dress:1.2), floating dress,</span><br><span class="line"></span><br><span class="line">the girl (walking) on surface of the water, Beautiful and delicate violet light water surface, reflective water surface,</span><br><span class="line"></span><br><span class="line">High saturation blue clouds and (stars sky) in the background, cold color </span><br></pre></td></tr></tbody></table></figure><p>反面tag：</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">((((ugly)))),lowres, bad anatomy,worst quality, low quality, normal quality,</span><br><span class="line"></span><br><span class="line">bad hands, text, error, missing fingers, extra digit, fewer digits, cropped, jpeg artifacts, signature, watermark, username, blurry, Missing limbs, three arms, bad feet,</span><br><span class="line"></span><br><span class="line">text font ui, signature, blurry, malformed hands, long neck, mutated hands and fingers :1.5).(long body :1.3),(mutation ,poorly drawn :1.2), disfigured, malformed, mutated, multiple breasts, futa, yaoi, three legs, huge breasts</span><br></pre></td></tr></tbody></table></figure><p>参数：</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Steps: 30, Sampler: Euler a, CFG scale: 7</span><br></pre></td></tr></tbody></table></figure><p>效果：</p><p><img src="https://pic2.imgdb.cn/item/644ceb1a0d2dde5777948efc.png"></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;strong&gt;欢迎来到魔法的世界！&lt;/strong&gt;&lt;/p&gt;</summary>
    
    
    
    
    <category term="novelai" scheme="https://yousa.love/tags/novelai/"/>
    
  </entry>
  
  <entry>
    <title>《名侦探柯南》主线整理</title>
    <link href="https://yousa.love/2023/04/22/%E3%80%8A%E5%90%8D%E4%BE%A6%E6%8E%A2%E6%9F%AF%E5%8D%97%E3%80%8B%E4%B8%BB%E7%BA%BF%E6%95%B4%E7%90%86/"/>
    <id>https://yousa.love/2023/04/22/%E3%80%8A%E5%90%8D%E4%BE%A6%E6%8E%A2%E6%9F%AF%E5%8D%97%E3%80%8B%E4%B8%BB%E7%BA%BF%E6%95%B4%E7%90%86/</id>
    <published>2023-04-22T03:54:13.000Z</published>
    <updated>2023-04-22T04:40:55.642Z</updated>
    
    <content type="html"><![CDATA[<p>转载自：B站@<a href="https://space.bilibili.com/586669368">棕四火</a></p><span id="more"></span><h1 id="故事的缘起"><a href="#故事的缘起" class="headerlink" title="故事的缘起"></a>故事的缘起</h1><p>001 云霄飞车杀人事件 // 新一被两个黑衣人灌下特殊药成为柯南</p><p>002 董事长千金绑架事件 // 柯南寄宿毛利兰家</p><p>003 偶像密室杀人事件  //  冲野洋子初登场</p><p>005 新干线大爆破事件 // 得知两个黑衣人外号分别是琴酒和伏特加</p><p>006 情人节杀人事件  //  铃木园子初登场 </p><p>007 每月一件礼物威胁事件 // 小兰第一次怀疑柯南是新一</p><p>009 天下第一夜祭杀人事件//横沟参悟初登场</p><p>010 足球选手恐吓事件//赤木英雄初登场</p><p>014 奇怪的寻人事件 // 宫野明美（广田雅美）初登场（存在bug）</p><p>019 六月新娘杀人事件//松本清长初登场</p><p>033 咖啡店杀人事件//妃英理初登场</p><p>044 江户川柯南诱拐事件 // 工藤优作、工藤有希子初登场并知道柯南真实身份</p><p>049-050 外交官杀人事件 // 服部平次初登场//柯南第一次变回新一</p><p>056 电玩公司杀人事件 // 龙舌兰登场并死亡</p><p>059-060 福尔摩斯迷杀人事件 // 服部平次知道柯南真实身份</p><p>068 夜路杀人事件//高木涉正式登场</p><p>078-079 柯南对怪盗基德//怪盗基德、中森银三、铃木朋子初登场 </p><p>080 名家连续惨死事件//服部平藏初登场</p><p>099-102 走投无路的名侦探，连续两大杀人事件 // 小兰第二次怀疑柯南是新一//山村操初登场</p><p>118 帝丹小学七大离奇事件//小林澄子初登场</p><p>124-125 浪花连续杀人事件//远山和叶、远山银司郎、大泷悟郎、沼渊己一郎初登场</p><h1 id="灰原哀篇"><a href="#灰原哀篇" class="headerlink" title="灰原哀篇"></a>灰原哀篇</h1><p>135 黑衣组织10亿元抢劫事件 // 宫野明美被杀</p><p>136-139 来自黑衣组织的女子，大学教授杀人事件 // 宫野志保（灰原哀）初登场</p><p>140-141 竞技场一视同仁胁迫事件 // 佐藤美和子初登场</p><p>156-157 总局刑警恋爱物语//宫本由美初登场</p><p>162 神秘老人失踪事件//夏本梓初登场</p><p>163-164 园子的危险夏日物语 // 京极真初登场</p><p>172-173 飞天密室 工藤新一最初的事件 // 新一第一次处理命案</p><p>190-192 与黑衣组织的再会 // 灰原哀第一次变回宫野志保 </p><h1 id="贝尔摩德篇"><a href="#贝尔摩德篇" class="headerlink" title="贝尔摩德篇"></a>贝尔摩德篇</h1><p>181-182 黑暗中的死角 // 新出医生初登场【候选人】</p><p>203-208 生死一瞬间 // 小兰第三次怀疑柯南是新一//柯南第二次变回新一</p><p>233-234 目暮警官尘封在内心里的秘密//目暮绿初登场</p><p>235-238 名侦探齐聚一堂！工藤新一VS怪盗基德//首次提乌丸莲耶//白马探、寺井黄之助初登场</p><p>241-243人鱼失踪记</p><p>245-246 战斗游戏的陷阱 // 茱蒂初登场【候选人】</p><p>249-250 神秘的乘客 // 赤井秀一初登场【候选人】</p><p>261 元太的灾难 // 琴酒信息</p><p>265-266 网中谜</p><p>277-278 来自芝加哥的男人 // 詹姆斯初登场</p><p>282-285 大阪双重疑案 浪花剑客与太阁城//冲田总司初登场</p><p>288-190 情人节的真相</p><p>291-292 犯罪的纪念品</p><p>293-294 情急之下的应变之道</p><p>299-300 英语教师VS关西名侦探 // 柯南调查朱蒂</p><p>301-302 疯狂足球迷//比护隆佑、莎朗·温亚德初登场</p><p>306-307 中华街的雨中幻影//横沟重悟初登场</p><p>308-310 工藤新一的纽约事件 // 毛利兰第一次见到贝尔摩德</p><p>311-312 光彦森林迷失记//沼渊己一郎相关//圆谷朝美（光彦姐姐）初登场</p><p>323-324 恶意与圣者的游行//松田阵平被回忆</p><p>326-329 撼动警视厅1200万名人质 // 松田阵平正式初登场// 萩原研二初登场</p><p>332-333 遗留的无声 // 板仓卓登场</p><p>334-336 接触黑色组织 // 柯南冒充板仓卓交易差点被发现</p><p>350-352 火焰中的红马//弓长警部初登场</p><p>354-355 用钱买不到的友情//宫野厚司&amp;爱莲娜信息</p><p>358-359 相似的两位公主</p><p>360-361 东都现象所的秘密</p><p>363-364 四台保时捷 // 新出智明第一次接触到灰原哀</p><p>365-366 隐藏在厕所里的秘密 // 灰原哀得到其母亲宫野艾莲娜的录音带</p><p>369-370 便利商店的陷阱 // 小兰发现朱蒂在调查新一</p><p>371-375 与黑衣组织面对面对决，满月的双重案件 // 贝尔摩德身份曝光</p><p>376-377 找寻臀部上的记号 // 灰原哀拒绝FBI保护计划</p><p>392-393 帝丹高中校园灵异事件 // 新出智明回归</p><p>405-406 星星与香菸的暗号 // Boss在鸟取县 </p><p>419-421 斯托拉帝巴力欧斯不协调的和音 前奏曲 // Boss电子邮箱地址曝光</p><p>428-430 诡异宅院大冒险</p><p>432-433 诡谲家族的委托 </p><p>434 满腹疑惑的小兰 // 小兰第四次怀疑柯南是新一</p><p>455-456 银杏色的初恋 // 阿笠博士的故事 </p><h1 id="红与黑的对决篇"><a href="#红与黑的对决篇" class="headerlink" title="红与黑的对决篇"></a>红与黑的对决篇</h1><p>459-463 黑色冲击，组织之手伸来的瞬间 // 水无怜奈(基尔)、基安蒂、科恩初登场</p><p>465-466 超机密的上学路 </p><p>467-468 无法回头的两个人 // 本堂瑛佑初登场</p><p>473-474 侦探团备受瞩目的采访 </p><p>502-505 黑色组织之影系列 // 红黑篇前奏</p><p>512-513 工藤新一少年冒险 //黑羽盗一初登场</p><p>527-528 黑色照片的下落 // 调查伊森本堂</p><p>536-537 服部平次v.s.工藤新一 滑雪场的推理对决 </p><p>538-551 红与黑的撞击系列//水无怜奈身份曝光 // 卡梅隆初登场 // 赤井秀一殉职</p><p>554-555 卡拉OK包厢的死角 // 本堂瑛佑知道柯南身份</p><h1 id="波本篇"><a href="#波本篇" class="headerlink" title="波本篇"></a>波本篇</h1><p>556 红白黄色和侦探团 // 冲矢昴初登场【候选人】</p><p>557 柯南vs双重暗号之谜 // 柯南邀请冲矢昴入住工藤家</p><p>558 推理对决 新一v.s.冲矢昴 // 得知冲矢昴喜欢喝”波本”酒</p><p>564-566 风火林山系列 // 大和敢助，上原由衣初登场</p><p>570-571 杀人犯工藤新一</p><p>572-573 新一的真实身分和小兰的眼泪 // 柯南第三次变回新一</p><p>574 真正想知道的事</p><p>575-576 憎恨的蓝色火花 </p><p>593-594 鱼儿消失的一角岩 // 冲矢昴再喝”波本”酒</p><p>608 危险的二人组  </p><p>609-612 死亡之馆赤壁系列 // 诸伏高明初登场 </p><p>614-615 侦探团v.s.抢匪团系列 // 伤疤赤井秀一现身</p><p>629 引发危机的红色前兆 // 寻找伤疤赤井秀一</p><p>630 黑色13的暗示 // 琴酒怀疑赤井秀一没死</p><p>631 步步逼近的黑色期限 // 琴酒，伏特加，基尔再提波本</p><p>632 摇曳的红色目标 </p><p>667-672 福尔摩斯默示录系列 // 柯南第四次变回新一 // 新一对小兰告白</p><p>673-674 紧急事件252</p><p>675 初恋的影像录//三池苗子初登场</p><p>695-696 美味得要死的拉面//不是很重要但是剧情很好</p><p>697-698 幽灵饭店的推理对决 // 世良真纯初登场【候选人】</p><p>699-701 侦探事务所挟持事件系列</p><p>702-703 柯南v.s.平次 东西侦探推理对决</p><p>704-707 毒与恨的设计系列 // 米原樱子登场 </p><p>708-709 博士的影音网站 // 冲矢昴窃听柯南灰原哀谈话</p><p>719-720 婚礼前夕 // 安室透初登场【候选人】 </p><p>723-726 侦探们的夜想曲系列 // 冲矢昴，世良真纯，安室透同时出场</p><p>727-728 一点都不原谅</p><p>733 赌上性命的恋爱转播//伊达航初登场</p><p>735 以性命为赌注的恋爱转播</p><p>736-737 泡沫 热气与烟</p><p>742-743 工藤优作的未解决事件 // 冲矢昴知道柯南真实身份</p><p>746 老店消失的日式甜点 // 画质大提升（非主线）</p><p>751-752 迫近灰原秘密的黑影 // 灰原哀第二次变会宫野志保 // 为下集做铺垫</p><p>753-756 漆黑的神秘列车 // 波本身份曝光</p><h1 id="绯色篇"><a href="#绯色篇" class="headerlink" title="绯色篇"></a>绯色篇</h1><p>757-758 密室里的柯南，揭开谜底的波本</p><p>774-775 香甜冰冷的宅急便 </p><p>776-777 怪盗基德与赤面人鱼//怪盗基德知道世良是女生//暗示世良和秀一是</p><p>兄妹</p><p>779-780 装满水果的宝箱 </p><p>783-784 现场的邻人是前男友 // 羽田秀吉初登场</p><p>786-787 茱蒂的回忆与赏花陷阱 // 柯南与茱蒂交流情报被偷听</p><p>791-792 小五郎在BAR </p><p>793-794 小兰也昏倒的浴室 // 世良在推理前打电话</p><p>804-805 招财三色猫事件//安室透称柯南“将利爪隐藏在天真的笑容之下”</p><p>807-809 红衣女的惨剧 // 领域外的妹妹第一次登场（本集很精彩，推荐观看）</p><p>812-813 恋爱小说的意外结果 // 领域外的妹妹（世良玛丽）正式登场</p><p>816-817 柯南与平次 恋爱的信号 // 你要对我的和叶做什么</p><p>823-824 气氛僵硬的茶会 // 安室透调查楠田陆道 // 安室透的信息</p><p>825-826 工藤新一水族馆事件 </p><p>832-836 绯色系列 // 安室透、冲矢昴身份揭晓 </p><h1 id="朗姆篇（连载中）"><a href="#朗姆篇（连载中）" class="headerlink" title="朗姆篇（连载中）"></a>朗姆篇（连载中）</h1><p>838-839 太阁之恋名人战 // 世良搬进杯户尊豪酒店</p><p>840-841 盛夏沉入泳池的谜</p><p>845-846 三个第一发现者 //  朗姆有关信息</p><p>863-864 镰鼬旅馆</p><p>865-867 县警的黑暗 // 黑田兵卫初登场【候选人】 </p><p>868 悄悄靠近安室的黑暗</p><p>869-870 博客女演员的密室事件 </p><p>882-883 好吃到要死的拉面2 // 领妹的真名</p><p>891-892 关系恶劣的女子乐队</p><p>898-899 不明真相的侦探团</p><p>904-905 结婚登记表的密码 // 羽田浩司相关 </p><p>908-909 樱花班的回忆</p><p>916-917 与17年前一样的案发现场 // 羽田浩司案件</p><p>918-919 灵魂侦探凶杀案 // 柯南认为羽田浩司被朗姆杀害</p><p>921-922 背叛的舞台 //波本和贝尔摩德调查浅香</p><p>933-934 试衣间的死角</p><p>936-937 涟漪上的魔法师</p><p>940-941 在白罗咖啡厅解谜//伊织无我初登场</p><p>944-945 新老师的骸骨事件 // 若狭留美初登场【候选人】 </p><p>949-950 隔壁的江户式推理秀 // 胁田兼则初登场【候选人】  </p><p>951-952 手部白皙的女人</p><p>956-957 妃律师的求救讯号 // 毛利兰第五次怀疑江户川柯南是工藤新一</p><p>964-965 燃烧帐篷的怪物 // 黑田兵卫，若狭留美出场</p><p>971-972 恋爱与推理的剑道大赛 </p><p>974-975 女子高中生3人组的秘密咖啡店</p><p>980-981 充满心意的手机吊饰//风见裕也初登场</p><p>982-985 红色的修学旅行 // 世纪之吻</p><p>998-999 寻找玛丽亚</p><p>1009-1011 充满谜团的鸡尾酒</p><p>1028-1031 目标是警视厅交通部</p><p>1040-1041 基德对高明 被盯上的嘴唇</p><p>1050-1052  替身京极真</p><p>1060-1062  36宫格的完美犯罪 // 朗姆性格曝光</p><p>1068-1069 挖野草与四叶草</p><p>1075-1077 藏不住的古董盘 </p><p>1081-1082 大冈红叶的挑战书</p><p>1086 警察学校篇 疯狂警察故事 松田阵平篇</p><p>1090-1092 太阁名人的将棋盘</p><p>1095 警察学校篇 疯狂警察故事伊达航篇</p><p>1096 会飞的万圣节南瓜//联动M25//非主线</p><p>1099 警察学校篇 疯狂警察故事 萩原研二篇</p><p>1102-1103 遭天谴的生日宴//世良偷解药</p><p>1110-1111 掉入牧场的火种//若狭留美击倒安室透</p><p>1116-1117冲野洋子和阁楼的密室//胁田兼则登场</p><p>1118 警察学校篇 疯狂警察故事诸伏景光篇</p><p>1128-1129 工藤优作的推理秀//海猿岛篇的预热//结尾有重要主线</p><p>1134 警察学校篇 疯狂警察故事降谷零篇</p><p>1135-1137 黑暗组织的谋略篇//红与黑的再次碰撞//朗姆登场//朗姆揭晓</p><p>1138 对准灰原哀的摄像头//联动M26//非主线</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;转载自：B站@&lt;a href=&quot;https://space.bilibili.com/586669368&quot;&gt;棕四火&lt;/a&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="名探偵コナン" scheme="https://yousa.love/categories/%E5%90%8D%E6%8E%A2%E5%81%B5%E3%82%B3%E3%83%8A%E3%83%B3/"/>
    
    
  </entry>
  
  <entry>
    <title>生成式人工智能服务管理办法</title>
    <link href="https://yousa.love/2023/04/22/%E7%94%9F%E6%88%90%E5%BC%8F%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E6%9C%8D%E5%8A%A1%E7%AE%A1%E7%90%86%E5%8A%9E%E6%B3%95/"/>
    <id>https://yousa.love/2023/04/22/%E7%94%9F%E6%88%90%E5%BC%8F%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E6%9C%8D%E5%8A%A1%E7%AE%A1%E7%90%86%E5%8A%9E%E6%B3%95/</id>
    <published>2023-04-22T02:22:22.000Z</published>
    <updated>2023-05-01T03:43:04.675Z</updated>
    
    <content type="html"><![CDATA[<h2 id="生成式人工智能服务管理办法"><a href="#生成式人工智能服务管理办法" class="headerlink" title="生成式人工智能服务管理办法"></a>生成式人工智能服务管理办法</h2><p>（征求意见稿）</p><span id="more"></span><p><strong>第一条</strong> 为促进生成式人工智能健康发展和规范应用，根据《中华人民共和国网络安全法》《中华人民共和国数据安全法》《中华人民共和国个人信息保护法》等法律、行政法规，制定本办法。</p><p><strong>第二条</strong> 研发、利用生成式人工智能产品，面向中华人民共和国境内公众提供服务的，适用本办法。本办法所称生成式人工智能，是指基于算法、模型、规则生成文本、图片、声音、视频、代码等内容的技术。</p><p><strong>第三条</strong> 国家支持人工智能算法、框架等基础技术的自主创新、推广应用、国际合作，鼓励优先采用安全可信的软件、工具、计算和数据资源。</p><p><strong>第四条</strong> 提供生成式人工智能产品或服务应当遵守法律法规的要求，尊重社会公德、公序良俗，符合以下要求：</p><p><strong>（一）利用生成式人工智能生成的内容应当体现社会主义核心价值观</strong>，不得含有颠覆国家政权、推翻社会主义制度，煽动分裂国家、破坏国家统一，宣扬恐怖主义、极端主义，宣扬民族仇恨、民族歧视，暴力、淫秽色情信息，虚假信息，以及可能扰乱经济秩序和社会秩序的内容。</p><p>（二）在算法设计、训练数据选择、模型生成和优化、提供服务等过程中，采取措施防止出现种族、民族、信仰、国别、地域、性别、年龄、职业等歧视。</p><p>（三）尊重知识产权、商业道德，不得利用算法、数据、平台等优势实施不公平竞争。</p><p>（四）利用生成式人工智能生成的内容应当真实准确，采取措施防止生成虚假信息。</p><p>（五）尊重他人合法利益，防止伤害他人身心健康，损害肖像权、名誉权和个人隐私，侵犯知识产权。禁止非法获取、披露、利用个人信息和隐私、商业秘密。</p><p><strong>第五条</strong> 利用生成式人工智能产品提供聊天和文本、图像、声音生成等服务的组织和个人（以下称“提供者”），包括通过提供可编程接口等方式支持他人自行生成文本、图像、声音等，承担该产品生成内容生产者的责任；涉及个人信息的，承担个人信息处理者的法定责任，履行个人信息保护义务。</p><p><strong>第六条</strong> 利用生成式人工智能产品向公众提供服务前，应当按照《具有舆论属性或社会动员能力的互联网信息服务安全评估规定》向国家网信部门申报安全评估，并按照《互联网信息服务算法推荐管理规定》履行算法备案和变更、注销备案手续。</p><p><strong>第七条</strong> 提供者应当对生成式人工智能产品的预训练数据、优化训练数据来源的合法性负责。用于生成式人工智能产品的预训练、优化训练数据，应满足以下要求：</p><p>（一）符合《中华人民共和国网络安全法》等法律法规的要求；</p><p>（二）不含有侵犯知识产权的内容；</p><p>（三）数据包含个人信息的，应当征得个人信息主体同意或者符合法律、行政法规规定的其他情形；</p><p>（四）能够保证数据的真实性、准确性、客观性、多样性；</p><p>（五）国家网信部门关于生成式人工智能服务的其他监管要求。</p><p><strong>第八条</strong> 生成式人工智能产品研制中采用人工标注时，提供者应当制定符合本办法要求，清晰、具体、可操作的标注规则，对标注人员进行必要培训，抽样核验标注内容的正确性。</p><p><strong>第九条</strong> 提供生成式人工智能服务应当按照《中华人民共和国网络安全法》规定，要求用户提供真实身份信息。</p><p><strong>第十条</strong> 提供者应当明确并公开其服务的适用人群、场合、用途，采取适当措施防范用户过分依赖或沉迷生成内容。</p><p><strong>第十一条</strong> 提供者在提供服务过程中，对用户的输入信息和使用记录承担保护义务。不得非法留存能够推断出用户身份的输入信息，不得根据用户输入信息和使用情况进行画像，不得向他人提供用户输入信息。法律法规另有规定的，从其规定。</p><p><strong>第十二条</strong> 提供者不得根据用户的种族、国别、性别等进行带有歧视性的内容生成。</p><p><strong>第十三条</strong> 提供者应当建立用户投诉接收处理机制，及时处置个人关于更正、删除、屏蔽其个人信息的请求；发现、知悉生成的文本、图片、声音、视频等侵害他人肖像权、名誉权、个人隐私、商业秘密，或者不符合本办法要求时，应当采取措施，停止生成，防止危害持续。</p><p><strong>第十四条</strong> 提供者应当在生命周期内，提供安全、稳健、持续的服务，保障用户正常使用。</p><p><strong>第十五条</strong> 对于运行中发现、用户举报的不符合本办法要求的生成内容，除采取内容过滤等措施外，应在3个月内通过模型优化训练等方式防止再次生成。</p><p><strong>第十六条</strong> 提供者应当按照《互联网信息服务深度合成管理规定》对生成的图片、视频等内容进行标识。</p><p><strong>第十七条</strong> 提供者应当根据国家网信部门和有关主管部门的要求，提供可以影响用户信任、选择的必要信息，包括预训练和优化训练数据的来源、规模、类型、质量等描述，人工标注规则，人工标注数据的规模和类型，基础算法和技术体系等。</p><p><strong>第十八条</strong> 提供者应当指导用户科学认识和理性使用生成式人工智能生成的内容，不利用生成内容损害他人形象、名誉以及其他合法权益，不进行商业炒作、不正当营销。用户发现生成内容不符合本办法要求时，有权向网信部门或者有关主管部门举报。</p><p><strong>第十九条</strong> 提供者发现用户利用生成式人工智能产品过程中违反法律法规，违背商业道德、社会公德行为时，包括从事网络炒作、恶意发帖跟评、制造垃圾邮件、编写恶意软件，实施不正当的商业营销等，应当暂停或者终止服务。</p><p><strong>第二十条</strong> 提供者违反本办法规定的，由网信部门和有关主管部门按照《中华人民共和国网络安全法》《中华人民共和国数据安全法》《中华人民共和国个人信息保护法》等法律、行政法规的规定予以处罚。法律、行政法规没有规定的，由网信部门和有关主管部门依据职责给予警告、通报批评，责令限期改正；拒不改正或者情节严重的，责令暂停或者终止其利用生成式人工智能提供服务，并处一万元以上十万元以下罚款。构成违反治安管理行为的，依法给予治安管理处罚；构成犯罪的，依法追究刑事责任。</p><p><strong>第二十一条</strong> 本办法自2023年 月 日起实施。</p>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;生成式人工智能服务管理办法&quot;&gt;&lt;a href=&quot;#生成式人工智能服务管理办法&quot; class=&quot;headerlink&quot; title=&quot;生成式人工智能服务管理办法&quot;&gt;&lt;/a&gt;生成式人工智能服务管理办法&lt;/h2&gt;&lt;p&gt;（征求意见稿）&lt;/p&gt;</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>Word文档转Markdown</title>
    <link href="https://yousa.love/2023/04/09/Word%E6%96%87%E6%A1%A3%E8%BD%ACMarkdown/"/>
    <id>https://yousa.love/2023/04/09/Word%E6%96%87%E6%A1%A3%E8%BD%ACMarkdown/</id>
    <published>2023-04-09T02:30:13.000Z</published>
    <updated>2023-04-09T03:16:46.551Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://www.123pan.com/s/k79SVv-PGzJ.html">下载链接</a></p><span id="more"></span><ol><li><p>安装软件</p></li><li><p>切换到word文件所在目录，打开命令行</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pandoc -f docx -t markdown --extract-media ./ -o output.md input.docx</span><br></pre></td></tr></tbody></table></figure><blockquote><p>-f docx：指定源文件为 docx 格式（from）<br>-t markdown：指定我们要转为 md 格式（to）<br>–extract-media ./：将图片文件导出到目录 ./<br>-o output.md：表示输出的文件名为 output.md（output）<br>input.docx：表示要转换的文件为 input.docx</p></blockquote></li><li><p>详细信息请阅读官方文档</p></li></ol>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;a href=&quot;https://www.123pan.com/s/k79SVv-PGzJ.html&quot;&gt;下载链接&lt;/a&gt;&lt;/p&gt;</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>《云服务在电子游戏领域的应用》</title>
    <link href="https://yousa.love/2023/04/09/%E3%80%8A%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%9C%A8%E7%94%B5%E5%AD%90%E6%B8%B8%E6%88%8F%E9%A2%86%E5%9F%9F%E7%9A%84%E5%BA%94%E7%94%A8%E3%80%8B/"/>
    <id>https://yousa.love/2023/04/09/%E3%80%8A%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%9C%A8%E7%94%B5%E5%AD%90%E6%B8%B8%E6%88%8F%E9%A2%86%E5%9F%9F%E7%9A%84%E5%BA%94%E7%94%A8%E3%80%8B/</id>
    <published>2023-04-09T02:15:36.000Z</published>
    <updated>2023-04-09T02:18:44.340Z</updated>
    
    <content type="html"><![CDATA[<p><strong>云服务在电子游戏领域的应用</strong></p><p><strong>摘要：</strong></p><span id="more"></span><p>​随着互联网的迅速发展以及网络数据传输服务的迅速发展，云服务逐渐被应用在更多的领域以及更大的范围，以云计算为基础的新型游戏模式”云游戏”也逐步走进大众视野。本文主要介绍了云计算和云游戏的概念，阐述云游戏的相应的基础技术以及云游戏平台的运营模式，并对云游戏产业链进行了相应调查。总结了云游戏相比以往传统游戏模式的优势以及云游戏市场的发展状况。</p><p><strong>【关键词】云服务，云计算，云游戏，市场</strong></p><h1 id="云游戏及其基本技术概念"><a href="#云游戏及其基本技术概念" class="headerlink" title="云游戏及其基本技术概念"></a>云游戏及其基本技术概念</h1><h2 id="云服务概念"><a href="#云服务概念" class="headerlink" title="云服务概念"></a>云服务概念</h2><blockquote><p>云服务（cloud service）是基于互联网的相关服务的增加、使用和交互模式，通常涉及通过互联网来提供动态易扩展且经常是虚拟化的资源。云是网络、互联网的一种比喻说法。过去在图中往往用云来表示电信网，后来也用来表示互联网和底层基础设施的抽象。云服务指通过网络以按需、易扩展的方式获得所需服务。这种服务可以是IT和软件、互联网相关，也可是其他服务。它意味着计算能力也可作为一种商品通过互联网进行流通。</p></blockquote><h2 id="云计算概念"><a href="#云计算概念" class="headerlink" title="云计算概念"></a>云计算概念</h2><blockquote><p>云计算（cloud computing）是分布式计算的一种，指的是通过网络”云”将巨大的数据计算处理程序分解成无数个小程序，然后，通过多部服务器组成的系统进行处理和分析这些小程序得到结果并返回给用户。</p></blockquote><h2 id="云游戏概念"><a href="#云游戏概念" class="headerlink" title="云游戏概念"></a>云游戏概念</h2><blockquote><p>云游戏（cloud game）是以云计算为基础的游戏方式，在云游戏的运行模式下，所有游戏都在服务器端运行，并将渲染完毕后的游戏画面压缩后通过网络传送给用户。在客户端，用户的游戏设备不需要任何高端处理器和显卡，只需要基本的视频解压能力就可以了。</p></blockquote><h1 id="云游戏产生原因分析"><a href="#云游戏产生原因分析" class="headerlink" title="云游戏产生原因分析"></a>云游戏产生原因分析</h1><h2 id="大型网络游戏的普及"><a href="#大型网络游戏的普及" class="headerlink" title="大型网络游戏的普及"></a><strong>大型网络游戏的普及</strong></h2><blockquote><p><img src="https://pic.imgdb.cn/item/64321da80d2dde5777bb995b.jpg">近年来，越来越多大型网络游戏出现，同时玩家人数也一直在不断上涨。</p></blockquote><h2 id="硬件性能的限制"><a href="#硬件性能的限制" class="headerlink" title="硬件性能的限制"></a>硬件性能的限制</h2><blockquote><p>一般来说，此类大型网络游戏对于游戏设备的性能都有相对较高的要求，同时游戏的包体也很大（如《原神》3.4版本PC端占用53.1GB，云游戏则只有300多MB）而一般的游戏玩家并不愿意因此承担高昂的硬件费用，所以云游戏便成为了相当一部分的用户选择。</p></blockquote><p><img src="https://pic.imgdb.cn/item/64321dd30d2dde5777bbd706.jpg"></p><p>上图为<code>原神</code>Windows端完整包体</p><p><img src="https://pic.imgdb.cn/item/64321de10d2dde5777bbe7a6.jpg"></p><p>上图为<code>原神</code>云游戏包体</p><h1 id="云游戏相关基础技术"><a href="#云游戏相关基础技术" class="headerlink" title="云游戏相关基础技术"></a>云游戏相关基础技术</h1><h2 id="虚拟化技术"><a href="#虚拟化技术" class="headerlink" title="虚拟化技术"></a>虚拟化技术</h2><blockquote><p>虚拟化技术（Virtualization Technology）和多任务（Multitasking）、超线程技术（Hyper-Threading）是完全不同的。多任务是指在一个操作系统中多个程序同时并行运行，而在虚拟化技术中，你可以拥有多个独立的操作系统同时运行，每一个操作系统中都有多个程序运行，每一个操作系统都运行在一个虚拟的CPU或虚拟主机（虚拟机）上。而Hyper-Threading超线程只是在SMP系统（Symmetric Multi Processing）中单CPU模拟双CPU来平衡程序运行性能，这两个模拟出来的CPU是不能分离的，只能协同工作。如果一个CPU同时支持Hyper-Threading和虚拟化技术的话，每一个虚拟CPU在各自的操作系统中都被看成是两个对称多任务处理的CPU。</p><p>虚拟化技术使得游戏厂商并不用将游戏进行很大的改动便可以移植到云游戏平台上同时让玩家获得原汁原味的游戏体验。虚拟化技术是云计算对实现计算资源和存储资源充分高效利用的关键。这项技术可以将对象的操作系统、计算机系统、存储设备和网络资源等进行虚拟化并生成--个虚拟版本,使得用户可以用与访问抽象前资源--致的方法访问抽象后的资源。从而隐藏属性和操作之间的差异并允许通过一种通用的方式来查看和维护资源，将应用程序以及数据，在不同的层次以不同的面貌加以展现,进而使不同层次的使用者、开发者及维持人员能够方便的使用，开发，维护和管理程序。</p></blockquote><h2 id="远程渲染映射（Remote-Rendering-Mapping）技术"><a href="#远程渲染映射（Remote-Rendering-Mapping）技术" class="headerlink" title="远程渲染映射（Remote Rendering Mapping）技术"></a>远程渲染映射（Remote Rendering Mapping）技术</h2><blockquote><p>基本原理是用户在客户端发出各种游戏的指令和控制信号，由网络传送到云游戏的云端服务器平台，云端服务器运用其强大的处理器和显卡对游戏画面进行渲染并对游戏涉及到的数据进行运算。最后将渲染完毕的游戏画面形成视频流并压缩（一般基于H.264或H.265编码）通过高速网络传送至客户端解压呈现在终端显示部件上。是云游戏的核心技术。</p></blockquote><p>a.  指令流的实现框架<img src="https://pic.imgdb.cn/item/64321e370d2dde5777bc4481.jpg"></p><p>b.  音视频流的实现框架<img src="https://pic.imgdb.cn/item/64321e490d2dde5777bc580f.jpg"></p><p>c.  云游戏完整框架</p><p><img src="https://pic.imgdb.cn/item/64321e640d2dde5777bc77d5.jpg"></p><h1 id="云游戏运营模式"><a href="#云游戏运营模式" class="headerlink" title="云游戏运营模式"></a>云游戏运营模式</h1><blockquote><p>云游戏运维主要包含边缘节点管理，游戏管理，游戏自动更新，账户管理，游戏安全管理，服务器通信等工作。云游戏需要维护大量的边缘计算节点，大量的游戏，而且游戏一般都比较大且更新频繁，需要及时处理游戏自动更新分发同步等问题。</p></blockquote><h2 id="边缘计算节点管理"><a href="#边缘计算节点管理" class="headerlink" title="边缘计算节点管理"></a>边缘计算节点管理</h2><blockquote><p>云游戏服务的云端是服务器集群，为了保证低延时，一般会在不同地域设置多个服务器集群，要同时维护这些节点是云游戏运营重要的一环。</p></blockquote><h1 id="云游戏相对于传统游戏的优势和劣势"><a href="#云游戏相对于传统游戏的优势和劣势" class="headerlink" title="云游戏相对于传统游戏的优势和劣势"></a>云游戏相对于传统游戏的优势和劣势</h1><h2 id="优势"><a href="#优势" class="headerlink" title="优势"></a>优势</h2><blockquote><ol><li><p>云游戏不需要安装，可以快速进行游戏的访问。</p></li><li><p>云游戏的画质一般都高于终端设备。</p></li><li><p>云游戏的处理主要在服务器上进行，因此，云游戏对终端设备的要求比较低。</p></li><li><p>云游戏的游戏版本升级，全部都在服务器上进行，终端只需要更新云服务平台版本，因此游戏的版本升级，非常方便，终端无感知，每次都可以玩最新的游戏版本。</p></li></ol></blockquote><h2 id="劣势"><a href="#劣势" class="headerlink" title="劣势"></a>劣势</h2><blockquote><ol><li><p>云游戏对网络传输带宽要求很高，在网络传输带宽限制下，一些高清晰度的游戏在特定的网络环境下是无法基于云游戏实现的。</p></li><li><p>云游戏对网络的时延要求也比较高，在无线网络中传输的时候，如采用4G，5G网络来传输时，容易在一些区域造成卡顿，影响玩家的体验。</p></li></ol></blockquote><h1 id="云游戏产业链"><a href="#云游戏产业链" class="headerlink" title="云游戏产业链"></a>云游戏产业链</h1><h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><blockquote><p>云游戏产业链可以分为上游的游戏研发、中游的游戏运营云服务、下游的游戏终端。而中游的游戏运营云服务包含游戏云平台、云服务商及通信运营商三个主体。</p></blockquote><h2 id="游戏研发商"><a href="#游戏研发商" class="headerlink" title="游戏研发商"></a>游戏研发商</h2><blockquote><p>研发、制作游戏产品，提供内容。在云游戏时代，游戏体验跨越设备限制，用户对于游戏品质的要求预计越来越高，预计游戏品类更加重度化，龙头游戏研发商的优势有望扩大。</p></blockquote><h2 id="云游戏平台"><a href="#云游戏平台" class="headerlink" title="云游戏平台"></a>云游戏平台</h2><blockquote><p>负责云游戏运营，基于云化技术，负责游戏指令流和视频流的编解码，将游戏内容和IaaS （Infrastructure as a Service，基础设施即服务）有云对接。分为 PC云游戏平台和移动云游戏平台两大赛道，大量初创公司在 2012-2015年切入此领域，通过提过游戏运营的云化服务，产生订阅收入。巨头如华为、腾讯2019年通过合作和推出自有平台的方式切入该领域。预计订阅收入将成为云游戏平台的主要收入来源，也将成为云游戏时代除了游戏内道具付费之外的重要变现方式。</p></blockquote><h2 id="云服务商"><a href="#云服务商" class="headerlink" title="云服务商"></a>云服务商</h2><blockquote><p>具备IDC（Internet Data Center，互联网数据中心）提供算力和存储服务，主要为 IaaS公有云平台，包括阿里云、腾讯云、华为云、百度云等。游戏只是其云计算服务的一个领域。</p></blockquote><h2 id="通信运营商"><a href="#通信运营商" class="headerlink" title="通信运营商"></a>通信运营商</h2><blockquote><p>高速稳定的网络是游戏数据传输和游戏画面流畅的先决条件。运营商的 5G网络具备高下载速度、低延迟等优势，成为用户终端-云平台数据传输的重要通道。同时，运营商在推广5G套餐时，云游戏可能成为重要的内容抓手，因此运营商在云游戏领域或将拥有用户入口优势，成为重要的分发平台。</p></blockquote><h2 id="设备提供商"><a href="#设备提供商" class="headerlink" title="设备提供商"></a>设备提供商</h2><blockquote><p>由于云游戏将游戏的运行放在云端，终端设备只需有游戏画面呈现功能即可，用户存量的智能手机、平板电脑、PC、智能电视以及集成游戏内容的智能机顶盒等都可成为云游戏的终端。因为云游戏对终端设备较低的要求，设备提供商在云游戏产业链中处于相对弱势地位。</p></blockquote><h1 id="云游戏未来发展趋势"><a href="#云游戏未来发展趋势" class="headerlink" title="云游戏未来发展趋势"></a>云游戏未来发展趋势</h1><h2 id="游戏研发商-1"><a href="#游戏研发商-1" class="headerlink" title="游戏研发商"></a>游戏研发商</h2><blockquote><p>游戏重度化趋势加剧，头部研发商市场份额将进一步提升。</p></blockquote><h2 id="游戏云平台"><a href="#游戏云平台" class="headerlink" title="游戏云平台"></a>游戏云平台</h2><blockquote><p>由初创公司百花齐放，到初创公司与新入局的巨头加强合作，最终具备 IaaS资源的云计算巨头和拥有用户、流量优势的企业有望主导产业链该环节。云游戏产业链中，由于游戏云平台这一环节的出现，订阅云服务有望成为游戏行业继付费下载、游戏内付费（主要为道具付费）之后又一主流变现模式。订阅服务收入在游戏收入中的占比有望不断提升，云游戏带来用户对硬件需求的降低将转移对订阅云服务需求的提升。</p></blockquote><h2 id="通信运营商-1"><a href="#通信运营商-1" class="headerlink" title="通信运营商"></a>通信运营商</h2><blockquote><p>云游戏时代，由于游戏即点即玩、无需下载，应用商店等渠道作用将弱化，但云游戏作为5G重要应用领域，通信运营商基于5G 网络入口优势，较过去 4G时代有望更多切入游戏云平台运营、甚至研发环节。在 4G时代，三大通信运营商更多承担数据传输通道的作用，数据业务收入取得大幅增长。而随着5G来临，四大运营商将不甘于仅仅起到数据通道作用，而是纷纷通过自身加大资金投入以及外部合作的方式，力图深度参与5G应用。尤其是在5G推广的初期，将流量与内容绑定、通过内容来吸引用户订购5G套餐，或将成为运营商的重要营销方式。云游戏是5G娱乐应用领域比超高清视频、VR/AR更早爆发和更成熟的应用，通信运营商或将基于自身海量用户，通过与游戏内容方、硬件终端合作的方式，切入游戏云平台运营、甚至研发领域。</p></blockquote><h1 id="未来展望"><a href="#未来展望" class="headerlink" title="未来展望"></a>未来展望</h1><blockquote><p>《2020-2026年中国云游戏行业市场研究分析及未来前景展望报告》数据显示：随着5G网络的正式商用，让云游戏再次成为了行业风口。据调查数据显示，2020年中国云游戏用户达到 2.47 亿人，同比增长 114.8%，并在 2023 年增至6.58亿;云游戏市场在 2020 年将达到 68 亿元，并在 2023 年增至 986 亿元</p><p>如大家所见，云游戏必将成为云计算中的相当重要的应用，随着广电技术的推广和网络的改善，云游戏的时代已经接近。在未来，云游戏一定会为我们的生活创造更多的精彩!</p></blockquote><p>参考文献：</p><ol><li><p><a href="https://baike.baidu.com/item/%E4%BA%91%E6%9C%8D%E5%8A%A1/7843499?fr=aladdin">百度百科：云服务</a>[引用日期：2023年1月30日]</p></li><li><p><a href="https://baike.baidu.com/item/%E4%BA%91%E8%AE%A1%E7%AE%97/9969353?fromModule=lemma-qiyi_sense-lemma">百度百科：云计算</a>[引用日期：2023年1月30日]</p></li><li><p><a href="https://baike.baidu.com/item/%E4%BA%91%E6%B8%B8%E6%88%8F/1404089?fr=aladdin">百度百科：云服务</a>[引用日期：2023年1月30日]</p></li></ol>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;strong&gt;云服务在电子游戏领域的应用&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;摘要：&lt;/strong&gt;&lt;/p&gt;</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>作业1</title>
    <link href="https://yousa.love/2023/04/08/%E4%BD%9C%E4%B8%9A1/"/>
    <id>https://yousa.love/2023/04/08/%E4%BD%9C%E4%B8%9A1/</id>
    <published>2023-04-08T10:06:01.000Z</published>
    <updated>2023-04-22T02:15:49.194Z</updated>
    
    <content type="html"><![CDATA[<p><strong>作业1</strong></p><span id="more"></span><p><a href="https://wwft.lanzoul.com/iwnxG0siclej">下载</a></p><h1 id="任务1：恐龙山洞"><a href="#任务1：恐龙山洞" class="headerlink" title="任务1：恐龙山洞"></a>任务1：恐龙山洞</h1><h2 id="【任务要求】"><a href="#【任务要求】" class="headerlink" title="【任务要求】"></a><strong>【任务要求】</strong></h2><ol><li><p>设计一个恐龙山洞的游戏，在游戏开始逐句呈现游戏故事背景，营造出紧张的氛围。</p></li><li><p>玩家选择进入1号或2号山洞，如果进入圆顶龙的山洞，获得宝藏；如果进入窃蛋龙的山洞，被窃蛋龙吞进肚子。圆顶龙和窃蛋龙所住的山洞每次游戏随机决定。</p></li><li><p>玩家输入的过程需设置检查机制，如果玩家输入了除1或2之外的其他内容，提示玩家重新选择，增强程序的容错性。</p></li><li><p>可发挥自己的创意，为游戏添加其他功能和剧情。</p></li></ol><h2 id="【示例代码】"><a href="#【示例代码】" class="headerlink" title="【示例代码】"></a><strong>【示例代码】</strong></h2><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> random</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">game</span>():</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">"恐龙山洞游戏开始！\n"</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">"现在，你来到了1亿4500万年前，侏罗纪时期。\n"</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">"这里有体型巨大的圆顶龙、梁龙，有凶猛的永川龙、窃蛋龙……稍不注意，你就可能被巨大的恐龙一脚踩成一张纸片!\n"</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">"你跑啊跑，忽然看见前方有两个山洞。\n"</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">"你来到了山洞口，发现有两个山洞，一个是圆顶龙的山洞，另一个是窃蛋龙的山洞。\n"</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">"其中一个山洞里，住着友好的食草恐龙圆顶龙，它会送你一个宝藏，助你回到21世纪。而另一个山洞里…….\n"</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">"住着一只贪婪又饥饿的食肉恐龙窃蛋龙，它可能会把你吞进肚子里!\n"</span>)</span><br><span class="line">    chosen_cave = <span class="built_in">input</span>(<span class="string">"你要选择进入哪个山洞？输入 1 或 2："</span>)</span><br><span class="line">    <span class="keyword">while</span> chosen_cave != <span class="string">'1'</span> <span class="keyword">and</span> chosen_cave != <span class="string">'2'</span>:</span><br><span class="line">        chosen_cave = <span class="built_in">input</span>(<span class="string">"输入无效，请重新选择："</span>)</span><br><span class="line">    chosen_cave = <span class="built_in">int</span>(chosen_cave)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">"你走进了山洞..."</span>)</span><br><span class="line">    time.sleep(<span class="number">2</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">"黑暗中，你听到了一阵咆哮声..."</span>)</span><br><span class="line">    time.sleep(<span class="number">2</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">"你看到了一双发光的眼睛，它们向你靠近..."</span>)</span><br><span class="line">    time.sleep(<span class="number">2</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">"..."</span>)</span><br><span class="line">    time.sleep(<span class="number">2</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">"你发现你已经走进了"</span>, end=<span class="string">' '</span>)</span><br><span class="line">    cave_number = random.randint(<span class="number">1</span>, <span class="number">2</span>)</span><br><span class="line">    <span class="keyword">if</span> cave_number == chosen_cave:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">"圆顶龙的山洞！"</span>)</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">"你发现了宝藏！"</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">"窃蛋龙的山洞！"</span>)</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">"窃蛋龙把你吞进了肚子里！"</span>)</span><br><span class="line">    play_again = <span class="built_in">input</span>(<span class="string">"再来一局？输入 y 或 n："</span>)</span><br><span class="line">    <span class="keyword">while</span> play_again != <span class="string">'y'</span> <span class="keyword">and</span> play_again != <span class="string">'n'</span>:</span><br><span class="line">        play_again = <span class="built_in">input</span>(<span class="string">"输入无效，请重新选择："</span>)</span><br><span class="line">    <span class="keyword">if</span> play_again == <span class="string">'y'</span>:</span><br><span class="line">        game()</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">"游戏结束！"</span>)</span><br><span class="line"></span><br><span class="line">game()</span><br></pre></td></tr></tbody></table></figure><h2 id="【运行示例】"><a href="#【运行示例】" class="headerlink" title="【运行示例】"></a><strong>【运行示例】</strong></h2><p><img src="https://pic.imgdb.cn/item/643141da0d2dde5777842d1b.jpg"></p><h1 id="任务2：绘制迷宫"><a href="#任务2：绘制迷宫" class="headerlink" title="任务2：绘制迷宫"></a>任务2：绘制迷宫</h1><h2 id="【任务要求】-1"><a href="#【任务要求】-1" class="headerlink" title="【任务要求】"></a><strong>【任务要求】</strong></h2><ol><li><p>使用turtle模块绘制一个迷宫，迷宫可如运行示例中所示，也可自行设计一个更为复杂的迷宫。</p></li><li><p>如有重复执行的代码，需用函数进行封装。</p></li></ol><h2 id="【示例代码】-1"><a href="#【示例代码】-1" class="headerlink" title="【示例代码】"></a><strong>【示例代码】</strong></h2><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> turtle</span><br><span class="line"></span><br><span class="line"><span class="comment"># 定义画笔移动函数</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">move_pen</span>(<span class="params">x, y</span>):</span><br><span class="line">    turtle.penup()</span><br><span class="line">    turtle.goto(x, y)</span><br><span class="line">    turtle.pendown()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 定义绘制迷宫函数</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">draw_maze</span>():</span><br><span class="line">    <span class="comment"># 画笔起始位置</span></span><br><span class="line">    move_pen(-<span class="number">150</span>, <span class="number">150</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 绘制迷宫外框</span></span><br><span class="line">    turtle.forward(<span class="number">300</span>)</span><br><span class="line">    turtle.right(<span class="number">90</span>)</span><br><span class="line">    turtle.forward(<span class="number">300</span>)</span><br><span class="line">    turtle.right(<span class="number">90</span>)</span><br><span class="line">    turtle.forward(<span class="number">300</span>)</span><br><span class="line">    turtle.right(<span class="number">90</span>)</span><br><span class="line">    turtle.forward(<span class="number">300</span>)</span><br><span class="line">    turtle.right(<span class="number">90</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 绘制迷宫内部线条</span></span><br><span class="line">    move_pen(-<span class="number">150</span>, <span class="number">50</span>)</span><br><span class="line">    turtle.forward(<span class="number">100</span>)</span><br><span class="line">    move_pen(-<span class="number">50</span>, <span class="number">50</span>)</span><br><span class="line">    turtle.right(<span class="number">90</span>)</span><br><span class="line">    turtle.forward(<span class="number">100</span>)</span><br><span class="line">    move_pen(-<span class="number">50</span>, <span class="number">50</span>)</span><br><span class="line">    turtle.right(<span class="number">90</span>)</span><br><span class="line">    turtle.forward(<span class="number">100</span>)</span><br><span class="line">    move_pen(-<span class="number">50</span>, <span class="number">150</span>)</span><br><span class="line">    turtle.right(<span class="number">90</span>)</span><br><span class="line">    turtle.forward(<span class="number">100</span>)</span><br><span class="line">    move_pen(-<span class="number">50</span>, <span class="number">150</span>)</span><br><span class="line">    turtle.right(<span class="number">90</span>)</span><br><span class="line">    turtle.forward(<span class="number">50</span>)</span><br><span class="line">    move_pen(-<span class="number">50</span>, <span class="number">100</span>)</span><br><span class="line">    turtle.right(<span class="number">90</span>)</span><br><span class="line">    turtle.forward(<span class="number">50</span>)</span><br><span class="line">    move_pen(-<span class="number">100</span>, <span class="number">100</span>)</span><br><span class="line">    turtle.right(<span class="number">90</span>)</span><br><span class="line">    turtle.forward(<span class="number">50</span>)</span><br><span class="line">    move_pen(-<span class="number">100</span>, <span class="number">100</span>)</span><br><span class="line">    turtle.right(<span class="number">90</span>)</span><br><span class="line">    turtle.forward(<span class="number">100</span>)</span><br><span class="line">    move_pen(<span class="number">50</span>, <span class="number">100</span>)</span><br><span class="line">    turtle.right(<span class="number">90</span>)</span><br><span class="line">    turtle.forward(<span class="number">50</span>)</span><br><span class="line">    move_pen(<span class="number">50</span>, <span class="number">100</span>)</span><br><span class="line">    turtle.right(<span class="number">90</span>)</span><br><span class="line">    turtle.forward(<span class="number">50</span>)</span><br><span class="line">    move_pen(<span class="number">50</span>, <span class="number">50</span>)</span><br><span class="line">    turtle.right(<span class="number">90</span>)</span><br><span class="line">    turtle.forward(<span class="number">50</span>)</span><br><span class="line">    move_pen(<span class="number">50</span>, <span class="number">50</span>)</span><br><span class="line">    turtle.right(<span class="number">90</span>)</span><br><span class="line">    turtle.forward(<span class="number">100</span>)</span><br><span class="line">    move_pen(-<span class="number">50</span>, -<span class="number">50</span>)</span><br><span class="line">    turtle.right(<span class="number">90</span>)</span><br><span class="line">    turtle.forward(<span class="number">100</span>)</span><br><span class="line">    move_pen(-<span class="number">50</span>, -<span class="number">50</span>)</span><br><span class="line">    turtle.right(<span class="number">90</span>)</span><br><span class="line">    turtle.forward(<span class="number">50</span>)</span><br><span class="line">    move_pen(-<span class="number">100</span>, -<span class="number">50</span>)</span><br><span class="line">    turtle.right(<span class="number">90</span>)</span><br><span class="line">    turtle.forward(<span class="number">50</span>)</span><br><span class="line">    move_pen(-<span class="number">100</span>, -<span class="number">50</span>)</span><br><span class="line">    turtle.right(<span class="number">90</span>)</span><br><span class="line">    turtle.forward(<span class="number">100</span>)</span><br><span class="line">    move_pen(<span class="number">50</span>, -<span class="number">50</span>)</span><br><span class="line">    turtle.right(<span class="number">90</span>)</span><br><span class="line">    turtle.forward(<span class="number">100</span>)</span><br><span class="line">    move_pen(<span class="number">50</span>, -<span class="number">50</span>)</span><br><span class="line">    turtle.right(<span class="number">90</span>)</span><br><span class="line">    turtle.forward(<span class="number">50</span>)</span><br><span class="line">    move_pen(<span class="number">100</span>, -<span class="number">50</span>)</span><br><span class="line">    turtle.right(<span class="number">90</span>)</span><br><span class="line">    turtle.forward(<span class="number">50</span>)</span><br><span class="line">    move_pen(<span class="number">100</span>, -<span class="number">50</span>)</span><br><span class="line">    turtle.right(<span class="number">90</span>)</span><br><span class="line">    turtle.forward(<span class="number">100</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置画布大小和背景颜色</span></span><br><span class="line">turtle.setup(<span class="number">500</span>, <span class="number">500</span>)</span><br><span class="line">turtle.bgcolor(<span class="string">'white'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 隐藏画笔形状</span></span><br><span class="line">turtle.hideturtle()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 调用绘制迷宫函数</span></span><br><span class="line">draw_maze()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 展示画布</span></span><br><span class="line">turtle.done()</span><br></pre></td></tr></tbody></table></figure><blockquote><p>在这个程序中，我们首先定义了两个函数 <code>move_pen</code> 和 <code>draw_maze</code>。其中 <code>move_pen</code> 函数用于移动画笔到指定的位置，<code>draw_maze</code> 函数用于绘制迷宫。在绘制迷宫时，我们使用了 <code>move_pen</code> 函数来移动画笔到指定的位置，并使用 <code>turtle.forward</code> 和 <code>turtle.right</code> 函数来控制画笔的移动和转向。</p><p>最后，我们设置了画布的大小和背景颜色，并调用 <code>draw_maze</code> 函数来绘制迷宫。完成绘制后，我们展示了画布并结束程序。</p></blockquote><h2 id="【运行示例】-1"><a href="#【运行示例】-1" class="headerlink" title="【运行示例】"></a><strong>【运行示例】</strong></h2><p><img src="https://pic.imgdb.cn/item/6431424e0d2dde5777859825.jpg"></p><h1 id="任务3：绘制爱心"><a href="#任务3：绘制爱心" class="headerlink" title="任务3：绘制爱心"></a>任务3：绘制爱心</h1><h2 id="【任务要求】-2"><a href="#【任务要求】-2" class="headerlink" title="【任务要求】"></a><strong>【任务要求】</strong></h2><ol><li><p>绘制一个爱心，边线为红色，填充为粉色。并在爱心下面写一段祝福语。</p></li><li><p>如有其他设计，可在图中添加。</p></li></ol><h2 id="【示例代码】-2"><a href="#【示例代码】-2" class="headerlink" title="【示例代码】"></a><strong>【示例代码】</strong></h2><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> turtle</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置画布大小和背景颜色</span></span><br><span class="line">turtle.setup(<span class="number">600</span>, <span class="number">400</span>)</span><br><span class="line">turtle.bgcolor(<span class="string">"white"</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 定义画笔</span></span><br><span class="line">pen = turtle.Turtle()</span><br><span class="line">pen.speed(<span class="number">0</span>)  <span class="comment"># 设置画笔速度为最快</span></span><br><span class="line">pen.hideturtle()  <span class="comment"># 隐藏画笔形状</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 绘制爱心</span></span><br><span class="line">pen.color(<span class="string">"red"</span>, <span class="string">"pink"</span>)  <span class="comment"># 设置边线颜色和填充颜色</span></span><br><span class="line">pen.begin_fill()  <span class="comment"># 开始填充</span></span><br><span class="line">pen.left(<span class="number">45</span>)  <span class="comment"># 向左旋转45度</span></span><br><span class="line">pen.forward(<span class="number">150</span>)  <span class="comment"># 向前移动150像素</span></span><br><span class="line">pen.circle(<span class="number">75</span>, <span class="number">180</span>)  <span class="comment"># 绘制半圆弧</span></span><br><span class="line">pen.right(<span class="number">90</span>)  <span class="comment"># 向右旋转90度</span></span><br><span class="line">pen.circle(<span class="number">75</span>, <span class="number">180</span>)  <span class="comment"># 绘制半圆弧</span></span><br><span class="line">pen.forward(<span class="number">150</span>)  <span class="comment"># 向前移动150像素</span></span><br><span class="line">pen.end_fill()  <span class="comment"># 结束填充</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 编写祝福语</span></span><br><span class="line">pen.penup()  <span class="comment"># 抬起画笔</span></span><br><span class="line">pen.goto(<span class="number">0</span>, -<span class="number">180</span>)  <span class="comment"># 移动到爱心下方</span></span><br><span class="line">pen.color(<span class="string">"black"</span>)  <span class="comment"># 设置字体颜色</span></span><br><span class="line">pen.write(<span class="string">"Sherryforever!"</span>, align=<span class="string">"center"</span>, font=(<span class="string">"Arial"</span>, <span class="number">20</span>, <span class="string">"normal"</span>))  <span class="comment"># 编写祝福语</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 显示画布</span></span><br><span class="line">turtle.done()</span><br></pre></td></tr></tbody></table></figure><h2 id="【运行示例】-2"><a href="#【运行示例】-2" class="headerlink" title="【运行示例】"></a><strong>【运行示例】</strong></h2><p><img src="https://pic.imgdb.cn/item/643144430d2dde57778ae8ad.jpg"></p><h1 id="任务4：绘制年轮"><a href="#任务4：绘制年轮" class="headerlink" title="任务4：绘制年轮"></a>任务4：绘制年轮</h1><h2 id="【任务要求】-3"><a href="#【任务要求】-3" class="headerlink" title="【任务要求】"></a><strong>【任务要求】</strong></h2><ol><li><p>假设一棵树每长一年，就增加一圈年轮，且相邻年轮之间的宽度大约是1cm（gap = 1）。请设计程序，让用户输入树的半径，然后画出这棵树的年轮图，并计算它的树龄。</p></li><li><p>请用循环和递归两种方法完成。</p></li></ol><h2 id="【示例代码】-3"><a href="#【示例代码】-3" class="headerlink" title="【示例代码】"></a><strong>【示例代码】</strong></h2><ol><li><p>循环实现</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> turtle</span><br><span class="line"></span><br><span class="line"><span class="comment"># Prompt user for tree radius</span></span><br><span class="line">radius = <span class="built_in">float</span>(<span class="built_in">input</span>(<span class="string">"Enter the radius of the tree(cm): "</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment"># Calculate tree age</span></span><br><span class="line">age = radius / <span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Set up turtle graphics window</span></span><br><span class="line">window = turtle.Screen()</span><br><span class="line">window.bgcolor(<span class="string">"white"</span>)</span><br><span class="line">window.title(<span class="string">"Tree Ring Chart"</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Set up turtle graphics pen</span></span><br><span class="line">pen = turtle.Turtle()</span><br><span class="line">pen.speed(<span class="number">0</span>)</span><br><span class="line">pen.color(<span class="string">"brown"</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Draw tree rings</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">int</span>(radius)):</span><br><span class="line">    pen.circle(i * <span class="number">10</span>)</span><br><span class="line">    pen.penup()</span><br><span class="line">    pen.goto(<span class="number">0</span>,-i*<span class="number">10</span>)</span><br><span class="line">    pen.pendown()</span><br><span class="line">    </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># Display tree age</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">"Age:"</span> , radius/<span class="number">1</span> ,<span class="string">"years"</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Keep turtle graphics window open until user closes it</span></span><br><span class="line">turtle.done()</span><br></pre></td></tr></tbody></table></figure></li><li><p>递归实现</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> turtle</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">draw_tree_rings</span>(<span class="params">radius, max_radius</span>):</span><br><span class="line">    pen.circle(radius * <span class="number">10</span>)</span><br><span class="line">    pen.penup()</span><br><span class="line">    pen.goto(<span class="number">0</span>, -radius * <span class="number">10</span>)</span><br><span class="line">    pen.pendown()</span><br><span class="line">    <span class="keyword">if</span> radius &lt; max_radius:</span><br><span class="line">        draw_tree_rings(radius + <span class="number">1</span>, max_radius)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Prompt user for tree radius</span></span><br><span class="line">radius = <span class="built_in">float</span>(<span class="built_in">input</span>(<span class="string">"Enter the radius of the tree(cm): "</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment"># Calculate tree age</span></span><br><span class="line">age = radius / <span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Set up turtle graphics window</span></span><br><span class="line">window = turtle.Screen()</span><br><span class="line">window.bgcolor(<span class="string">"white"</span>)</span><br><span class="line">window.title(<span class="string">"Tree Ring Chart"</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Set up turtle graphics pen</span></span><br><span class="line">pen = turtle.Turtle()</span><br><span class="line">pen.speed(<span class="number">0</span>)</span><br><span class="line">pen.color(<span class="string">"brown"</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Draw tree rings recursively</span></span><br><span class="line">draw_tree_rings(<span class="number">0</span>, <span class="built_in">int</span>(radius))</span><br><span class="line"></span><br><span class="line"><span class="comment"># Display tree age</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">"Age:"</span>, radius / <span class="number">1</span>, <span class="string">"years"</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Keep turtle graphics window open until user closes it</span></span><br><span class="line">turtle.done()</span><br></pre></td></tr></tbody></table></figure></li></ol><h2 id="【运行示例】-3"><a href="#【运行示例】-3" class="headerlink" title="【运行示例】"></a><strong>【运行示例】</strong></h2><p>用户输入半径为10，程序绘制出10圈年轮，年轮间隔为1。</p><h1 id="任务5：数字炸弹"><a href="#任务5：数字炸弹" class="headerlink" title="任务5：数字炸弹"></a>任务5：数字炸弹</h1><h2 id="【任务要求】-4"><a href="#【任务要求】-4" class="headerlink" title="【任务要求】"></a><strong>【任务要求】</strong></h2><ol><li><p>设计一个数字炸弹的游戏，用户输入炸弹的上限和下限，程序随机设置上限和下限之间的某个数为“炸弹数字”。</p></li><li><p>玩家轮流输入一个数字，当输入的数字是“炸弹数字”，触发“爆炸”，游戏结束；若输入的数字不是“炸弹数字”，程序提示玩家“炸弹数字”新的范围，游戏继续。</p></li><li><p>玩家输入数字时需设置检查机制，当玩家输入新范围以外的数字，提示玩家重新输入。</p></li></ol><h2 id="【示例代码】-4"><a href="#【示例代码】-4" class="headerlink" title="【示例代码】"></a><strong>【示例代码】</strong></h2><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> random</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_number_within_range</span>(<span class="params">lower, upper</span>):</span><br><span class="line">    <span class="string">"""获取一个在指定范围内的随机整数"""</span></span><br><span class="line">    <span class="keyword">return</span> random.randint(lower, upper)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>():</span><br><span class="line">    <span class="comment"># 获取炸弹数字的上下限</span></span><br><span class="line">    lower = <span class="built_in">int</span>(<span class="built_in">input</span>(<span class="string">"请输入炸弹数字的下限："</span>))</span><br><span class="line">    upper = <span class="built_in">int</span>(<span class="built_in">input</span>(<span class="string">"请输入炸弹数字的上限："</span>))</span><br><span class="line">    <span class="comment"># 随机生成炸弹数字</span></span><br><span class="line">    bomb_number = get_number_within_range(lower, upper)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">"炸弹数字已经生成，游戏开始！"</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 玩家轮流猜数字</span></span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        guess = <span class="built_in">int</span>(<span class="built_in">input</span>(<span class="string">"请猜一个数字："</span>))</span><br><span class="line">        <span class="keyword">if</span> guess == bomb_number:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">"炸弹爆炸了，游戏结束！"</span>)</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">elif</span> guess &lt; lower <span class="keyword">or</span> guess &gt; upper:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">"输入的数字不在炸弹数字的范围内，请重新输入！"</span>)</span><br><span class="line">        <span class="keyword">elif</span> guess &lt; bomb_number:</span><br><span class="line">            lower = guess</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">"炸弹数字现在的范围是：{} ~ {}"</span>.<span class="built_in">format</span>(lower, upper))</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            upper = guess</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">"炸弹数字现在的范围是：{} ~ {}"</span>.<span class="built_in">format</span>(lower, upper))</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></tbody></table></figure><blockquote><p>这个程序首先通过 <code>get_number_within_range()</code> 函数随机生成了一个炸弹数字，然后进入了一个无限循环，直到玩家猜中了炸弹数字或者输入了一个范围外的数字。每次循环中，程序会首先判断玩家猜的数字是否等于炸弹数字，如果是则游戏结束；否则，程序会判断玩家猜的数字是否在炸弹数字的范围内，如果不是则提示玩家重新输入；如果是，则更新炸弹数字的范围，并提示玩家新的范围。</p></blockquote><h2 id="【运行示例】-4"><a href="#【运行示例】-4" class="headerlink" title="【运行示例】"></a><strong>【运行示例】</strong></h2><p><img src="https://pic.imgdb.cn/item/64314e580d2dde5777a1845f.jpg"></p><h1 id="任务6：绘制螺旋爆炸"><a href="#任务6：绘制螺旋爆炸" class="headerlink" title="任务6：绘制螺旋爆炸"></a>任务6：绘制螺旋爆炸</h1><h2 id="【任务要求】-5"><a href="#【任务要求】-5" class="headerlink" title="【任务要求】"></a><strong>【任务要求】</strong></h2><ol><li><p>绘制一个螺旋爆炸图案。该图案由5组呈发射状的圆形组成，同一条曲线上有10个圆形，圆形半径逐渐增大，且颜色相同；不同曲线上的圆形颜色不同。</p></li><li><p>可再次基础上进行再创作。</p></li></ol><h2 id="【示例代码】-5"><a href="#【示例代码】-5" class="headerlink" title="【示例代码】"></a><strong>【示例代码】</strong></h2><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> turtle</span><br><span class="line"></span><br><span class="line"><span class="comment"># Define colors for each curve</span></span><br><span class="line">colors = [<span class="string">"red"</span>, <span class="string">"orange"</span>, <span class="string">"yellow"</span>, <span class="string">"green"</span>, <span class="string">"blue"</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># Set up turtle graphics window</span></span><br><span class="line">window = turtle.Screen()</span><br><span class="line">window.bgcolor(<span class="string">"white"</span>)</span><br><span class="line">window.title(<span class="string">"Spiral Explosion Pattern"</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Set up turtle graphics pen</span></span><br><span class="line">pen = turtle.Turtle()</span><br><span class="line">pen.speed(<span class="number">0</span>)</span><br><span class="line">pen.width(<span class="number">2</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Draw spiral explosion pattern</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">5</span>):</span><br><span class="line">    pen.color(colors[i])</span><br><span class="line">    pen.fillcolor(colors[i])</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">10</span>):</span><br><span class="line">        pen.begin_fill()</span><br><span class="line">        pen.circle((j+<span class="number">1</span>)*<span class="number">3</span>)</span><br><span class="line">        pen.end_fill()</span><br><span class="line">        pen.left(<span class="number">15</span>)</span><br><span class="line">        pen.penup()</span><br><span class="line">        pen.forward((j+<span class="number">1</span>) * <span class="number">10</span>)</span><br><span class="line">        pen.pendown()</span><br><span class="line">    </span><br><span class="line">    pen.penup()</span><br><span class="line">    pen.goto(<span class="number">0</span>,<span class="number">0</span>)</span><br><span class="line">    pen.right(<span class="number">150</span>)</span><br><span class="line">    pen.left(<span class="number">72</span>)</span><br><span class="line">    pen.pendown()</span><br><span class="line"></span><br><span class="line"><span class="comment"># Keep turtle graphics window open until user closes it</span></span><br><span class="line">turtle.done()</span><br></pre></td></tr></tbody></table></figure><h2 id="【运行示例】-5"><a href="#【运行示例】-5" class="headerlink" title="【运行示例】"></a><strong>【运行示例】</strong></h2><p><img src="https://pic.imgdb.cn/item/64318d350d2dde577709e22f.jpg"></p><h1 id="任务7：田忌赛马1"><a href="#任务7：田忌赛马1" class="headerlink" title="任务7：田忌赛马1"></a>任务7：田忌赛马1</h1><h2 id="【任务要求】-6"><a href="#【任务要求】-6" class="headerlink" title="【任务要求】"></a><strong>【任务要求】</strong></h2><ol><li>田忌赛马的故事我们都听过，齐国大将田忌和齐威王约定赛马，三局两胜。双方都有三个等级的马，分别是上马、中马和下马。齐威王各个等级的马都比田忌各个等级的马要厉害，但田忌的上马能赢齐王的中马；田忌的中马能赢齐王的下马。假设齐王的出马顺序总为“上马-中马-下马”，请设计程序，遍历输出田忌所有可能的出马顺序，及相应的获胜情况。</li></ol><h2 id="【示例代码】-6"><a href="#【示例代码】-6" class="headerlink" title="【示例代码】"></a><strong>【示例代码】</strong></h2><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line">horses = {<span class="string">"上马"</span>: <span class="number">3</span>, <span class="string">"中马"</span>: <span class="number">2</span>, <span class="string">"下马"</span>: <span class="number">1</span>} <span class="comment"># 马匹等级</span></span><br><span class="line">tianji_horses = {<span class="string">"上马"</span>: <span class="number">6</span>, <span class="string">"中马"</span>: <span class="number">4</span>, <span class="string">"下马"</span>: <span class="number">2</span>} <span class="comment"># 田忌的马</span></span><br><span class="line">qi_horses = {<span class="string">"上马"</span>: <span class="number">7</span>, <span class="string">"中马"</span>: <span class="number">5</span>, <span class="string">"下马"</span>: <span class="number">3</span>} <span class="comment"># 齐王的马</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">compete</span>(<span class="params">h1, h2</span>): <span class="comment"># 两匹马比赛，返回1代表田忌胜利，返回0代表平局，返回-1代表田忌失败</span></span><br><span class="line">    <span class="keyword">if</span> tianji_horses[h1] &gt; qi_horses[h2]:</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span></span><br><span class="line">    <span class="keyword">elif</span> tianji_horses[h1] == qi_horses[h2]:</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> -<span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">play_game</span>(<span class="params">horses_order</span>): <span class="comment"># 一局比赛</span></span><br><span class="line">    tianji_order = horses_order</span><br><span class="line">    qi_order = [<span class="string">"上马"</span>, <span class="string">"中马"</span>, <span class="string">"下马"</span>]</span><br><span class="line">    win_count = <span class="number">0</span> <span class="comment"># 获胜场数</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">3</span>): <span class="comment"># 三局比赛</span></span><br><span class="line">        result = compete(tianji_order[i], qi_order[i])</span><br><span class="line">        <span class="keyword">if</span> result == <span class="number">1</span>:</span><br><span class="line">            win_count += <span class="number">1</span></span><br><span class="line">        <span class="keyword">elif</span> result == <span class="number">0</span>:</span><br><span class="line">            <span class="keyword">continue</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            win_count -= <span class="number">1</span></span><br><span class="line">    <span class="keyword">if</span> win_count &gt; <span class="number">0</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_horses_order</span>(<span class="params">horses_list</span>): <span class="comment"># 从马匹列表中获取所有可能的出马顺序</span></span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">len</span>(horses_list) == <span class="number">1</span>:</span><br><span class="line">        <span class="keyword">return</span> [horses_list]</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        orders = []</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(horses_list)):</span><br><span class="line">            rest_horses = horses_list[:i] + horses_list[i+<span class="number">1</span>:]</span><br><span class="line">            <span class="keyword">for</span> order <span class="keyword">in</span> get_horses_order(rest_horses):</span><br><span class="line">                orders.append([horses_list[i]] + order)</span><br><span class="line">        <span class="keyword">return</span> orders</span><br><span class="line"></span><br><span class="line">all_orders = get_horses_order(<span class="built_in">list</span>(horses.keys())) <span class="comment"># 获取所有可能的出马顺序</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> order <span class="keyword">in</span> all_orders:</span><br><span class="line">    <span class="keyword">if</span> play_game(order):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">"田忌获胜，出马顺序为："</span>, order)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">"田忌失败，出马顺序为："</span>, order)</span><br></pre></td></tr></tbody></table></figure><blockquote><p>这段代码是一个田忌赛马的游戏，其中包含了三个字典，分别表示马匹等级、田忌的马和齐王的马。其中，马匹等级分为上马、中马和下马三个等级。</p><p>函数compete表示两匹马比赛的结果，当田忌的马的等级高于齐王的马时，返回1；当两者等级相同时，返回0；否则返回-1。</p><p>函数play_game表示一局比赛的过程，首先用传入的马匹顺序来排列田忌和齐王的马，然后进行三次比赛，统计田忌获胜的次数，最后判断获胜次数是否大于平局和失败的次数之和，如果是则返回True，否则返回False。</p><p>函数get_horses_order用于获取所有可能的出马顺序，通过递归来获取所有可能的排列方式。</p><p>最后，通过获取所有可能的出马顺序，分别进行比赛，并输出胜利或失败的结果以及出马顺序。</p></blockquote><h2 id="【运行示例】-6"><a href="#【运行示例】-6" class="headerlink" title="【运行示例】"></a><strong>【运行示例】</strong></h2><p><img src="https://pic.imgdb.cn/item/643158e80d2dde5777b63498.jpg"></p><h1 id="任务8：田忌赛马2"><a href="#任务8：田忌赛马2" class="headerlink" title="任务8：田忌赛马2"></a>任务8：田忌赛马2</h1><h2 id="【任务要求】-7"><a href="#【任务要求】-7" class="headerlink" title="【任务要求】"></a><strong>【任务要求】</strong></h2><p>生活中，胜利与否具有一定概率。假设田马的三匹马分别为A、B、C，齐马的三匹马分别为X、Y、Z，田马赢得齐马的胜率如下表所示。例如，田忌的A马赢得齐王的X马的概率为0.4，赢得齐王的Y马的概率为0.8，赢得齐王的Z马的概率为0.9。</p><p><img src="https://pic.imgdb.cn/item/643174240d2dde5777e2e2e1.jpg"></p><p>假设齐王的出马顺序总为“X-Y-Z”，请设计程序，遍历田马所有可能的出场顺序，并计算各个出场顺序的胜率，输出田马获胜的最大胜率和对应的出场顺序。</p><h2 id="【示例代码】-7"><a href="#【示例代码】-7" class="headerlink" title="【示例代码】"></a><strong>【示例代码】</strong></h2><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> itertools</span><br><span class="line"></span><br><span class="line"><span class="comment"># 马的赢率矩阵</span></span><br><span class="line">win_rate = {</span><br><span class="line">    <span class="string">'A'</span>: {<span class="string">'X'</span>: <span class="number">0.4</span>, <span class="string">'Y'</span>: <span class="number">0.8</span>, <span class="string">'Z'</span>: <span class="number">0.9</span>},</span><br><span class="line">    <span class="string">'B'</span>: {<span class="string">'X'</span>: <span class="number">0.2</span>, <span class="string">'Y'</span>: <span class="number">0.3</span>, <span class="string">'Z'</span>: <span class="number">0.8</span>},</span><br><span class="line">    <span class="string">'C'</span>: {<span class="string">'X'</span>: <span class="number">0.1</span>, <span class="string">'Y'</span>: <span class="number">0.2</span>, <span class="string">'Z'</span>: <span class="number">0.4</span>}</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment"># 定义出场顺序</span></span><br><span class="line">tianqi = [<span class="string">'A'</span>, <span class="string">'B'</span>, <span class="string">'C'</span>]</span><br><span class="line">qiwang = [<span class="string">'X'</span>, <span class="string">'Y'</span>, <span class="string">'Z'</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 计算田忌所有可能的出场顺序</span></span><br><span class="line">tianqi_order = <span class="built_in">list</span>(itertools.permutations(tianqi))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 初始化最大胜率和对应的出场顺序</span></span><br><span class="line">max_win_rate = <span class="number">0</span></span><br><span class="line">max_order = []</span><br><span class="line"></span><br><span class="line"><span class="comment"># 遍历所有可能的出场顺序</span></span><br><span class="line"><span class="keyword">for</span> order <span class="keyword">in</span> tianqi_order:</span><br><span class="line">    <span class="comment"># 计算当前出场顺序的胜率</span></span><br><span class="line">    win_rate_sum = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(order)):</span><br><span class="line">        win_rate_sum += win_rate[order[i]][qiwang[i]]</span><br><span class="line">    current_win_rate = win_rate_sum / <span class="built_in">len</span>(order)</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 如果当前胜率大于最大胜率，更新最大胜率和对应的出场顺序</span></span><br><span class="line">    <span class="keyword">if</span> current_win_rate &gt; max_win_rate:</span><br><span class="line">        max_win_rate = current_win_rate</span><br><span class="line">        max_order = order</span><br><span class="line"></span><br><span class="line"><span class="comment"># 输出结果</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">"田忌获胜的最大胜率为：{}"</span>.<span class="built_in">format</span>(max_win_rate))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">"田忌出场顺序为：{}"</span>.<span class="built_in">format</span>(max_order))</span><br></pre></td></tr></tbody></table></figure><blockquote><p>田忌赛马问题的解法思路是使用贪心算法，即优先选择赢率最大的马进行比赛。</p><p>在该 Python 代码实现中，使用了 <code>itertools</code> 库中的 <code>permutations</code> 函数。<code>permutations</code> 函数可以生成给定序列的所有可能排列，以元组(tuple)的形式返回。该函数可以帮助我们实现田忌和齐王马的出战排列组合，将所有可能的出战顺序排列生成，方便计算每个排列的胜率并比较胜率大小。</p><p>具体实现方式如下：</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> itertools</span><br><span class="line"></span><br><span class="line"><span class="comment"># 所有可能的出场顺序</span></span><br><span class="line">orders = <span class="built_in">list</span>(itertools.permutations([<span class="string">'t1'</span>, <span class="string">'t2'</span>, <span class="string">'t3'</span>]))</span><br></pre></td></tr></tbody></table></figure><p>上述代码将生成 [“t1”, “t2”, “t3”] 的所有可能排列，排序结果为 [(‘t1’, ‘t2’, ‘t3’), (‘t1’, ‘t3’, ‘t2’), (‘t2’, ‘t1’, ‘t3’), (‘t2’, ‘t3’, ‘t1’), (‘t3’, ‘t1’, ‘t2’), (‘t3’, ‘t2’, ‘t1’)]。我们可以将其看作是一张表格，每行数据表示一种可能的出战顺序。可以方便地遍历所有排列组合，通过计算每种排列的胜率并比较胜率大小来得到最佳出战顺序。</p></blockquote><h2 id="【运行示例】-7"><a href="#【运行示例】-7" class="headerlink" title="【运行示例】"></a><strong>【运行示例】</strong></h2><p><img src="https://pic.imgdb.cn/item/643178760d2dde5777e9de75.jpg"></p><h1 id="任务9：单词密码1"><a href="#任务9：单词密码1" class="headerlink" title="任务9：单词密码1"></a>任务9：单词密码1</h1><h2 id="【任务要求】-8"><a href="#【任务要求】-8" class="headerlink" title="【任务要求】"></a><strong>【任务要求】</strong></h2><ol><li><p>设计一个单词密码游戏。每次游戏从备选单词中随机选择一个单词作为要猜的单词密码，所有备选单词存放在文件中，通过文件读取的方式获得单词。</p></li><li><p>在游戏开始时，提示玩家单词密码的位数和总的能量数，玩家初始能量有6颗星。</p></li><li><p>玩家每次输入一个字母，若该字母是单词中的字母，猜对，将字母显示出来，其余没有被猜出来的字母用下划线“_”占位；若该字母不是单词中的字母，猜错，能量星减1，程序提示玩家剩余的能量值，并将所有猜错的字母显示出来（错误记录）。</p></li><li><p>当能量星减为0，还没有猜出来，游戏失败。</p></li><li><p>游戏可以重复玩，每次游戏结束询问玩家是否再次游戏。</p></li><li><p>可在此游戏基础上继续增加创意，丰富功能。</p></li></ol><h2 id="【示例代码】-8"><a href="#【示例代码】-8" class="headerlink" title="【示例代码】"></a><strong>【示例代码】</strong></h2><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> random</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_word_list</span>():</span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">"文件夹名称\words.txt"</span>, <span class="string">"r"</span>) <span class="keyword">as</span> f:</span><br><span class="line">        word_list = f.read().splitlines()</span><br><span class="line">    <span class="keyword">return</span> word_list</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_random_word</span>(<span class="params">word_list</span>):</span><br><span class="line">    <span class="keyword">return</span> random.choice(word_list)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">play_game</span>(<span class="params">word</span>):</span><br><span class="line">    word_length = <span class="built_in">len</span>(word)</span><br><span class="line">    energy = <span class="number">6</span></span><br><span class="line">    guessed_letters = []</span><br><span class="line">    correct_letters = []</span><br><span class="line">    wrong_letters = []</span><br><span class="line"></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">"Welcome to Word Password Game!"</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f"The word password has <span class="subst">{word_length}</span> letters."</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f"You have <span class="subst">{energy}</span> energy stars."</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">"Let's start!"</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        <span class="keyword">for</span> letter <span class="keyword">in</span> word:</span><br><span class="line">            <span class="keyword">if</span> letter <span class="keyword">in</span> correct_letters:</span><br><span class="line">                <span class="built_in">print</span>(letter, end=<span class="string">" "</span>)</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">"_"</span>, end=<span class="string">" "</span>)</span><br><span class="line">        <span class="built_in">print</span>()</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">len</span>(correct_letters) == word_length:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">"Congratulations! You guessed the password!"</span>)</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line">        guess = <span class="built_in">input</span>(<span class="string">"Guess a letter: "</span>).lower()</span><br><span class="line">        <span class="keyword">if</span> guess <span class="keyword">in</span> guessed_letters:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">"You already guessed this letter, try another one."</span>)</span><br><span class="line">            <span class="keyword">continue</span></span><br><span class="line">        guessed_letters.append(guess)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> guess <span class="keyword">in</span> word:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">"Correct!"</span>)</span><br><span class="line">            correct_letters.append(guess)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">"Wrong guess!"</span>)</span><br><span class="line">            energy -= <span class="number">1</span></span><br><span class="line">            wrong_letters.append(guess)</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">f"You have <span class="subst">{energy}</span> energy stars left."</span>)</span><br><span class="line">            <span class="keyword">if</span> energy == <span class="number">0</span>:</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">"Game over! You are out of energy stars!"</span>)</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">f"The password is <span class="subst">{word}</span>."</span>)</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">"The letters you guessed correctly:"</span>, correct_letters)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">"The letters you guessed wrongly:"</span>, wrong_letters)</span><br><span class="line"></span><br><span class="line">word_list = get_word_list()</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    word = get_random_word(word_list)</span><br><span class="line">    play_game(word)</span><br><span class="line"></span><br><span class="line">    play_again = <span class="built_in">input</span>(<span class="string">"Do you want to play again? (y/n): "</span>).lower()</span><br><span class="line">    <span class="keyword">if</span> play_again != <span class="string">"y"</span>:</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">"Thanks for playing Word Password Game!"</span>)</span><br></pre></td></tr></tbody></table></figure><blockquote><p>创建<code>words.txt</code>文件（一个单词一行，单词后不能有空格）</p><p>首先需要一个存储单词的文件 <code>words.txt</code>，代码中定义了一个 <code>get_word_list</code> 函数读取文件中的单词，并返回单词列表。然后定义了一个 <code>get_random_word</code> 函数，从单词列表中随机选择一个单词。接下来是 <code>play_game</code> 函数，这个函数接受一个单词作为参数，然后进入游戏循环。游戏循环中，先输出单词的长度和可用的能量星数，然后要求玩家输入字母猜测单词的字母。如果猜测正确，将字母添加到正确猜测列表中，否则将字母添加到错误猜测列表中，并减少能量星数量。如果能量星数量为零，则游戏结束。如果玩家成功猜出单词，则输出祝贺信息并结束游戏循环。最后输出玩家猜对的字母列表和错误的字母列表。在主程序中，先读取单词列表，然后无限循环，每次选择一个随机单词并开始游戏。游戏结束后询问玩家是否要再玩一次，如果不再玩一次则结束程序。</p></blockquote><h2 id="【运行示例】-8"><a href="#【运行示例】-8" class="headerlink" title="【运行示例】"></a><strong>【运行示例】</strong></h2><p><img src="https://pic.imgdb.cn/item/64317ec80d2dde5777f5caa2.jpg"></p><h1 id="任务10：单词密码2"><a href="#任务10：单词密码2" class="headerlink" title="任务10：单词密码2"></a>任务10：单词密码2</h1><p>在任务9中，单词密码游戏已经初步成形了，但是玩几次就会发现，英文单词实在太多了，仅凭单词的字母个数猜中一个单词实在是太难了，玩家玩几次之后就容易失去兴趣。如何优化这个游戏呢？</p><p>我们不妨给游戏增加一个功能——提示密码单词的所属类型，比如banana、apple等都属于水果，red、yellow等都属于颜色。</p><h2 id="【任务要求】-9"><a href="#【任务要求】-9" class="headerlink" title="【任务要求】"></a><strong>【任务要求】</strong></h2><ol><li><p>在任务9的基础上，增加提示玩家密码单词所属类型的功能。包括颜色、形状、水果、动物等。</p></li><li><p>可在此游戏基础上继续增加创意，丰富功能。</p></li></ol><h2 id="【示例代码】-9"><a href="#【示例代码】-9" class="headerlink" title="【示例代码】"></a><strong>【示例代码】</strong></h2><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> random</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_word_list</span>():</span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">"9\words.txt"</span>, <span class="string">"r"</span>) <span class="keyword">as</span> f:</span><br><span class="line">        word_list = f.read().splitlines()</span><br><span class="line">    <span class="keyword">return</span> word_list</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_random_word</span>(<span class="params">word_list</span>):</span><br><span class="line">    <span class="keyword">return</span> random.choice(word_list)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_password_type</span>(<span class="params">word</span>):</span><br><span class="line">    fruits = [<span class="string">"apple"</span>, <span class="string">"orange"</span>, <span class="string">"lemon"</span>, <span class="string">"lime"</span>, <span class="string">"pear"</span>, <span class="string">"grape"</span>, <span class="string">"cherry"</span>, <span class="string">"banana"</span>, <span class="string">"strawberry"</span>, <span class="string">"tomato"</span>,]</span><br><span class="line">    animals = [<span class="string">"bat"</span>, <span class="string">"bear"</span>, <span class="string">"cat"</span>, <span class="string">"deer"</span>, <span class="string">"dog"</span>, <span class="string">"donkey"</span>, <span class="string">"goat"</span>, <span class="string">"lion"</span>, <span class="string">"mouse"</span>, <span class="string">"panda"</span>, <span class="string">"rabbit"</span>, <span class="string">"tiger"</span>, <span class="string">"wolf"</span>]</span><br><span class="line">    colors = [<span class="string">"red"</span>, <span class="string">"orange"</span>, <span class="string">"yellow"</span>, <span class="string">"green"</span>, <span class="string">"blue"</span>, <span class="string">"violet"</span>, <span class="string">"white"</span>, <span class="string">"black"</span>, <span class="string">"brown"</span>,]</span><br><span class="line">    shapes = [<span class="string">"square"</span>, <span class="string">"triangle"</span>, <span class="string">"rectangle"</span>, <span class="string">"circle"</span>,]</span><br><span class="line">    <span class="keyword">if</span> word <span class="keyword">in</span> fruits:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"fruit"</span></span><br><span class="line">    <span class="keyword">elif</span> word <span class="keyword">in</span> animals:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"animal"</span></span><br><span class="line">    <span class="keyword">elif</span> word <span class="keyword">in</span> colors:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"color"</span></span><br><span class="line">    <span class="keyword">elif</span> word <span class="keyword">in</span> shapes:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"shape"</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"unknown"</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">play_game</span>(<span class="params">word</span>):</span><br><span class="line">    word_length = <span class="built_in">len</span>(word)</span><br><span class="line">    energy = <span class="number">6</span></span><br><span class="line">    guessed_letters = []</span><br><span class="line">    correct_letters = []</span><br><span class="line">    wrong_letters = []</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">get_correct_letter_count</span>(<span class="params">word, correct_letters</span>):</span><br><span class="line">        count = <span class="number">0</span></span><br><span class="line">        <span class="keyword">for</span> letter <span class="keyword">in</span> <span class="built_in">set</span>(word):</span><br><span class="line">            <span class="keyword">if</span> letter <span class="keyword">in</span> correct_letters:</span><br><span class="line">                count += word.count(letter)</span><br><span class="line">        <span class="keyword">return</span> count</span><br><span class="line"></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">"Welcome to Word Password Game!"</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f"The word password has <span class="subst">{word_length}</span> letters."</span>)</span><br><span class="line">    password_type = get_password_type(word)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f"It belongs to the <span class="subst">{password_type}</span> category."</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f"You have <span class="subst">{energy}</span> energy stars."</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">"Let's start!"</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        <span class="keyword">for</span> letter <span class="keyword">in</span> word:</span><br><span class="line">            <span class="keyword">if</span> letter <span class="keyword">in</span> correct_letters:</span><br><span class="line">                <span class="built_in">print</span>(letter, end=<span class="string">" "</span>)</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">"_"</span>, end=<span class="string">" "</span>)</span><br><span class="line">        <span class="built_in">print</span>()</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> get_correct_letter_count(word, correct_letters) == word_length:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">"Congratulations! You guessed the password!"</span>)</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line">        guess = <span class="built_in">input</span>(<span class="string">"Guess a letter: "</span>).lower()</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> guess.isalpha():</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">"Please input a letter!"</span>)</span><br><span class="line">            <span class="keyword">continue</span></span><br><span class="line">        <span class="keyword">if</span> guess <span class="keyword">in</span> guessed_letters:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">"You already guessed this letter, try another one."</span>)</span><br><span class="line">            <span class="keyword">continue</span></span><br><span class="line">        guessed_letters.append(guess)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> guess <span class="keyword">in</span> word:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">"Correct!"</span>)</span><br><span class="line">            correct_letters.append(guess)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">"Wrong guess!"</span>)</span><br><span class="line">            energy -= <span class="number">1</span></span><br><span class="line">            wrong_letters.append(guess)</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">f"You have <span class="subst">{energy}</span> energy stars left."</span>)</span><br><span class="line">            <span class="keyword">if</span> energy == <span class="number">0</span>:</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">"Game over! You are out of energy stars!"</span>)</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">f"The password is <span class="subst">{word}</span>."</span>)</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">"The letters you guessed correctly:"</span>, correct_letters)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">"The letters you guessed wrongly:"</span>, wrong_letters)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">word_list = get_word_list()</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    word = get_random_word(word_list)</span><br><span class="line">    play_game(word)</span><br><span class="line"></span><br><span class="line">    play_again = <span class="built_in">input</span>(<span class="string">"Do you want to play again? (y/n): "</span>).lower()</span><br><span class="line">    <span class="keyword">if</span> play_again != <span class="string">"y"</span>:</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">"Thanks for playing Word Password Game!"</span>)</span><br></pre></td></tr></tbody></table></figure><blockquote><p>这段代码实现了一个叫做“Word Password Game”（单词密码游戏）的游戏。游戏的目标是猜出一个由随机单词组成的密码，并在过程中消耗有限的能量星。游戏主体的代码是一个while循环，它在每一轮游戏中生成一个新的随机单词，并调用play_game()函数进行游戏。游戏过程中，程序会通过get_password_type()函数判断密码属于哪个类别（水果、动物、颜色和形状），并打印出相应的提示信息。玩家每次可以猜一个字母，程序会提示是否正确，同时显示已经猜中的字母和还未猜中的字母的位置。玩家在猜错时会失去能量星，当能量星消耗完毕时游戏结束，程序会告诉玩家正确的密码。如果玩家在消耗完所有能量星前猜中了密码，则玩家获胜。最后，程序会询问玩家是否想再玩一次，如果玩家选择不继续，则游戏结束，程序退出。</p><p>注意：如果一个单词有两个相同的字母，猜对一个的时候程序需要记录两个字符长度</p></blockquote><h2 id="【运行示例】-9"><a href="#【运行示例】-9" class="headerlink" title="【运行示例】"></a><strong>【运行示例】</strong></h2><p><img src="https://pic.imgdb.cn/item/64318a6b0d2dde5777060846.jpg"></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;strong&gt;作业1&lt;/strong&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="信息技术课程" scheme="https://yousa.love/categories/%E4%BF%A1%E6%81%AF%E6%8A%80%E6%9C%AF%E8%AF%BE%E7%A8%8B/"/>
    
    
  </entry>
  
  <entry>
    <title>B站视频测试</title>
    <link href="https://yousa.love/2023/04/02/B%E7%AB%99%E8%A7%86%E9%A2%91%E6%B5%8B%E8%AF%95/"/>
    <id>https://yousa.love/2023/04/02/B%E7%AB%99%E8%A7%86%E9%A2%91%E6%B5%8B%E8%AF%95/</id>
    <published>2023-04-02T06:21:53.000Z</published>
    <updated>2023-04-02T06:28:29.230Z</updated>
    
    <content type="html"><![CDATA[<p>测试</p><span id="more"></span><div style="position:relative; padding-bottom:75%; width:100%; height:0">    <iframe src="//player.bilibili.com/player.html?bvid=BV1D24y1B7FA&amp;page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" style="position:absolute; height: 100%; width: 100%;"></iframe></div>&gt; <figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">代码：</span><br><span class="line">&lt;div style="position:relative; padding-bottom:75%; width:100%; height:0"&gt;</span><br><span class="line">    &lt;iframe src="//player.bilibili.com/player.html?bvid=BV1D24y1B7FA&amp;amp;page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" style="position:absolute; height: 100%; width: 100%;"&gt;&lt;/iframe&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></tbody></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;测试&lt;/p&gt;</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>NexT主题接入评论系统</title>
    <link href="https://yousa.love/2023/04/02/NexT%E4%B8%BB%E9%A2%98%E6%8E%A5%E5%85%A5%E8%AF%84%E8%AE%BA%E7%B3%BB%E7%BB%9F/"/>
    <id>https://yousa.love/2023/04/02/NexT%E4%B8%BB%E9%A2%98%E6%8E%A5%E5%85%A5%E8%AF%84%E8%AE%BA%E7%B3%BB%E7%BB%9F/</id>
    <published>2023-04-02T02:57:19.000Z</published>
    <updated>2023-05-01T07:19:31.271Z</updated>
    
    <content type="html"><![CDATA[<p><strong>NexT主题接入评论系统</strong></p><span id="more"></span><h1 id="Gitalk"><a href="#Gitalk" class="headerlink" title="Gitalk"></a>Gitalk</h1><ol><li><p>在GitHub上注册新应用，链接：<a href="https://github.com/settings/applications/new">https://github.com/settings/applications/new</a></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">参数说明：</span><br><span class="line">Application name： # 应用名称，随意</span><br><span class="line">Homepage URL： # 网站URL</span><br><span class="line">Application description # 描述，随意</span><br><span class="line">Authorization callback URL：# 网站URL</span><br></pre></td></tr></tbody></table></figure></li><li><p>复制<code>Client ID</code>和<code>Client Secret</code></p></li><li><p>申请一个仓库做评论存储</p></li><li><p>打开NexT主题的_config.yml添加如下内容：</p><figure class="highlight yml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Gitalk</span></span><br><span class="line"><span class="comment"># For more information: https://gitalk.github.io</span></span><br><span class="line"><span class="attr">gitalk:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">github_id:</span> <span class="comment"># GitHub repo owner</span></span><br><span class="line">  <span class="attr">repo:</span> <span class="comment"># Repository name to store issues</span></span><br><span class="line">  <span class="attr">client_id:</span> <span class="comment"># GitHub Application Client ID</span></span><br><span class="line">  <span class="attr">client_secret:</span> <span class="comment"># GitHub Application Client Secret</span></span><br><span class="line">  <span class="attr">admin_user:</span> <span class="comment"># GitHub repo owner and collaborators, only these guys can initialize gitHub issues</span></span><br><span class="line">  <span class="attr">distraction_free_mode:</span> <span class="literal">true</span> <span class="comment"># Facebook-like distraction free mode</span></span><br><span class="line">  <span class="comment"># When the official proxy is not available, you can change it to your own proxy address</span></span><br><span class="line">  <span class="attr">proxy:</span> <span class="string">https://cors-anywhere.azm.workers.dev/https://github.com/login/oauth/access_token</span> <span class="comment"># This is official proxy address</span></span><br><span class="line">  <span class="comment"># Gitalk's display language depends on user's browser or system environment</span></span><br><span class="line">  <span class="comment"># If you want everyone visiting your site to see a uniform language, you can set a force language value</span></span><br><span class="line">  <span class="comment"># Available values: en | es-ES | fr | ru | zh-CN | zh-TW</span></span><br><span class="line">  <span class="attr">language:</span></span><br></pre></td></tr></tbody></table></figure></li></ol><p><strong>不幸的是：</strong></p><p><a href="https://cors-anywhere.azm.workers.dev/">https://cors-anywhere.azm.workers.dev</a>被墙了，导致代理失效。</p><p>因此要解决这个问题，可以自行搭建一个代理</p><h1 id="畅言"><a href="#畅言" class="headerlink" title="畅言"></a>畅言</h1><ol><li><p>注册<a href="http://changyan.kuaizhan.com/">畅言云评</a></p></li><li><p>添加站点</p></li><li><p>获取APP ID、APP KEY</p></li><li><p>在主题配置文件中修改</p><figure class="highlight yml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Changyan</span></span><br><span class="line"><span class="comment"># For more information: https://changyan.kuaizhan.com</span></span><br><span class="line"><span class="attr">changyan:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">appid:</span> </span><br><span class="line">  <span class="attr">appkey:</span> </span><br><span class="line">  <span class="comment"># Show comments count</span></span><br><span class="line">  <span class="attr">count:</span> <span class="literal">true</span></span><br></pre></td></tr></tbody></table></figure></li><li><p>是否开启评论：</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">在文章头部添加</span><br><span class="line">comments: false</span><br></pre></td></tr></tbody></table></figure></li></ol><h1 id="来必力"><a href="#来必力" class="headerlink" title="来必力"></a>来必力</h1><ol><li><p>在<a href="https://livere.com/">来必力</a>的官网上注册账号。</p></li><li><p>在<a href="https://livere.com/insight/myCode">此处</a>获取<code>data-uid</code>。</p></li><li><p>打开NexT主题的配置文件，搜索<code>livere_uid</code>，将id填写到<code>livere_uid：</code></p><figure class="highlight yml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># LiveRe comments system</span></span><br><span class="line"><span class="comment"># You can get your uid from https://livere.com/insight/myCode (General web site)</span></span><br><span class="line"><span class="attr">livere_uid:</span> <span class="comment"># &lt;your_uid&gt;</span></span><br></pre></td></tr></tbody></table></figure></li></ol>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;strong&gt;NexT主题接入评论系统&lt;/strong&gt;&lt;/p&gt;</summary>
    
    
    
    
    <category term="hexo" scheme="https://yousa.love/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>NexT主题数学公式显示</title>
    <link href="https://yousa.love/2023/04/01/NexT%E4%B8%BB%E9%A2%98%E6%95%B0%E5%AD%A6%E5%85%AC%E5%BC%8F%E6%98%BE%E7%A4%BA/"/>
    <id>https://yousa.love/2023/04/01/NexT%E4%B8%BB%E9%A2%98%E6%95%B0%E5%AD%A6%E5%85%AC%E5%BC%8F%E6%98%BE%E7%A4%BA/</id>
    <published>2023-04-01T14:28:09.000Z</published>
    <updated>2023-04-09T01:44:31.051Z</updated>
    
    <content type="html"><![CDATA[<h5 id="在-Next-主题中开启-MathJax-开关"><a href="#在-Next-主题中开启-MathJax-开关" class="headerlink" title="在 Next 主题中开启 MathJax 开关"></a>在 Next 主题中开启 <code>MathJax</code> 开关</h5><span id="more"></span><p>进入到主题目录，找到 <code>_config.yml</code> 配置文件，把 <code>math 默认的 </code>false<code> 修改为</code>true`，如下：</p><figure class="highlight yml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">math:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment"># Default (false) will load mathjax / katex script on demand.</span></span><br><span class="line">  <span class="comment"># That is it only render those page which has `mathjax: true` in front-matter.</span></span><br><span class="line">  <span class="comment"># If you set it to true, it will load mathjax / katex script EVERY PAGE.</span></span><br><span class="line">  <span class="attr">every_page:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">mathjax:</span></span><br><span class="line">    <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">    <span class="comment"># Available values: none | ams | all</span></span><br><span class="line">    <span class="attr">tags:</span> <span class="string">none</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">katex:</span></span><br><span class="line">    <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">    <span class="comment"># See: https://github.com/KaTeX/KaTeX/tree/master/contrib/copy-tex</span></span><br><span class="line">    <span class="attr">copy_tex:</span> <span class="literal">true</span></span><br></pre></td></tr></tbody></table></figure><p>如果只想让特定的的页面渲染，则把 <code>every_page</code> 修改为<code>false</code></p><p>还需要在文章的<code>Front-matter</code>里打开<code>math</code>开关，如下：</p><figure class="highlight yml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">title:</span> <span class="string">hexo支持mathjax</span></span><br><span class="line"><span class="attr">date:</span> </span><br><span class="line"><span class="attr">tags:</span> </span><br><span class="line"><span class="attr">mathjax:</span> <span class="literal">true</span> <span class="string">//</span> <span class="string">开启后才会渲染数学公式</span></span><br></pre></td></tr></tbody></table></figure>]]></content>
    
    
    <summary type="html">&lt;h5 id=&quot;在-Next-主题中开启-MathJax-开关&quot;&gt;&lt;a href=&quot;#在-Next-主题中开启-MathJax-开关&quot; class=&quot;headerlink&quot; title=&quot;在 Next 主题中开启 MathJax 开关&quot;&gt;&lt;/a&gt;在 Next 主题中开启 &lt;code&gt;MathJax&lt;/code&gt; 开关&lt;/h5&gt;</summary>
    
    
    
    
    <category term="hexo" scheme="https://yousa.love/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>GPT1、GPT2原理</title>
    <link href="https://yousa.love/2023/04/01/GPT1%E3%80%81GPT2%E5%8E%9F%E7%90%86/"/>
    <id>https://yousa.love/2023/04/01/GPT1%E3%80%81GPT2%E5%8E%9F%E7%90%86/</id>
    <published>2023-04-01T14:12:06.000Z</published>
    <updated>2023-05-01T07:14:28.706Z</updated>
    
    <content type="html"><![CDATA[<h2 id="GPT-1：无监督学习"><a href="#GPT-1：无监督学习" class="headerlink" title="GPT-1：无监督学习"></a>GPT-1：无监督学习</h2><span id="more"></span><h3 id="GPT-1原理介绍"><a href="#GPT-1原理介绍" class="headerlink" title="GPT-1原理介绍"></a>GPT-1原理介绍</h3><p>GPT模型主要包含两个阶段，第一个阶段，先利用大量未标注的语料预训练一个语言模型，接着，在第二个阶段对预训练好的语言模型进行微改，将其迁移到各种有监督的NLP任务，并对参数进行fine-tuning。</p><h4 id="预训练模型（无监督）"><a href="#预训练模型（无监督）" class="headerlink" title="预训练模型（无监督）"></a>预训练模型（无监督）</h4><p>给定一个没有标注的大语料，记每一个序列为$u=u_1,…,u_n$，GPT通过最大化以下似然函数来训练语言模型：</p><p><img src="https://pic.imgdb.cn/item/642843d6a682492fcc0882ce.jpg"></p><p>其中，k 表示上下文窗口的大小，这里计算每个单词的预测概率时，<strong>只考虑左侧窗口大小的词汇信息（单向Transformer）</strong>，在GPT中，作者基于一个12层的Transformer decoder作为语言模型的结构，并将decoder的中间那层线性变换删除，其结构和计算过程如下：</p><p><img src="https://pic.imgdb.cn/item/64283c12a682492fccf9e88a.png"></p><blockquote><p>GPT用的结构和Transformer的encoder、decoder都不一样，encoder是两个线性层，但是没有masked，decoder是三个线性层，有masked。</p></blockquote><p><img src="https://pic.imgdb.cn/item/64283c44a682492fccfa334e.jpg"><br>$$<br>h=UWe+W p<br>$$</p><p>$$<br>h_<br>l<br>​<br> =transformer_<br>b<br>​<br> lock(h_{l-1})∀i∈[1,n]<br>$$</p><p>$$<br>P(u)=softmax(h_<br>n<br>​<br> W_<br>c^<br>T<br>​<br> )<br>$$</p><p>其中，$U = u_i−k , . . . , u_i−1$表示左侧窗口的词汇向量，n表示Transformer的层数，$W_e$ 表示词向量矩阵，$W_p$表示position embedding矩阵，在GPT中，作者对position embedding矩阵进行随机初始化，<strong>让模型自己学习，而不是采用正弦余弦函数进行计算。(原Transformer用的三角函数)</strong></p><p>从GPT的计算公式来看，其实跟Transformer基本是一样的，只是对每个时间步，都只考虑左侧窗口大小的上下文信息。</p><p>由于使用了Masked Self-Attention，所以每个位置的词都不会“看见”后面的词，也就是预测的时候是看不见“答案”的，即避免了see themselves 的问题，保证了模型的合理性，这也是为什么OpenAI采用了单向Transformer的原因。</p><h4 id="fine-tuning（有监督）"><a href="#fine-tuning（有监督）" class="headerlink" title="fine-tuning（有监督）"></a>fine-tuning（有监督）</h4><p>当语言模型训练结束后，就可以将其迁移到具体的NLP任务中，假设将其迁移到一个文本分类任务中，记此时的数据集为 C ，对于每一个样本，其输入为 $x^1 , . . . , x^m$，输出为 $y$。对于每一个输入，经过预训练后的语言模型后，可以直接选取最后一层Transformer最后一个时间步的输出向量$h^m_l$，然后在其后面接一层全连接层，即可得到最后的预测标签概率：<br>$$<br>P(y∣x^<br>1<br> ,…,x^<br>m<br> )=softmax(h_<br>l^<br>m<br>​<br> W_<br>y<br>​<br> )<br>$$<br>其中，为引入的全来凝结层的参数矩阵。因此，可以得到在分类任务中的目标函数：<br>$$<br>L _<br>2<br>​<br> (C)=<br>\stackrel{}{\sum\limits_{x,y}}<br>​<br> logP(y∣x^<br>1<br> ,…,x^<br>m<br> )<br>$$<br>在具体的NLP任务中，作者在fine-tuning时<strong>也把语言模型的目标引入到目标函数中</strong>，作为辅助函数，作者发现这样操作可以提高模型的通用能力，并且加速模型手来你，其形式如下：<br>$$<br>L _<br>3<br>​<br> (C)=L  _<br>2<br>​<br> (C)+λ∗L  _<br>1<br>​<br> (C)<br>$$<br>其中 λ一般取0.5。</p><p>可以发现，在fine-tuning阶段，此时新增的参数只有最后一层全连接层的参数$W_y$，这比ELMo算法要容易得多。</p><p>不过，上面这个例子知识对与<strong>文本分类任务</strong>，如果是对于其他任务，比如文本蕴涵、问答、文本相似度等，那么GPT该如何进行微调呢？</p><ul><li>文本蕴涵：对于文本蕴涵任务（文本间的推理关系，问题-答案），作者用一个$负号将文本和假设进行拼接，并在拼接后的文本前后加入开始符 start 和结束符 end，然后将拼接后的文本直接传入预训练的语言模型，在模型再接一层线性变换和softmax即可。</li><li>文本相似度：对于文本相似度任务，由于相似度不需要考虑两个句子的顺序关系，因此，为了反映这一点，作者将两个句子分别与另一个句子进行拼接，中间用“$”进行隔开，并且前后还是加上起始和结束符，然后分别将拼接后的两个长句子传入Transformer，最后分别得到两个句子的向量表示，将这两个向量进行元素相加，然后再接如线性层和softmax层。</li><li>问答和尝试推理：对于问答和尝试推理任务，首先将本经信息与问题进行拼接，然后再将拼接后的文本一次与每个答案进行拼接，最后依次传入Transformer模型，最后接一层线性层得到每个输入的预测值。</li></ul><p>具体的方法可以查看下图，可以发现，对这些任务的微调主要是：</p><ul><li>增加线性层的参数</li><li>增加起始符、结束符和分隔符三种特殊符号的向量参数</li></ul><p><img src="https://pic.imgdb.cn/item/642845a2a682492fcc0ba32d.png"></p><h3 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h3><ul><li>GPT其实跟ELMO非常相似，只是把语言模型直接迁移到具体的NLP任务中，因此，更容易进行迁移学习。</li><li>不过GPT主要还是针对文本分类和标注性任务，如果对于生成任务，比如机器翻译等，则其结构也没法进行很好的迁移。</li></ul><h2 id="GPT-2：多任务学习"><a href="#GPT-2：多任务学习" class="headerlink" title="GPT-2：多任务学习"></a>GPT-2：多任务学习</h2><p>GPT-2继续沿用了原来在GPT中使用的单向 Transformer 模型，而这篇文章的目的就是尽可能利用单向Transformer的优势，做一些BERT使用的双向Transformer所做不到的事。那就是通过上文生成下文文本。</p><h3 id="GPT-2的改进"><a href="#GPT-2的改进" class="headerlink" title="GPT-2的改进"></a>GPT-2的改进</h3><p><strong>1. 去掉了fine-tuning层：</strong>不再针对不同任务分别进行微调建模，而是不定义这个模型应该做什么任务，模型会自动识别出来需要做什么任务，是很通用的设计。</p><p><strong>2. 增加数据集：</strong>GPT-2手机了更加广泛，数量更多的语料组成数据集。该数据集包含800万个网页，大小为40G。这些数据是经过过滤后得到的高质量文本。</p><p><strong>3. 增加网络参数：</strong>GPT-2将Transformer堆叠的层数增加到48层，隐层的维度为1600，参数量达到了15亿。（5倍于BERT的参数量）</p><p><strong>4. 调整Transformer：</strong>将layer normalization放到每个sub-block之前，并在最后一个self-attention后再增加一个layer normalization。</p><ol start="5"><li>此外，GPT-2将词汇表数量增加到50257个；最大的上下文大小从GPT-1的512提升到了1024 tokens；batch-size增加到512。</li></ol><h3 id="模型参数"><a href="#模型参数" class="headerlink" title="模型参数"></a>模型参数</h3><ul><li>同样使用了使用字节对编码构建字典，字典的大小：50257</li><li>滑动窗口大小：1024</li><li>batch-size：512</li><li>Layer Normalization移动到了每一块的输入部分，在每个self-attention之后额外添加了一个Layer Normalization</li><li>将残差层的初始化值用 $ \frac{1}{\sqrt(N)}$进行缩放，其中N是残差层的个数</li></ul><p>GPT-2训练了4组不同的层数和词向量的长度的模型，见表：</p><table><thead><tr><th>参数量</th><th>层数</th><th>词向量长度</th></tr></thead><tbody><tr><td>117M（GPT-1）</td><td>12</td><td>768</td></tr><tr><td>345M</td><td>124</td><td>1024</td></tr><tr><td>762M</td><td>36</td><td>1280</td></tr><tr><td>1542M</td><td>48</td><td>1600</td></tr></tbody></table><p>效果如下：</p><p><img src="https://pic.imgdb.cn/item/6428462da682492fcc0c8053.png"></p><p>可以看出随着模型的增大，模型的效果是不断提升的。模型仍欠拟合，后续还会加大数据量，做大做强。</p><h3 id="为什么GPT-2能够适应多任务？"><a href="#为什么GPT-2能够适应多任务？" class="headerlink" title="为什么GPT-2能够适应多任务？"></a>为什么GPT-2能够适应多任务？</h3><p>在训练的时候，采用了多任务的方式，不单单只在一个任务上进行学习，而是多个，每一个任务都要保证其损失函数能收敛，不同任务是共享主题Transformer参数的，进一步提升模型的泛化能力，因此在即使没有fine-tuning的情况下，依旧有非常不错的表现。</p><p>在fine-tuning有监督任务阶段，GPT-2根据给定输入与任务来做出相应的输出，那么模型就可以表示成下面这个样子：<br>$$<br>p(output∣input,task)<br>$$<br>例如可以直接输入：(“自然语言处理”, 中文翻译)来得到我们需要的结果(“Nature Language Processing”)，因此提出的模型可以将机器翻译，自然语言推理，语义分析，关系提取等10类任务统一建模为一个分类任务，而不误再为每一个子任务单独设计一个模型。</p>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;GPT-1：无监督学习&quot;&gt;&lt;a href=&quot;#GPT-1：无监督学习&quot; class=&quot;headerlink&quot; title=&quot;GPT-1：无监督学习&quot;&gt;&lt;/a&gt;GPT-1：无监督学习&lt;/h2&gt;</summary>
    
    
    
    
    <category term="GPT" scheme="https://yousa.love/tags/GPT/"/>
    
  </entry>
  
  <entry>
    <title>GPT-3QQbot</title>
    <link href="https://yousa.love/2023/04/01/GPT-3QQbot/"/>
    <id>https://yousa.love/2023/04/01/GPT-3QQbot/</id>
    <published>2023-04-01T13:30:48.000Z</published>
    <updated>2023-04-01T14:23:41.740Z</updated>
    
    <content type="html"><![CDATA[<div id="hbe-security">  <div class="hbe-input-container">  <input type="password" class="hbe-form-control" id="pass" placeholder="Please enter the password to read the blog.">    <label for="pass">Please enter the password to read the blog.</label>    <div class="bottom-line"></div>  </div></div><div id="decryptionError" style="display: none;">Incorrect Password!</div><div id="noContentError" style="display: none;">No content to display!</div><div id="encrypt-blog" style="display:none">U2FsdGVkX1+twJntsoAVVqzJ43U7qg3P9XJdETdJ6LW/mC14a5zYAziAhkzlVZi74xM9R07HXCWro3gVfzvV0nzfxkvolQi6f91ZdcOyG8BwTt4WSWQ/JUkzkqHPd5a7D5Pe0qYe1qbxlRN+Z2jYjmzuLgMCUO/Cbyo9cXnspn5rli9ndO56Y6pJeiKYJDsttTfGvDGlc75ilYY5UI8TtwjOWDJmgk1hd7j7HgTc5LWCk3IvJ7VF/7Wvsh6tOjJEA1ETvrTl0XqYQeTojTTyYtTPazQUkfglYz0VpdX5uYExuT4LWZ1jslXb9Nj3upXpudyQpSeiOdMX6lfQL/6homsFrk+nn0kWS6yMI6gD7jT3/f8CqQzD6EFCYNWlPeKOfj/4yEA+VdLO2JfTpeRCyeiqMatLBznpP6RN6bDCwtJ8yOZQf0bku68tc5X4DqFCRJmUdU4DTihGP+eoMBEF7Bl8+DsZ/a1t/JnDWh3t1Jti98G0CFBksUDdnYzQl/qGisYST+5gqQfzaXYFFKXtUegCHJbidKORw517Iq0xMUfor8Mnln8Qjs8VNuTbHQhKh9xclmq0WkVJwo3JdIcftOGMSnZ2PPaIFvavtSTmXRBdq9shYcNGnWis39DB2nbfO5bvQMgk3dLj5Z28/PygAY+Yq8L79z8ATGhsVKlIBiwDTU6rGWGHUhpAL4Lllm72NgVaJFjSAkVodByEAEq+4K1F15PR1oHbjVFtCHITbk/bEym8zXXbshAlLM4YDdhR/5/oVTX7iQyhSt8cJ06cgGW/ytTIePOxEAjURA/rYXFl+CCCl9pqXPRicVeYQppc9z6gADJRE9H+YEtSto1anMH+Jl+JMF5rMmHEjZd/+0A9AQSFtf9N6lWi5+/PPlwkTJHah3ZnqWSwpIil6XEdhtLyHUfCxglYqcFgTsolvRNxYRrCDqs2xzDmxZyMNu41WC+2abkwAG1NSBLi6RdM8giAxKOwtFY1kMHJLN4kbt5n4K17UEqH9uHMvujKa1jNzmo+EwHR1YNoimQE+3G901u2iveGZIW6CYzGwH5vhXlXF5Q07CHxmRBHQjjxi1/cptVkgTFNxl2JWqJ46Glb7Yb27qtBizsebzn5lTVM/0hfU4OagIdWOF8QcwoJLWLWRW/mendRx7mH6OqVuPToSoT0YrmXpb4WqS6i9uCvU2dsa1BlIGBkM6CPNRJWXi9nGd85fL7pnOR6JdYDjEqiJR8TqLMwNlNLE4BUUhJs1iobdUUx+F07UbI3K5GvIqx6a3K+2zl+xZ839hlgelz1IaJiY8hWA0iTq4yZzHoOXSzGgLkAkYQWwXnpdj7S5Jc6AYXDr8OzrYZRz/JVAv+9QxgnzajpCpZEfYW9LLJL4BhvIeEUOINHXnoXJ6tDLYRb4AH9B1+HNmqJ3C5EPuJgPiFFwaPc+MYQdSVB1BRQstDYZTyLuRybSDsDDmMEM1bqaoc8tFCBS0WWLXGTmqdP6Xg+FAEo7QNN898xksH8wI2r2LtoSTRpNT81ucpGrbI25/37LZ4tXlFUk2hLJKhR4L1nInjAL6ml6uFy/I58bYIkuCA+Bl3V35Mh/j4yyAH9ZARRC0zeqpf60npW7haTzt1mOrSQ5U2epWaTqXjNoeS6kc1f1qkY2fOJSf5SWfqj49ounsd5IQtYKqyP+mrzRleM0gCbR/ZLBncnWoJErKagGHff6VzxPF9cQSC7MQ6D8JEg8PY0o+cGgPAHQOOXcTHneamnLbWEMUe01mRwqYAQQouT8NJwDFO9eargAVh8vCSmvoJ6+s+zMZW5Bf2FaXNcXkA1ZAqiYGL8MvXLmjXg2/ggfNnuzUap+F7xCbD7VDd+itCTYHTKc1R8PyEGvTi9Fjq1rVX2XLzvKfLn9v1ReLygEqH9m4vsyjCIjGBLeApJo3VZhVyd+ut/T2Trll8aelHSiQeicMxZFr4XbJed8EH5iKwAah3H1KcIwO9JhJ9lfT5d45QtLatqzLHqH81UEGMFzV/ZMrjVbQAuwiGI3zpIKeVcE+sodl4S0/taaX5RBwTbsQW7F1SmXDpdVZ4Bhet3nib9wvqlwXDZpu6M6V2NXmzSydHBLnUBdHisqk4b1p1TXTF0dK2jc3dGO4x0ixwtsBo6SHlxt5ad+1/RsWjywHtTU7Krv4zPFv7SQDbKm43OPEBG6qpmPSnOuG0SpVcUErlHCB8qx3W2Vqt3WgsmRtmSkGClYs3PRysVzCs+vlRMv6ddbNPckXqyeeKoBhkPgzNUuTO/co+0WhUo5qvuILjQVxUWsBxL15t+zwkC7DqZwsBaJjKt8KZNTpUHKZOd/SNSp0jWRTVjTVX8m2QeI1abqTCVAVleuTVig/QEhYYN1HBPbnqLCVf2eJa6cdQ6448eYJC4KgF2Gfdp1IoL3r0s0aL+e8154F8r1NpTMuKw6nwFYZlgDuJ4lQ4Aqc32yzlUUdKX0OBkAUGP2gxEJPhicZyQSgOYxQ5gqH8JsFGi1Yft/6kpxC0l3EiT5qNaHxfAqjeMrZ63LPzY4utQ6QASAMycaC15Q8zszsdQVXQWlR7uXo0R3O4jbEauvB8sFv/j5zeXcXN0DL3qb5b8anC3hrU34b27eMRuMgCsenl2RAwdiLiyyLgGsJEiYkmVmxo7GCuR8CSLVtp0jx+2RJU6Rk7x8+RwNx+MMtohNM91zKD5BByF94jD14RO0YT8ZYltUD/v1N1midV07YqJeb2IU/uJS+MIQA9GUYu+wXNri4iI2StpVyheWDQXrw8Ehw/m3ERt87druGWHQCXF0sb5qEwE6OnyIwd77tg/YLZYBEmwVmHJvaVjCP4TP9b7PAvZX4FKqZeCxp30WOLYfnkp2f8LKh6E6jVymJJBMMosWemQTjHjeTuG40LeX5ZSgEWOQawuyFnjT/bYeq07Q8qnwjmE4Ypk1+x+r4WREPahYogSm6rBqXF4PU583wCPACD22iseT+OMZXsM/k1RvKoU9diGrJWAzUn0nvmvDPvMyrxG1uRwFPLjwCGehoEpPhO9HtNfMcaSJDvLmRpU60Ev/eVGfA9e93qEphHB+CSK2ezHtdn65EhAEdwJ4igvTyMJzobMqWqLmoB1dJfWuSu78yICaMQRFYocaxnw5MZDEZWqJ96U+K4XbZHJXBeJDHTQakfvCzi4n59kQYtpyCIyO1kVdl6/Dmt///fVlQNWUy0nLfd+VON3Z3h2yKYZFrGl3PQeayLoIEe3jLC/6Oc2HAceS4vRL0YrnWB/iTfXyfY3O8OGKKwAZCzmSD6yBkCZdysvo7xjRT8886cVR+40vQCo8whsA/emDU3J3bnElY1lXTAqn78OLY+HRSey8drkjpeWRcbMiwlACpAq2FS8QMbfs/Qg8MKPFDiB3SEC80bTCFqxpLpw6xVQhe4eXAJQmMjm8WEC/72fSuMQR+SWbWHe9psmPhwEHA/MS/Yr/8IHFVFVzLNzzZq69sBMSw4KVb8ZolXJh/+JXeuwl3UXsEKiLZw6iuzyTnjXBGisY/rz+RCdLldnuEP5pw2HmyygwIqHMRtXwM3Ez/R8qRUgaIItcn0z69V5HB/qyM2unR4TJ06jRw17iVCS9AEetSgtHAJDMkO8ixToTB6TqNoPeebu5nbwEJDO1wYCZLqknHPMOvEZ1GrL21uoLmE43338BqtDqdvomhCv8obu/+Lx8Acl+VRfmRofRX85eXmDnXIjdNNhYEXhPwrd4O5JOVc8sBwCqi4JqqQrijQe06q3LFIpXVohfF+SID2k91ycdMF7VgwAYxHfEYTP/8RStAQWiE0+o+MGIXRGYdLYWfUQeVXfd+ysbwvuvbRInyz2jb18+AC/ArC1m+t8J+fYxaaqFFPKcu4PPIpxs5ySkx2GWNBHkrI0OFJy7bD1ygA/lIjjxSL0VGB/Ww==</div><script src="/lib/crypto-js.js"></script><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <summary type="html">The article has been encrypted, please enter your password to view.&lt;br&gt;</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>GPT-4paper解读</title>
    <link href="https://yousa.love/2023/04/01/GPT-4paper%E8%A7%A3%E8%AF%BB/"/>
    <id>https://yousa.love/2023/04/01/GPT-4paper%E8%A7%A3%E8%AF%BB/</id>
    <published>2023-04-01T10:54:21.000Z</published>
    <updated>2023-05-01T07:14:18.631Z</updated>
    
    <content type="html"><![CDATA[<p><strong>GPT-4paper解读：</strong></p><span id="more"></span><h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><table><thead><tr><th>官方总结</th><th>我们已经创建了GPT-4，这是OpenAI在扩大深度学习方面的最新里程碑。GPT-4是一个大型多模态模型(接受图像和文本输入，输出文本)，虽然在许多现实场景中不如人类，但在各种专业和学术基准上表现出与人类相当的性能。</th></tr></thead><tbody><tr><td><strong>简介</strong></td><td>GPT-4是一个超大的多模态模型，它的输入可以是文字（上限约2.4万单词），还可以是图像。由于其更广泛的常识和先进的推理能力，它可以比我们之前的任何模型更准确地解决难题。</td></tr><tr><td><strong>核心原理</strong></td><td>GPT-4依旧是一个基于Transformer风格的预训练模型，用于预测文档中的下一个token，使用公开可用数据(如互联网数据)和第三方提供商授权的数据，利用人类反馈的强化学习(RLHF)对模型进行微调。</td></tr><tr><td><strong>意义</strong></td><td>GPT-4性能水平和人类相当！比如模拟律师考试，GPT-4取得了前10%的好成绩，相比之下GPT-3.5却是倒数10%；再比如做美国高考SAT试题，GPT-4也在阅读写作中拿下710分高分、数学700分（满分800）。</td></tr><tr><td><strong>亮点</strong></td><td>(1)、多模态特性：强大的识图能力，可以接受图像输入并理解图像内容；<br><br>(2)、更长的上下文：可以接受的文字输入长度也增加到3.2万个token（约2.5万个单词文本）；<br><br>(3)、针对问题基于提示可以利用不同的风格进行回答；<br><br>(4)、更加真实性、可控性：OpenAI 花了 6 个月的时间使用对抗性测试程序和 ChatGPT 的经验教训对 GPT-4 进行迭代调整；<br></td></tr><tr><td><strong>技术点</strong></td><td>GPT-4依旧设置技术壁垒，目前还没有公布具体模型架构、硬件、训练计算、数据集构造、训练方法的具体细节。<br><br>(1)、GPT-4依旧利用强化学习人类反馈 (RLHF) 来微调模型的行为：聘请了来自长期AI一致性/对齐风险、网络安全、生物风险和国际安全等领域的50多名专家对模型进行对抗性测试；<br><br>(2)、GPT-4的两个技术点提高安全性：一套额外的安全相关RLHF训练提示，以及基于规则的奖励模型(RBRMs)。通过训练模型拒绝对此类内容的请求来减少有害的输出。<br><br>(3)、OpenAI 基于Azure从头开始设计了一台超级计算机，并重建了整个深度学习堆栈；<br><br>(4)、OpenAI开源了 OpenAI Evals—自动评估 AI 模型性能的框架，主要是为了让所有人都可以指出其模型中的缺点，来帮助 OpenAI 进一步改进模型。它被用于创建和运行基准测试以评估 GPT-4 等模型，同时可以逐样本地检查模型性能；<br><br>(5)、模型训练到部署的庞大的团队工程能力：单看报告致谢的部分，就包括了几百人。预训练模块、长上下文模块、视觉模块、强化学习与对齐模块、评估与分析模块、部署模块等工程化的各个阶段，均装备了核心负责人小组、计算集群扩展小组、数据小组、分布式训练基础设施小组、硬件正确性小组、优化与架构小组、模型训练小组团队。<br></td></tr><tr><td><strong>缺点</strong></td><td>(1)、幻觉不可靠性：GPT-4与早期GPT模型有相似的局限性：它仍然不完全可靠，它会“产生幻觉”事实，但已经比ChatGPT减轻了这一缺点。<br><br>(2)、依旧存在错误推理的可能性：<br><br>(3)、依旧会产生有害的建议：但通过50位领域专家的反馈对模型进行了改进；<br><br>(4)、存在偏差性：GPT-4在输出中依旧存在各种偏差；<br><br>(5)、GPT-4上下文窗口有限；<br><br>(6)、GPT-4不能从经验中学习；<br><br>(7)、GPT-4会在生成的代码中引入安全漏洞；<br></td></tr></tbody></table><h2 id="GPT-4模型可使用版本"><a href="#GPT-4模型可使用版本" class="headerlink" title="GPT-4模型可使用版本"></a><strong>GPT-4模型可使用版本</strong></h2><table><thead><tr><th>最新模型</th><th>描述</th><th>最大TOKENS</th><th>训练数据</th></tr></thead><tbody><tr><td>gpt-4</td><td>比任何GPT-3.5模型更强大，能够完成更复杂的任务，并为聊天进行了优化。将与我们最新的模型迭代更新。</td><td>8,192 tokens</td><td>截至2021年9月</td></tr><tr><td>gpt-4-0314</td><td>2023年3月14日的gpt-4快照。与gpt-4不同的是，该模型将不会接受更新，并且只会在2023年6月14日结束的三个月内得到支持。</td><td>8,192 tokens</td><td>截至2021年9月</td></tr><tr><td>gpt-4-32k</td><td>与基础gpt-4模式相同的功能，但上下文长度是它的4倍。将与我们最新的模型迭代更新。</td><td>32,768 tokens</td><td>截至2021年9月</td></tr><tr><td>gpt-4-32k-0314</td><td>2023年3月14日gpt-4-32的快照。与gpt-4-32k不同的是，该型号将不接受更新，并且只支持三个月的时间，截止2023年6月14日。</td><td>32,768 tokens</td><td>截至2021年9月</td></tr></tbody></table>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;strong&gt;GPT-4paper解读：&lt;/strong&gt;&lt;/p&gt;</summary>
    
    
    
    
    <category term="GPT" scheme="https://yousa.love/tags/GPT/"/>
    
  </entry>
  
  <entry>
    <title>NexT主题添加阅读完成提示线</title>
    <link href="https://yousa.love/2023/04/01/NexT%E4%B8%BB%E9%A2%98%E6%B7%BB%E5%8A%A0%E9%98%85%E8%AF%BB%E5%AE%8C%E6%88%90%E6%8F%90%E7%A4%BA%E7%BA%BF/"/>
    <id>https://yousa.love/2023/04/01/NexT%E4%B8%BB%E9%A2%98%E6%B7%BB%E5%8A%A0%E9%98%85%E8%AF%BB%E5%AE%8C%E6%88%90%E6%8F%90%E7%A4%BA%E7%BA%BF/</id>
    <published>2023-04-01T10:13:43.000Z</published>
    <updated>2023-04-01T11:36:42.571Z</updated>
    
    <content type="html"><![CDATA[<ol><li><p>在路径 <code>themes/next/layout/_macro</code> 中新建 <code>passage-end-tag.njk</code> 文件,并添加以下内容：</p><span id="more"></span><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;div&gt;</span><br><span class="line">    {% if not is_index %}</span><br><span class="line">        &lt;div style="text-align:center;color: #ccc;font-size:14px;"&gt;-------------本文结束&lt;i class="fa-solid fa-check"&gt;&lt;/i&gt;感谢您的阅读-------------&lt;/div&gt;</span><br><span class="line">    {% endif %}</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></tbody></table></figure></li><li><p>接着打开<code>themes\next\layout_macro\post.njk</code>文件，在<code>post-body</code>之后，<code>post-footer</code> 之前添加如下代码:</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;div&gt;</span><br><span class="line">  {% if not is_index %}</span><br><span class="line">    {% include 'passage-end-tag.njk' %}</span><br><span class="line">  {% endif %}</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></tbody></table></figure></li></ol><p>​如图：<img src="https://pic.imgdb.cn/item/642804c7a682492fcca4d10b.jpg"></p><ol start="3"><li><p>打开主题配置文件，在末尾添加：</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># 文章末尾添加“本文结束”标记</span><br><span class="line">passage_end_tag:</span><br><span class="line">  enabled: true</span><br></pre></td></tr></tbody></table></figure></li></ol>]]></content>
    
    
    <summary type="html">&lt;ol&gt;
&lt;li&gt;&lt;p&gt;在路径 &lt;code&gt;themes/next/layout/_macro&lt;/code&gt; 中新建 &lt;code&gt;passage-end-tag.njk&lt;/code&gt; 文件,并添加以下内容：&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;</summary>
    
    
    
    
    <category term="hexo" scheme="https://yousa.love/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>NexT主题自定义文章底部版权声明</title>
    <link href="https://yousa.love/2023/04/01/NexT%E4%B8%BB%E9%A2%98%E8%87%AA%E5%AE%9A%E4%B9%89%E6%96%87%E7%AB%A0%E5%BA%95%E9%83%A8%E7%89%88%E6%9D%83%E5%A3%B0%E6%98%8E/"/>
    <id>https://yousa.love/2023/04/01/NexT%E4%B8%BB%E9%A2%98%E8%87%AA%E5%AE%9A%E4%B9%89%E6%96%87%E7%AB%A0%E5%BA%95%E9%83%A8%E7%89%88%E6%9D%83%E5%A3%B0%E6%98%8E/</id>
    <published>2023-04-01T10:13:00.000Z</published>
    <updated>2023-04-01T11:36:37.016Z</updated>
    
    <content type="html"><![CDATA[<h2 id="教程："><a href="#教程：" class="headerlink" title="教程："></a>教程：</h2><span id="more"></span><ol><li><p>在目录 <code>themes/next/layout/_macro/</code> 下添加 <code>my-copyright.njk</code> ，内容如下：</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">{% if page.copyright %}</span><br><span class="line">&lt;div class="my_post_copyright"&gt;</span><br><span class="line">  &lt;script src="//cdn.bootcss.com/clipboard.js/1.5.10/clipboard.min.js"&gt;&lt;/script&gt;</span><br><span class="line">  </span><br><span class="line">  &lt;!-- JS库 sweetalert 可修改路径 --&gt;</span><br><span class="line">  &lt;script type="text/javascript" src="http://jslibs.wuxubj.cn/sweetalert_mini/jquery-1.7.1.min.js"&gt;&lt;/script&gt;</span><br><span class="line">  &lt;script src="http://jslibs.wuxubj.cn/sweetalert_mini/sweetalert.min.js"&gt;&lt;/script&gt;</span><br><span class="line">  &lt;link rel="stylesheet" type="text/css" href="http://jslibs.wuxubj.cn/sweetalert_mini/sweetalert.mini.css"&gt;</span><br><span class="line"> </span><br><span class="line">  &lt;p&gt;&lt;span&gt;本文标题:&lt;/span&gt;{{ page.title }}&lt;/a&gt;&lt;/p&gt;</span><br><span class="line">  &lt;p&gt;&lt;span&gt;文章作者:&lt;/span&gt;{{ author }}&lt;/a&gt;&lt;/p&gt;</span><br><span class="line">  &lt;p&gt;&lt;span&gt;发布时间:&lt;/span&gt;{{ page.date.format("YYYY年MM月DD日 - HH:mm:ss") }}&lt;/p&gt;</span><br><span class="line">  &lt;p&gt;&lt;span&gt;最后更新:&lt;/span&gt;{{ page.updated.format("YYYY年MM月DD日 - HH:mm:ss") }}&lt;/p&gt;</span><br><span class="line">  &lt;p&gt;&lt;span&gt;原始链接:&lt;/span&gt;&lt;a href="{{ url_for(page.path) }}" title="{{ page.title }}"&gt;{{ page.permalink }}&lt;/a&gt;</span><br><span class="line">    &lt;span class="copy-path"  title="点击复制文章链接"&gt;&lt;i class="fa fa-clipboard" data-clipboard-text="{{ page.permalink }}"  aria-label="复制成功！"&gt;&lt;/i&gt;&lt;/span&gt;</span><br><span class="line">  &lt;/p&gt;</span><br><span class="line">  &lt;p&gt;&lt;span&gt;许可协议:&lt;/span&gt;&lt;i class="fa-regular fa-copyright"&gt;&lt;/i&gt; &lt;a rel="license" href="https://creativecommons.org/licenses/by-nc-nd/4.0/" target="_blank" title="Attribution-NonCommercial-NoDerivatives 4.0 International (CC BY-NC-ND 4.0)"&gt;署名-非商业性使用-禁止演绎 4.0 国际&lt;/a&gt; 转载请保留原文链接及作者。&lt;/p&gt;  </span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;script&gt; </span><br><span class="line">    var clipboard = new Clipboard('.fa-clipboard');</span><br><span class="line">    clipboard.on('success', $(function(){</span><br><span class="line">      $(".fa-clipboard").click(function(){</span><br><span class="line">        swal({   </span><br><span class="line">          title: "",   </span><br><span class="line">          text: '复制成功',   </span><br><span class="line">          html: false,</span><br><span class="line">          timer: 500,   </span><br><span class="line">          showConfirmButton: false</span><br><span class="line">        });</span><br><span class="line">      });</span><br><span class="line">    }));  </span><br><span class="line">&lt;/script&gt;</span><br><span class="line">{% endif %}</span><br></pre></td></tr></tbody></table></figure></li><li><p>在目录 <code>themes/next/source/css/_common/components/post/</code> 下添加 <code>my-post-copyright.styl</code>，内容如下:</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line">.my_post_copyright {</span><br><span class="line">  width: 85%;</span><br><span class="line">  max-width: 45em;</span><br><span class="line">  margin: 2.8em auto 0;</span><br><span class="line">  padding: 0.5em 1.0em;</span><br><span class="line">  border: 1px solid #d3d3d3;</span><br><span class="line">  font-size: 0.93rem;</span><br><span class="line">  line-height: 1.6em;</span><br><span class="line">  word-break: break-all;</span><br><span class="line">  background: rgba(255,255,255,0.4);</span><br><span class="line">}</span><br><span class="line">.my_post_copyright p{margin:0;}</span><br><span class="line">.my_post_copyright span {</span><br><span class="line">  display: inline-block;</span><br><span class="line">  width: 5.2em;</span><br><span class="line">  color: #333333; // title color</span><br><span class="line">  font-weight: bold;</span><br><span class="line">}</span><br><span class="line">.my_post_copyright .raw {</span><br><span class="line">  margin-left: 1em;</span><br><span class="line">  width: 5em;</span><br><span class="line">}</span><br><span class="line">.my_post_copyright a {</span><br><span class="line">  color: #808080;</span><br><span class="line">  border-bottom:0;</span><br><span class="line">}</span><br><span class="line">.my_post_copyright a:hover {</span><br><span class="line">  color: #0593d3; // link color</span><br><span class="line">  text-decoration: underline;</span><br><span class="line">}</span><br><span class="line">.my_post_copyright:hover .fa-clipboard {</span><br><span class="line">  color: #000;</span><br><span class="line">}</span><br><span class="line">.my_post_copyright .post-url:hover {</span><br><span class="line">  font-weight: normal;</span><br><span class="line">}</span><br><span class="line">.my_post_copyright .copy-path {</span><br><span class="line">  margin-left: 1em;</span><br><span class="line">  width: 1em;</span><br><span class="line">  +mobile(){display:none;}</span><br><span class="line">}</span><br><span class="line">.my_post_copyright .copy-path:hover {</span><br><span class="line">  color: #808080;</span><br><span class="line">  cursor: pointer;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></li><li><p>修改 <code>themes/next/layout/_macro/post.njk</code> ，如下：</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;div&gt;</span><br><span class="line">    {% if not is_index %}</span><br><span class="line">        {% include 'my-copyright.njk' %}</span><br><span class="line">    {% endif %}</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></tbody></table></figure><p><img src="https://pic.imgdb.cn/item/64280965a682492fccab5d8c.jpg"></p></li><li><p>打开 <code>themes/next/source/css/_common/components/post/index.styl</code> 文件，在最后一行增加代码：</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">@import 'my-post-copyright';</span><br></pre></td></tr></tbody></table></figure></li></ol><p>​</p><ol start="5"><li>设置新建文章自动开启 copyright,设置 <code>./scaffolds/post.md</code> 文件，如下：</li></ol><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: {{ title }}</span><br><span class="line">date: {{ date }}</span><br><span class="line">copyright: true </span><br><span class="line">---</span><br></pre></td></tr></tbody></table></figure>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;教程：&quot;&gt;&lt;a href=&quot;#教程：&quot; class=&quot;headerlink&quot; title=&quot;教程：&quot;&gt;&lt;/a&gt;教程：&lt;/h2&gt;</summary>
    
    
    
    
    <category term="hexo" scheme="https://yousa.love/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>中华人民共和国计算机信息网络国际联网管理暂行规定</title>
    <link href="https://yousa.love/2023/04/01/%E4%B8%AD%E5%8D%8E%E4%BA%BA%E6%B0%91%E5%85%B1%E5%92%8C%E5%9B%BD%E8%AE%A1%E7%AE%97%E6%9C%BA%E4%BF%A1%E6%81%AF%E7%BD%91%E7%BB%9C%E5%9B%BD%E9%99%85%E8%81%94%E7%BD%91%E7%AE%A1%E7%90%86%E6%9A%82%E8%A1%8C%E8%A7%84%E5%AE%9A/"/>
    <id>https://yousa.love/2023/04/01/%E4%B8%AD%E5%8D%8E%E4%BA%BA%E6%B0%91%E5%85%B1%E5%92%8C%E5%9B%BD%E8%AE%A1%E7%AE%97%E6%9C%BA%E4%BF%A1%E6%81%AF%E7%BD%91%E7%BB%9C%E5%9B%BD%E9%99%85%E8%81%94%E7%BD%91%E7%AE%A1%E7%90%86%E6%9A%82%E8%A1%8C%E8%A7%84%E5%AE%9A/</id>
    <published>2023-04-01T09:30:53.000Z</published>
    <updated>2023-04-01T09:39:03.285Z</updated>
    
    <content type="html"><![CDATA[<h3 id="中华人民共和国计算机信息网络国际联网管理暂行规定"><a href="#中华人民共和国计算机信息网络国际联网管理暂行规定" class="headerlink" title="中华人民共和国计算机信息网络国际联网管理暂行规定"></a><strong>中华人民共和国计算机信息网络国际联网管理暂行规定</strong></h3><span id="more"></span><p><img src="https://pic.imgdb.cn/item/6427faa7a682492fcc964c6b.jpg"></p><blockquote><p>　　第一条 为了加强对计算机信息网络国际联网的管理，保障国际计算机信息交流的健康发展，制定本规定。</p><p>　　第二条 中华人民共和国境内的计算机信息网络进行国际联网，应当依照本规定办理。</p><p>　　第三条 本规定下列用语的含义是：</p><p>　　（一）计算机信息网络国际联网（以下简称国际联网），是指中华人民共和国境内的计算机信息网络为实现信息的国际交流，同外国的计算机信息网络相联接。</p><p>　　（二）互联网络，是指直接进行国际联网的计算机信息网络；互联单位，是指负责互联网络运行的单位。</p><p>　　（三）接入网络，是指通过接入互联网络进行国际联网的计算机信息网络；接入单位，是指负责接入网络运行的单位。</p><p>　　第四条 国家对国际联网实行统筹规划、统一标准、分级管理、促进发展的原则。</p><p>　　第五条 国务院经济信息化领导小组（以下简称领导小组），负责协调、解决有关国际联网工作中的重大问题。</p><p>　　领导小组办公室按照本规定制定具体管理办法，明确国际出入口信道提供单位、互联单位、接入单位和用户的权利、义务和责任，并负责对国际联网工作的检查监督。</p><p>　　<strong>第六条 计算机信息网络直接进行国际联网，必须使用邮电部国家公用电信网提供的国际出入口信道。</strong></p><p>　　<strong>任何单位和个人不得自行建立或者使用其他信道进行国际联网。</strong></p><p>　　第七条 已经建立的互联网络，根据国务院有关规定调整后，分别由邮电部、电子工业部、国家教育委员会和中国科学院管理。</p><p>　　新建互联网络，必须报经国务院批准。</p><p>　　第八条 接入网络必须通过互联网络进行国际联网。</p><p>　　拟建立接入网络的单位，应当报经互联单位的主管部门或者主管单位审批；办理审批手续时，应当提供其计算机信息网络的性质、应用范围和所需主机地址等资料。</p><p>　　第九条 接入单位必须具备下列条件：</p><p>　　（一）是依法设立的企业法人或者事业法人；</p><p>　　（二）具有相应的计算机信息网络、装备以及相应的技术人员和管理人员；</p><p>　　（三）具有健全的安全保密管理制度和技术保护措施；</p><p>　　（四）符合法律和国务院规定的其他条件。</p><p>　　第十条 个人、法人和其他组织（以下统称用户）使用的计算机或者计算机信息网络，需要进行国际联网的，必须通过接入网络进行国际联网。</p><p>　　前款规定的计算机或者计算机信息网络，需要接入接入网络的，应当征得接入单位的同意，并办理登记手续。</p><p>　　第十—条 国际出入口信道提供单位、互联单位和接入单位，应当建立相应的网络管理中心，依照法律和国家有关规定加强对本单位及其用户的管理，做好网络信息安全管理工作，确保为用户提供良好、安全的服务。</p><p>　　第十二条 互联单位与接入单位，应当负责本单位及其用户有关国际联网的技术培训和管理教育工作。</p><p>　　第十三条 从事国际联网业务的单位和个人，应当遵守国家有关法律、行政法规，严格执行安全保密制度，不得利用国际联网从事危害国家安全、泄露国家秘密等违法犯罪活动，不得制作、查阅、复制和传播妨碍社会治安的信息和淫秽色情等信息。</p><p>　　第十四条 违反本规定第六条、第八条和第十条规定的，由公安机关或者公安机关根据国际出入口信道提供单位、互联单位、接入单位的意见，给予警告、通报批评、责令停止联网，可以并处15000元以下的罚款。</p><p>　　第十五条 违反本规定，同时触犯其他有关法律、行政法规的，依照有关法律、行政法规的规定予以处罚；构成犯罪的，依法追究刑事责任。</p><p>　　第十六条 与台湾、香港、澳门地区的计算机信息网络的联网，参照本规定执行。</p><p>　　第十七条 本规定自发布之日起施行。</p></blockquote>]]></content>
    
    
    <summary type="html">&lt;h3 id=&quot;中华人民共和国计算机信息网络国际联网管理暂行规定&quot;&gt;&lt;a href=&quot;#中华人民共和国计算机信息网络国际联网管理暂行规定&quot; class=&quot;headerlink&quot; title=&quot;中华人民共和国计算机信息网络国际联网管理暂行规定&quot;&gt;&lt;/a&gt;&lt;strong&gt;中华人民共和国计算机信息网络国际联网管理暂行规定&lt;/strong&gt;&lt;/h3&gt;</summary>
    
    
    
    
  </entry>
  
</feed>
