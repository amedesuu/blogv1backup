<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>SherryForever！</title>
  
  
  <link href="https://yousa.love/atom.xml" rel="self"/>
  
  <link href="https://yousa.love/"/>
  <updated>2023-03-12T02:52:44.546Z</updated>
  <id>https://yousa.love/</id>
  
  <author>
    <name>Rock Zhang</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>GPT-3模型</title>
    <link href="https://yousa.love/2023/03/12/GPT-3%E6%A8%A1%E5%9E%8B/"/>
    <id>https://yousa.love/2023/03/12/GPT-3%E6%A8%A1%E5%9E%8B/</id>
    <published>2023-03-12T02:42:05.000Z</published>
    <updated>2023-03-12T02:52:44.546Z</updated>
    
    <content type="html"><![CDATA[<h2 id="模型综述"><a href="#模型综述" class="headerlink" title="模型综述"></a>模型综述</h2><span id="more"></span><table><thead><tr><th>模型名称</th><th>描述</th><th>最大tokens</th><th>训练数据</th></tr></thead><tbody><tr><td>text-davinci-003</td><td>最强大的GPT-3模型。 具有更高的输出质量、 更长的输出内容 和更好的语言理解能力。 还支持文本插入功能。</td><td>4,000 tokens</td><td>截至2021年6月</td></tr><tr><td>text-curie-001</td><td>功能强大， 但比<code>Davinci</code>速度更快，价格也更便宜。</td><td>2,048 tokens</td><td>截至2019年10月</td></tr><tr><td>text-babbage-001</td><td>能够完成简单任务，速度快，成本低。</td><td>2,048 tokens</td><td>截至2019年10月</td></tr><tr><td>text-ada-001</td><td>能够完成非常简单的任务， 通常是GPT-3系列中速度最快的，成本最低的。</td><td>2,048 tokens</td><td>截至2019年10月</td></tr></tbody></table><h2 id="Codex子模型"><a href="#Codex子模型" class="headerlink" title="Codex子模型"></a>Codex子模型</h2><table><thead><tr><th>模型名称</th><th>描述</th><th>最大请求</th><th>训练数据</th></tr></thead><tbody><tr><td>code-davinci-002</td><td>最强大的Codex模型。 特别擅长将自然语言转译成代码。 除了完成代码外，还支持在代码补全。</td><td>8,000 tokens</td><td>截至2021年6月</td></tr><tr><td>code-cushman-001</td><td>几乎与<code>Davinci Codex</code>一样强大，但速度稍快。 这种速度优势可使其更适合于实时应用。</td><td>2,048 tokens</td><td></td></tr></tbody></table>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;模型综述&quot;&gt;&lt;a href=&quot;#模型综述&quot; class=&quot;headerlink&quot; title=&quot;模型综述&quot;&gt;&lt;/a&gt;模型综述&lt;/h2&gt;</summary>
    
    
    
    <category term="AI" scheme="https://yousa.love/categories/AI/"/>
    
    
    <category term="GPT" scheme="https://yousa.love/tags/GPT/"/>
    
  </entry>
  
  <entry>
    <title>hexo文章加密</title>
    <link href="https://yousa.love/2023/03/11/hexo%E6%96%87%E7%AB%A0%E5%8A%A0%E5%AF%86/"/>
    <id>https://yousa.love/2023/03/11/hexo%E6%96%87%E7%AB%A0%E5%8A%A0%E5%AF%86/</id>
    <published>2023-03-11T14:38:35.000Z</published>
    <updated>2023-03-12T02:54:50.529Z</updated>
    
    <content type="html"><![CDATA[<h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><span id="more"></span><ol><li>在你的<code>hexo</code>根目录的<em>package.json</em>文件夹中添加：</li></ol><p><code>&quot;hexo-blog-encrypt: &quot;2.0.*”</code></p><ol start="2"><li>然后在命令行中输入：</li></ol><p><code>npm install</code></p><ol start="3"><li><p>找到根目录下的<code>_config.yml</code>文件，添加如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># Security</span><br><span class="line">##</span><br><span class="line">encrypt:</span><br><span class="line">    enable: true</span><br></pre></td></tr></table></figure></li></ol><h1 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h1><p>在你要加密的文章头部写入<code>password: </code></p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;安装&quot;&gt;&lt;a href=&quot;#安装&quot; class=&quot;headerlink&quot; title=&quot;安装&quot;&gt;&lt;/a&gt;安装&lt;/h1&gt;</summary>
    
    
    
    
    <category term="hexo" scheme="https://yousa.love/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>ys_individual_server</title>
    <link href="https://yousa.love/2023/03/11/ys-individual-server/"/>
    <id>https://yousa.love/2023/03/11/ys-individual-server/</id>
    <published>2023-03-11T07:16:56.000Z</published>
    <updated>2023-03-12T03:05:12.561Z</updated>
    
    <content type="html"><![CDATA[<div id="hbe-security">  <div class="hbe-input-container">  <input type="password" class="hbe-form-control" id="pass" placeholder="Please enter the password to read the blog." />    <label for="pass">Please enter the password to read the blog.</label>    <div class="bottom-line"></div>  </div></div><div id="decryptionError" style="display: none;">Incorrect Password!</div><div id="noContentError" style="display: none;">No content to display!</div><div id="encrypt-blog" style="display:none"></div><script src="/lib/crypto-js.js"></script><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <summary type="html">The article has been encrypted, please enter your password to view.&lt;br&gt;</summary>
    
    
    
    <category term="教程" scheme="https://yousa.love/categories/%E6%95%99%E7%A8%8B/"/>
    
    
    <category term="Genshin" scheme="https://yousa.love/tags/Genshin/"/>
    
  </entry>
  
  <entry>
    <title>python实现OpenAI的API调用</title>
    <link href="https://yousa.love/2023/02/26/python%E5%AE%9E%E7%8E%B0OpenAI%E7%9A%84API%E8%B0%83%E7%94%A8/"/>
    <id>https://yousa.love/2023/02/26/python%E5%AE%9E%E7%8E%B0OpenAI%E7%9A%84API%E8%B0%83%E7%94%A8/</id>
    <published>2023-02-26T06:50:14.000Z</published>
    <updated>2023-03-12T03:03:25.139Z</updated>
    
    <content type="html"><![CDATA[<p><code>pip install -i https://mirrors.aliyun.com/pypi/simple/ openai</code></p><span id="more"></span><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> openai</span><br><span class="line"></span><br><span class="line"><span class="comment"># OpenAI API</span></span><br><span class="line">openai.api_key=<span class="string">&quot;YOUR_API_KEY&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 模型</span></span><br><span class="line">model_engine=<span class="string">&quot;text-davinci-003&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 想要询问的话</span></span><br><span class="line">prompt = <span class="string">&quot;Hello&quot;</span></span><br><span class="line"></span><br><span class="line">completion = openai.Completion.create(</span><br><span class="line">    engine=model_engine,</span><br><span class="line">    prompt=prompt,max_tokens=<span class="number">1024</span>,</span><br><span class="line">    n=<span class="number">1</span>,</span><br><span class="line">    stop=<span class="literal">None</span>,</span><br><span class="line">    temperature=<span class="number">0.5</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 输出回复</span></span><br><span class="line">Response = completion.choices[<span class="number">0</span>].text</span><br><span class="line"><span class="built_in">print</span>(Response)</span><br></pre></td></tr></table></figure><h2 id="下面是GPT-3和Codex模型支持的参数："><a href="#下面是GPT-3和Codex模型支持的参数：" class="headerlink" title="下面是GPT-3和Codex模型支持的参数："></a>下面是GPT-3和Codex模型支持的参数：</h2><table><thead><tr><th>参数名</th><th>类型</th><th>默认值</th><th>说明</th></tr></thead><tbody><tr><td><code>model</code></td><td>string</td><td></td><td>模型名称</td></tr><tr><td><code>prompt</code></td><td>string</td><td></td><td>输入的提示</td></tr><tr><td><code>suffix</code></td><td>string</td><td><code>null</code></td><td>文本生成后在文末插入的后缀</td></tr><tr><td><code>max_tokens</code></td><td>int</td><td><code>16</code></td><td>文本生成时要生成的最大token数。 提示的token数加上<code>max_tokens</code>不能超过模型的上下文长度。 大多数模型的上下文长度为2048个token（最新模型支持4096 tokens）</td></tr><tr><td><code>temperature</code></td><td>float</td><td><code>1</code></td><td>采样温度。值越高意味着模型承担的风险越大。 对于需要创意的场景，可以尝试0.9， 对于答案明确的场景，建议用0（argmax采样） 建议不要与<code>top_p</code>同时改变。</td></tr><tr><td><code>top_p</code></td><td>float</td><td><code>1</code></td><td>核采样（温度采样的另一种方式），其中模型考虑具有<code>top_p</code>概率质量的token的结果。因此，0.1意味着只考虑包含最高10%概率质量的token 建议不要与<code>temperature</code>同时改变。</td></tr><tr><td><code>n</code></td><td>int</td><td><code>1</code></td><td>每个提示要生成多少个答案</td></tr><tr><td><code>stream</code></td><td>boolean</td><td><code>false</code></td><td>是否返回流传输进度。如果设置，token将在可用时以纯数据服务器端推送事件发送，流以<code>data:[DONE]</code>消息终止。</td></tr><tr><td><code>logprobs</code></td><td>int</td><td><code>nul</code></td><td>如果传值（最大值5）则表示包括<code>logprobs</code>个最可能的token以及所选令牌的对数概率。例如，如果<code>logprobs</code>为5，则API将返回包含5个最可能Token的列表。</td></tr><tr><td><code>echo</code></td><td>boolean</td><td><code>false</code></td><td>是否回传提示</td></tr><tr><td><code>stop</code></td><td>string</td><td><code>null</code></td><td>最多4个序列，遇到<code>stop</code>API将停止生成。 返回的文本不包含停止序列。</td></tr><tr><td><code>presence_penalty</code></td><td>float</td><td><code>0</code></td><td>数值介于-2.0和2.0之间。正值将根据到目前为止新token是否出现在文本中来惩罚新token，从而增加模型谈论新主题的可能性。</td></tr><tr><td><code>frequency_penalty</code></td><td>float</td><td><code>0</code></td><td>数值介于-2.0和2.0之间。正值根据文本中新token已经出现的频率惩罚新token，从而降低模型逐字重复同一行的可能性。</td></tr><tr><td><code>best_of</code></td><td>int</td><td><code>1</code></td><td>在服务端生成<code>best_of</code>个完成，并返回“最佳”（每个token的log概率最高的一条）。结果无法流式传输。与<code>n</code>一起使用时，<code>best_of</code>控制候选回应的数量，<code>n</code>指定要返回的数量–<code>best_of</code>必须大于等于<code>n</code>。注意：由于此参数生成许多回应，因此会快速消耗token配额。小心使用并确保对<code>max_tokens</code>和<code>stop</code>进行了合理的设置。</td></tr><tr><td><code>logit_bias</code></td><td>map</td><td><code>null</code></td><td>修改回应种出现指定token的可能性。接受一个json对象，该对象将token（由<a href="https://platform.openai.com/tokenizer?view=bpe">GPT tokenizer</a>的token ID指定）映射到-100到100之间的相关偏差值。可以用 <a href="https://platform.openai.com/tokenizer?view=bpe">tokenizer tool</a> 将文本转换成token ID。在数学上，在采样之前，将偏差添加到模型生成的逻辑中。每个模型的确切效果会有所不同，但介于-1和1之间的值应该会降低或增加选择的可能性；像-100或100这样的值应该会导致相关token的禁用或必现。例如，可以传递<code>｛&quot;50256&quot;: -100｝</code>以防止生成。</td></tr><tr><td><code>user</code></td><td>string</td><td><code>null</code></td><td>代表终端用户的唯一标识符，OpenAI用来监控和检测滥用。</td></tr></tbody></table>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;code&gt;pip install -i https://mirrors.aliyun.com/pypi/simple/ openai&lt;/code&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="AI" scheme="https://yousa.love/categories/AI/"/>
    
    
    <category term="python" scheme="https://yousa.love/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>pip换源</title>
    <link href="https://yousa.love/2023/02/25/pip%E6%8D%A2%E6%BA%90/"/>
    <id>https://yousa.love/2023/02/25/pip%E6%8D%A2%E6%BA%90/</id>
    <published>2023-02-25T10:39:40.000Z</published>
    <updated>2023-03-12T02:53:36.400Z</updated>
    
    <content type="html"><![CDATA[<p><code>pip install -i https://pypi.tuna.tsinghua.edu.cn/simple/  [包名]</code></p><span id="more"></span><p><code>pip config set global.index-url https://mirrors.ustc.edu.cn/pypi/web/simple</code></p><p><code>pip config set global.index-url https://mirrors.aliyun.com/pypi/simple/</code></p><p><code>pip config set global.index-url http://mirrors.cloud.tencent.com/pypi/simple</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">https://repo.huaweicloud.com/repository/pypi/simple/ 华为源 19ms</span><br><span class="line">https://pypi.tuna.tsinghua.edu.cn/simple/ 清华安装源 28ms</span><br><span class="line">https://mirrors.aliyun.com/pypi/simple/ 阿里安装源 28ms</span><br><span class="line">https://mirrors.bfsu.edu.cn/pypi/web/simple/ 中国科技大学源 31ms</span><br><span class="line">http://mirrors.cloud.tencent.com/pypi/simple 腾讯源</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;code&gt;pip install -i https://pypi.tuna.tsinghua.edu.cn/simple/  [包名]&lt;/code&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="Coding" scheme="https://yousa.love/categories/Coding/"/>
    
    
    <category term="python" scheme="https://yousa.love/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>python实现最优选科方案</title>
    <link href="https://yousa.love/2023/02/25/python%E5%AE%9E%E7%8E%B0%E6%9C%80%E4%BC%98%E9%80%89%E7%A7%91%E6%96%B9%E6%A1%88/"/>
    <id>https://yousa.love/2023/02/25/python%E5%AE%9E%E7%8E%B0%E6%9C%80%E4%BC%98%E9%80%89%E7%A7%91%E6%96%B9%E6%A1%88/</id>
    <published>2023-02-25T09:18:49.000Z</published>
    <updated>2023-02-25T13:47:50.750Z</updated>
    
    <content type="html"><![CDATA[<p>python实现最优选科方案</p><span id="more"></span><p><a href="https://wwft.lanzoul.com/ifxbK0ojw96b">程序下载链接，密码：1111</a></p><p>注意：在有排名相同的情况时则会按照科目顺序给出选科方案</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#设置学科列表</span></span><br><span class="line">sub = [<span class="string">&quot;物理&quot;</span>,<span class="string">&quot;历史&quot;</span>,<span class="string">&quot;化学&quot;</span>,<span class="string">&quot;生物&quot;</span>,<span class="string">&quot;地理&quot;</span>,<span class="string">&quot;政治&quot;</span>]</span><br><span class="line">mainsub = [<span class="string">&quot;物理&quot;</span>,<span class="string">&quot;历史&quot;</span>]</span><br><span class="line">minorsub = [<span class="string">&quot;化学&quot;</span>,<span class="string">&quot;生物&quot;</span>,<span class="string">&quot;地理&quot;</span>,<span class="string">&quot;政治&quot;</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment">#获取学生的6门学科成绩</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;请按照所示顺序输入你的学科排名，排名之间请用一个空格隔开！&quot;</span>)</span><br><span class="line">a = <span class="built_in">list</span>(<span class="built_in">map</span>(<span class="built_in">int</span>, <span class="built_in">input</span>(<span class="string">&quot;物理 历史 化学 生物 地理 政治\n&quot;</span>).split(<span class="string">&quot; &quot;</span>)))</span><br><span class="line"><span class="comment">#将学生的6门成绩存入rating字典中</span></span><br><span class="line">rating = &#123;&#125;</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">6</span>):</span><br><span class="line">    rating[sub[i]] = a[i]</span><br><span class="line"></span><br><span class="line"><span class="comment">#输出学生6门成绩</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">6</span>):</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">fr&quot;你的<span class="subst">&#123;sub[i]&#125;</span>成绩为第<span class="subst">&#123;rating[sub[i]]&#125;</span>&quot;</span>, <span class="string">&quot;名&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#设置存放3门课程的列表</span></span><br><span class="line">select = []</span><br><span class="line"><span class="comment">#设置最小总成绩</span></span><br><span class="line"><span class="built_in">min</span> = <span class="number">1145141919810</span></span><br><span class="line"><span class="comment">#遍历每种情况</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">2</span>):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">4</span>):</span><br><span class="line">        <span class="keyword">for</span> k <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">4</span>):</span><br><span class="line">            <span class="comment">#若两门课相同，则跳过</span></span><br><span class="line">            <span class="keyword">if</span>(k == j):</span><br><span class="line">                <span class="keyword">continue</span></span><br><span class="line">            <span class="comment">#计算3门课程总成绩</span></span><br><span class="line">            tot = rating[mainsub[i]]+rating[minorsub[j]]+rating[minorsub[k]]</span><br><span class="line">            <span class="comment">#若当前总成绩比最小总成绩小，则更新最小总成绩和3门课程</span></span><br><span class="line">            <span class="keyword">if</span>(<span class="built_in">min</span> &gt; tot):</span><br><span class="line">                <span class="built_in">min</span> = tot</span><br><span class="line">                <span class="keyword">del</span> select[<span class="number">0</span>:]</span><br><span class="line">                select.append(mainsub[i]), select.append(minorsub[j]), select.append(minorsub[k])</span><br><span class="line"></span><br><span class="line"><span class="comment">#输出3门课程</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;根据排名计算，你的最优选科组合为：&quot;</span>)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">3</span>):</span><br><span class="line">    <span class="built_in">print</span>(select[i], end = <span class="string">&quot; &quot;</span>)</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;python实现最优选科方案&lt;/p&gt;</summary>
    
    
    
    <category term="信息技术课程" scheme="https://yousa.love/categories/%E4%BF%A1%E6%81%AF%E6%8A%80%E6%9C%AF%E8%AF%BE%E7%A8%8B/"/>
    
    
    <category term="python" scheme="https://yousa.love/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>python循环结构（第一节）</title>
    <link href="https://yousa.love/2023/02/25/python%E5%BE%AA%E7%8E%AF%E7%BB%93%E6%9E%84%EF%BC%88%E7%AC%AC%E4%B8%80%E8%8A%82%EF%BC%89/"/>
    <id>https://yousa.love/2023/02/25/python%E5%BE%AA%E7%8E%AF%E7%BB%93%E6%9E%84%EF%BC%88%E7%AC%AC%E4%B8%80%E8%8A%82%EF%BC%89/</id>
    <published>2023-02-25T08:43:57.000Z</published>
    <updated>2023-02-25T09:19:48.548Z</updated>
    
    <content type="html"><![CDATA[<p>第一节<span id="more"></span></p><ol><li>用python for循环写一个计算一百以内整数之和的程序</li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sum</span> = <span class="number">0</span> </span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,<span class="number">101</span>):    </span><br><span class="line"></span><br><span class="line"><span class="built_in">sum</span> += i </span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;1-100的整数之和为：&quot;</span>,<span class="built_in">sum</span>)</span><br></pre></td></tr></table></figure><ol start="2"><li>用python for循环写一个计算0到用户输入整数之间所有整数之和的程序</li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">n = <span class="built_in">int</span>(<span class="built_in">input</span>(<span class="string">&#x27;请输入一个非零整数：&#x27;</span>)) </span><br><span class="line"></span><br><span class="line"><span class="built_in">sum</span> = <span class="number">0</span> </span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> num <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>,n+<span class="number">1</span>):    </span><br><span class="line"></span><br><span class="line"><span class="built_in">sum</span> += num </span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;从0加到%d的和为：%d&#x27;</span> % (n,<span class="built_in">sum</span>))</span><br></pre></td></tr></table></figure><ol start="3"><li>用python写一个计算0到100之间所有是3的倍数的整数之和的程序</li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 定义变量s用于存储整数之和 </span></span><br><span class="line">s = <span class="number">0</span> </span><br><span class="line"></span><br><span class="line"><span class="comment"># 遍历0到100之间的整数 </span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, <span class="number">101</span>):    </span><br><span class="line">    </span><br><span class="line"><span class="comment"># 判断整数是否为3的倍数    </span></span><br><span class="line"><span class="keyword">if</span> i % <span class="number">3</span> == <span class="number">0</span>:        </span><br><span class="line">s += i </span><br><span class="line">        </span><br><span class="line"><span class="comment"># 打印计算结果 </span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;0到100之间所有是3的倍数的整数之和为：&#x27;</span>, s)</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;第一节</summary>
    
    
    
    <category term="信息技术课程" scheme="https://yousa.love/categories/%E4%BF%A1%E6%81%AF%E6%8A%80%E6%9C%AF%E8%AF%BE%E7%A8%8B/"/>
    
    
    <category term="python" scheme="https://yousa.love/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>灰原哀模型v2.0</title>
    <link href="https://yousa.love/2023/01/31/%E7%81%B0%E5%8E%9F%E5%93%80%E6%A8%A1%E5%9E%8Bv2-0/"/>
    <id>https://yousa.love/2023/01/31/%E7%81%B0%E5%8E%9F%E5%93%80%E6%A8%A1%E5%9E%8Bv2-0/</id>
    <published>2023-01-31T15:10:41.000Z</published>
    <updated>2023-03-12T02:52:05.507Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://www.lingshulian.com/s/cc9ce03ee12f727c">下载链接</a></p><span id="more"></span><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">MD5: a2ab50776d33f811aa87e8177d8cfc96</span><br><span class="line">SHA1: ce1a58371272e80cd7789fdc4e0aa895706ddb20</span><br><span class="line">SHA256: 63b1637c43979880fcad83a59c6efe8e7f22fdd32ee16bb6e3faaa6461883236</span><br></pre></td></tr></table></figure><p>出货率大概在60%-70%左右</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">训练参数：</span><br><span class="line"></span><br><span class="line">max_train_steps = 3000</span><br><span class="line">learning_rate = 5e-6</span><br><span class="line">lr_scheduler = &quot;cosine_with_restarts&quot;</span><br><span class="line">lr_warmup_steps = 100</span><br><span class="line">batch_size</span><br><span class="line">train_batch_size = 1</span><br><span class="line">num_class_images = 30</span><br><span class="line">with_prior_preservation = True</span><br><span class="line">read_prompt_from_filename = False</span><br><span class="line">read_prompt_from_txt = False</span><br><span class="line">append_prompt = &quot;instance&quot;</span><br><span class="line">save_interval = 1000</span><br><span class="line">use_deepdanbooru = False</span><br><span class="line">resolution = 512</span><br><span class="line">gradient_accumulation_steps = 1</span><br><span class="line">seed = 1337</span><br><span class="line">log_interval = 10</span><br><span class="line">clip_skip = 1</span><br><span class="line">sample_batch_size = 4</span><br><span class="line">prior_loss_weight = 1.0</span><br><span class="line">use_aspect_ratio_bucket = False</span><br><span class="line">scale_lr = False</span><br><span class="line">scale_lr_sqrt = False</span><br><span class="line">gradient_checkpointing = True</span><br><span class="line">pad_tokens = False</span><br><span class="line">debug_arb = False</span><br><span class="line">debug_prompt = False</span><br><span class="line">use_ema = False</span><br><span class="line">train_text_encoder = False</span><br><span class="line">restart_cycle = 1</span><br><span class="line">last_epoch = -1</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;a href=&quot;https://www.lingshulian.com/s/cc9ce03ee12f727c&quot;&gt;下载链接&lt;/a&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="AI" scheme="https://yousa.love/categories/AI/"/>
    
    
    <category term="Sherry" scheme="https://yousa.love/tags/Sherry/"/>
    
  </entry>
  
  <entry>
    <title>webUI灰原哀ckpt模型</title>
    <link href="https://yousa.love/2023/01/28/webUI%E7%81%B0%E5%8E%9F%E5%93%80ckpt%E6%A8%A1%E5%9E%8B/"/>
    <id>https://yousa.love/2023/01/28/webUI%E7%81%B0%E5%8E%9F%E5%93%80ckpt%E6%A8%A1%E5%9E%8B/</id>
    <published>2023-01-28T06:00:52.000Z</published>
    <updated>2023-03-12T02:47:27.915Z</updated>
    
    <content type="html"><![CDATA[<p>dreambooth</p><span id="more"></span><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">提示词：</span><br><span class="line">正面：masterpiece, best quality, haibara 1girl, looking at viewer</span><br><span class="line">反面：lowres, bad anatomy, bad hands, text, error, missing fingers, extra digit, fewer digits, cropped, worst quality, low quality, normal quality, jpeg artifacts, signature, watermark, username, blurry</span><br></pre></td></tr></table></figure><p><a href="https://www.lingshulian.com/s/f6139bc65981e704">3000步下载地址</a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">MD5: 2a619f10dad5d23f1716eadebcb8fdda</span><br><span class="line">SHA1: c1f150e87e3950e0ccab11c6f341c7466e3c7a95</span><br><span class="line">SHA256: 88d203fa87622fd7d9e8d720c0d53a99a3d10adc15ae23ab9d0717dad161ab06</span><br></pre></td></tr></table></figure><p><a href="https://www.lingshulian.com/s/9a83815fac71ee01">4500步下载地址</a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">MD5: d5e4ed4d972ffe75edb6706b744b3bb6</span><br><span class="line">SHA1: 6ec90a4165498b26156ce039a7dfd0c266d92965</span><br><span class="line">SHA256: 40f6099187add9a31160dac7532b93efccb67039c48708035229a125ae0f52d2</span><br></pre></td></tr></table></figure><p><a href="https://www.lingshulian.com/s/39bc8f1113787ceb">6000步下载地址</a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">MD5: ff13e308f4ac3cb927a5e61a0336e710</span><br><span class="line">SHA1: a56112f017c76e91bdb960c37aa8717a4b147e35</span><br><span class="line">SHA256: 674ed7f1a30e9aeacb0a98d4fc5731356d2bef95343bcf1d0232aaf637592732</span><br></pre></td></tr></table></figure><p>密码：</p><p><code>MD5：20cf775fa6b5dfe621ade096f5d85d52</code></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;dreambooth&lt;/p&gt;</summary>
    
    
    
    <category term="AI" scheme="https://yousa.love/categories/AI/"/>
    
    
    <category term="novelai" scheme="https://yousa.love/tags/novelai/"/>
    
  </entry>
  
  <entry>
    <title>黒鉄の魚影</title>
    <link href="https://yousa.love/2023/01/27/%E9%BB%92%E9%89%84%E3%81%AE%E9%AD%9A%E5%BD%B1/"/>
    <id>https://yousa.love/2023/01/27/%E9%BB%92%E9%89%84%E3%81%AE%E9%AD%9A%E5%BD%B1/</id>
    <published>2023-01-27T14:13:57.000Z</published>
    <updated>2023-02-01T09:47:20.656Z</updated>
    
    <content type="html"><![CDATA[<p>死ぬな、灰原——</p><span id="more"></span><p><a href="https://imgse.com/i/pSUaVBV"><img src="https://s1.ax1x.com/2023/01/27/pSUaVBV.png" alt="pSUaVBV.png"></a></p><p><a href="https://imgse.com/i/pSUUv0f"><img src="https://s1.ax1x.com/2023/01/27/pSUUv0f.jpg" alt="pSUUv0f.jpg"></a></p><p><a href="https://imgse.com/i/pSUacE8"><img src="https://s1.ax1x.com/2023/01/27/pSUacE8.png" alt="pSUacE8.png"></a></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;死ぬな、灰原——&lt;/p&gt;</summary>
    
    
    
    <category term="名探偵コナン" scheme="https://yousa.love/categories/%E5%90%8D%E6%8E%A2%E5%81%B5%E3%82%B3%E3%83%8A%E3%83%B3/"/>
    
    
    <category term="Sherry" scheme="https://yousa.love/tags/Sherry/"/>
    
  </entry>
  
  <entry>
    <title>折枝落梦</title>
    <link href="https://yousa.love/2022/11/05/%E6%8A%98%E6%9E%9D%E8%90%BD%E6%A2%A6/"/>
    <id>https://yousa.love/2022/11/05/%E6%8A%98%E6%9E%9D%E8%90%BD%E6%A2%A6/</id>
    <published>2022-11-05T13:40:18.000Z</published>
    <updated>2023-02-01T09:46:03.805Z</updated>
    
    <content type="html"><![CDATA[<p>​我们都栖息在智慧之树下，尝试阅读世界。<span id="more"></span>从土中读、从雨中读，尔后化身白鸟，攀上枝头，终于衔住了至关重要的那一片树叶。</p><p>​曾经，我是世上唯一能够做梦的个体。在我的梦里，所有人入夜后都会进入梦乡，人们的脑海中飘出奇思异想。有些滚落地面，有些浮到天上。他将所有事物连接成一片万分夺目的网，三千世界之中，又有小小世界，所有命运，皆在此间沸腾。</p><p>​我逐渐明白，这些不可被描述而又恒久变化之物，才是世间最深奥的东西。唯有它们，才能彻底祛除那些疯狂；唯有梦，才能将意识从最深沉的黑暗中唤醒。</p><p>​我乃命题之人，亦是求解之人。以世人之梦挽救世界，曾是属于我的答案。而今，你们也寻到了属于自己的答案。我会将所有的梦，归还世人。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;​	我们都栖息在智慧之树下，尝试阅读世界。</summary>
    
    
    
    <category term="Articles" scheme="https://yousa.love/categories/Articles/"/>
    
    
    <category term="Genshin" scheme="https://yousa.love/tags/Genshin/"/>
    
  </entry>
  
</feed>
